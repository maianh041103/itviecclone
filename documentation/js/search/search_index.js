var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.15,1,2.994]],["body/controllers/AppController.html",[0,1.884,1,4.906,2,1.518,3,0.159,4,0.159,5,0.107,6,4.743,7,0.573,8,1.767,9,6.694,10,1.293,11,0.013,12,5.43,13,0.727,14,5.43,15,1.423,16,2.638,17,0.289,18,2.691,19,4.743,20,3.683,21,4.743,22,0.811,23,4.667,24,4.743,25,4.407,26,3.097,27,0.159,28,0.239,29,2.051,30,2.841,31,2.952,32,3.683,33,3.458,34,5.43,35,5.43,36,1.379,37,5.43,38,0.01,39,0.01]],["title/modules/AppModule.html",[40,0.949,41,2.994]],["body/modules/AppModule.html",[1,4.097,2,1.33,3,0.095,4,0.095,5,0.064,11,0.013,17,0.325,22,0.485,23,4.388,24,2.838,25,3.726,26,1.853,27,0.095,28,0.143,32,2.203,36,0.825,38,0.007,39,0.007,40,1.298,41,6.112,42,1.319,43,1.369,44,1.481,45,1.481,46,1.369,47,2.565,48,1.481,49,2.838,50,2.838,51,2.838,52,4.673,53,4.673,54,4.673,55,4.673,56,4.673,57,4.673,58,4.673,59,4.673,60,4.673,61,4.388,62,4.673,63,4.281,64,2.168,65,1.481,66,1.481,67,3.249,68,2.565,69,3.249,70,1.61,71,0.852,72,4.155,73,3.249,74,3.249,75,4.757,76,2.203,77,3.226,78,3.249,79,2.567,80,3.249,81,1.542,82,1.106,83,1.542,84,0.908,85,3.249,86,3.249,87,3.249,88,3.249,89,3.249,90,3.249,91,3.249,92,3.249,93,3.249,94,3.249,95,3.249,96,3.249,97,2.567,98,3.249,99,2.567,100,3.249,101,3.249,102,3.249,103,2.567,104,1.272,105,3.249,106,3.249,107,3.249,108,4.757,109,3.249,110,2.567,111,3.249,112,3.249,113,1.185,114,2.838,115,1.07,116,2.838,117,4.757,118,4.757,119,3.249,120,2.838,121,2.838,122,2.567,123,2.365,124,1.61,125,1.683,126,3.249,127,2.838,128,3.249,129,3.249,130,3.249]],["title/injectables/AppService.html",[23,2.62,131,0.807]],["body/injectables/AppService.html",[3,0.176,4,0.176,5,0.118,7,0.634,8,1.879,9,6.929,11,0.012,13,0.804,15,1.574,17,0.237,22,0.897,23,4.564,27,0.176,28,0.264,36,1.525,38,0.01,39,0.01,131,1.406,132,2.19,133,5.246,134,6.006,135,1.109,136,6.006,137,6.006]],["title/controllers/AuthController.html",[0,1.15,138,2.994]],["body/controllers/AuthController.html",[0,0.88,2,0.88,3,0.092,4,0.092,5,0.062,7,0.332,8,1.219,10,1.623,11,0.013,13,0.913,15,1.786,17,0.3,18,1.56,19,2.75,20,4.139,21,2.75,22,0.47,27,0.092,28,0.138,29,1.189,30,1.96,31,2.036,36,1.73,38,0.007,39,0.007,79,2.487,99,3.673,104,2.892,113,2.015,120,2.75,121,2.75,124,1.56,138,3.384,139,2.75,140,1.495,141,2.75,142,4.649,143,4.649,144,4.649,145,4.06,146,4.367,147,4.06,148,3.148,149,4.649,150,3.148,151,2.032,152,0.813,153,1.967,154,5.569,155,3.148,156,2.483,157,3.148,158,2.242,159,4.649,160,3.148,161,0.84,162,2.738,163,3.148,164,5.184,165,3.148,166,3.148,167,3.148,168,3.148,169,3.148,170,3.148,171,3.148,172,3.148,173,3.148,174,4.06,175,3.673,176,3.148,177,2.75,178,3.148,179,1.48,180,3.148,181,2.96,182,1.709,183,4.827,184,3.313,185,1.495,186,1.379,187,2.291,188,2.487,189,3.323,190,2.487,191,1.796,192,1.327,193,2.523,194,2.487,195,4.649,196,3.148,197,4.649,198,1.631,199,0.97,200,3.384,201,3.148,202,3.148,203,3.148,204,3.148,205,2.487,206,3.148,207,3.148,208,3.148,209,3.148,210,3.148,211,3.148,212,3.148,213,3.148,214,2.135,215,3.148,216,3.148,217,3.148,218,5.527,219,3.148,220,3.148,221,2.291,222,3.148,223,4.649,224,3.148,225,1.432,226,1.148,227,1.435,228,3.148,229,3.148,230,3.148,231,3.148,232,3.148,233,3.148,234,3.148,235,3.148,236,3.148,237,3.148,238,3.148]],["title/modules/AuthModule.html",[40,0.949,52,2.79]],["body/modules/AuthModule.html",[2,1.592,3,0.123,4,0.123,5,0.083,11,0.013,17,0.322,22,0.626,25,4.173,26,2.39,27,0.123,28,0.184,38,0.008,39,0.008,40,1.492,42,1.702,43,1.766,44,1.91,45,1.91,46,1.766,47,2.948,48,2.948,52,5.605,61,4.767,63,4.501,64,2.595,65,1.91,66,1.91,68,2.948,70,2.076,71,1.098,72,4.974,103,3.311,104,1.641,110,3.311,123,4.145,138,4.708,152,0.5,158,1.171,189,4.885,190,3.311,239,3.66,240,4.191,241,3.66,242,3.66,243,5.076,244,5.076,245,4.191,246,4.191,247,5.694,248,2.669,249,3.66,250,4.191,251,3.311,252,4.191,253,4.191,254,3.626,255,3.05,256,4.191,257,2.171,258,3.311,259,1.641,260,4.191,261,3.66,262,4.191,263,4.191,264,3.66,265,4.191,266,3.66]],["title/injectables/AuthService.html",[131,0.807,189,2.474]],["body/injectables/AuthService.html",[3,0.064,4,0.064,5,0.043,7,0.231,8,0.92,11,0.013,13,0.86,15,1.444,16,1.375,17,0.287,22,0.327,25,3.717,26,1.248,27,0.064,28,0.096,29,1.326,30,2.323,31,2.205,32,1.484,36,1.631,38,0.005,39,0.005,71,0.574,81,1.039,82,0.745,83,1.039,84,0.612,104,2.888,113,1.604,115,1.156,122,1.729,123,2.556,131,0.689,132,0.798,135,1.128,145,3.841,147,3.067,151,1.754,152,0.87,153,1.698,156,2.177,158,2.037,161,0.759,162,2.915,164,4.331,174,3.841,175,4.354,177,3.067,179,1.4,181,2.236,183,5.399,189,2.111,191,1.248,192,0.922,193,2.732,194,1.729,205,3.475,214,2.381,225,2.339,226,2.343,227,3.167,251,1.729,255,1.593,261,3.067,264,1.911,266,3.841,267,1.911,268,0.981,269,4.398,270,3.841,271,3.511,272,3.511,273,3.511,274,2.188,275,2.87,276,6.181,277,3.475,278,2.607,279,2.188,280,3.067,281,3.511,282,2.188,283,3.511,284,2.188,285,3.511,286,2.188,287,3.205,288,2.188,289,3.511,290,3.841,291,2.188,292,1.593,293,2.556,294,2.236,295,2.188,296,2.188,297,2.508,298,1.133,299,1.911,300,1.911,301,1.729,302,1.484,303,1.911,304,1.484,305,1.593,306,1.484,307,1.911,308,1.729,309,2.188,310,3.475,311,2.188,312,2.188,313,2.774,314,3.511,315,2.072,316,2.188,317,3.511,318,2.188,319,2.607,320,2.188,321,1.911,322,1.853,323,3.841,324,3.511,325,3.511,326,3.511,327,4.396,328,3.511,329,3.511,330,3.511,331,3.841,332,3.511,333,3.511,334,3.511,335,4.398,336,3.511,337,4.398,338,1.133,339,3.067,340,1.911,341,3.841,342,1.911,343,1.911,344,2.774,345,1.911,346,3.511,347,2.278,348,1.911,349,1.393,350,1.316,351,1.911,352,1.729,353,1.729,354,1.911,355,1.911,356,2.774,357,1.729,358,1.911,359,2.188,360,2.188,361,2.188,362,3.511,363,2.188,364,1.911,365,2.188,366,0.922,367,2.188,368,3.511,369,1.926,370,1.316,371,2.188,372,2.188,373,2.188,374,3.511,375,2.188,376,2.188,377,2.188,378,1.819,379,1.316,380,1.248,381,2.188,382,1.248,383,2.188]],["title/classes/Company.html",[28,0.181,384,1.5]],["body/classes/Company.html",[3,0.115,4,0.115,5,0.077,7,0.415,10,1.898,11,0.013,13,1.067,17,0.215,27,0.184,28,0.173,38,0.008,39,0.008,71,1.031,84,1.524,113,1.434,135,1.234,152,0.747,161,1.071,225,1.212,259,2.134,268,1.524,315,1.866,322,1.749,366,2.637,384,1.988,385,0.998,386,2.862,387,3.762,388,2.637,389,3.568,390,2.741,391,3.1,392,3.241,393,4.943,394,2.637,395,2.741,396,5.025,397,3.932,398,3.803,399,3.932,400,3.568,401,3.762,402,4.415,403,3.932,404,3.932,405,3.932,406,3.932,407,2.823,408,3.932,409,3.932,410,3.932,411,3.932,412,3.932,413,2.364,414,3.109,415,3.107,416,2.504,417,2.637,418,2.862,419,3.434]],["title/classes/Company-1.html",[28,0.151,384,1.251,420,1.862]],["body/classes/Company-1.html",[3,0.13,4,0.13,5,0.087,7,0.466,10,1.405,11,0.012,13,0.79,17,0.279,27,0.13,28,0.312,33,3.757,38,0.009,39,0.009,84,1.649,113,1.611,135,1.201,152,0.846,161,0.914,179,1.879,199,1.361,268,1.649,294,3.757,315,1.981,384,2.694,385,1.122,391,2.189,398,3.442,407,2.288,417,2.487,421,5.25,422,3.216,423,5.154,424,4.418,425,4.418,426,3.756,427,5.803,428,2.398,429,4.295,430,4.662,431,5.803,432,3.734,433,4.002,434,5.803,435,3.548,436,4.295,437,3.365,438,1.862,439,2.657,440,3.216,441,2.52,442,3.216,443,2.31,444,3.491,445,3.491,446,5.154,447,5.154,448,4.295,449,5.154,450,3.057,451,3.491,452,3.491,453,2.657]],["title/classes/Company-2.html",[28,0.151,125,1.777,384,1.251]],["body/classes/Company-2.html",[3,0.113,4,0.113,5,0.076,7,0.406,10,1.278,11,0.013,13,0.718,16,3.158,17,0.264,27,0.157,28,0.309,38,0.008,39,0.008,84,1.5,115,2.656,135,1.228,152,0.84,161,0.863,199,1.184,226,1.401,268,1.5,287,2.447,304,4.191,315,1.843,322,2.133,338,2.779,384,2.566,385,0.976,387,3.226,417,2.261,426,3.677,428,2.086,432,3.741,433,3.638,435,3.226,437,3.06,438,1.62,443,2.1,450,2.779,454,2.606,455,3.843,456,3.843,457,3.936,458,2.192,459,3.345,460,4.111,461,3.06,462,3.226,463,4.239,464,4.239,465,4.239,466,3.638,467,3.905,468,2.311]],["title/controllers/CompanyController.html",[0,1.15,469,2.994]],["body/controllers/CompanyController.html",[0,0.957,2,0.957,3,0.1,4,0.1,5,0.067,7,0.361,8,1.295,10,1.604,11,0.013,13,0.902,15,1.765,17,0.292,18,2.449,20,4.307,22,0.511,27,0.1,28,0.151,29,1.293,30,1.443,31,1.5,36,1.71,38,0.007,39,0.007,82,1.166,124,3.146,135,1.263,140,1.625,151,2.008,152,0.804,153,1.944,154,5.321,156,2.699,158,2.27,161,0.869,182,2.682,184,3.148,185,1.625,186,1.5,191,1.952,192,1.443,198,1.773,199,1.055,221,2.492,357,2.705,384,1.802,459,1.443,467,2.492,469,3.597,470,2.99,471,5.066,472,1.474,473,2.355,474,2.007,475,2.007,476,1.935,477,2.99,478,4.468,479,3.423,480,4.942,481,4.942,482,3.423,483,1.773,484,2.782,485,3.423,486,3.423,487,2.56,488,1.39,489,3.423,490,2.609,491,3.423,492,1.39,493,3.423,494,3.423,495,1.625,496,5.022,497,3.147,498,3.423,499,1.858,500,1.952,501,2.083,502,2.99,503,3.693,504,2.99,505,1.39,506,3.905,507,1.39,508,3.423,509,3.423,510,3.423,511,2.059,512,3.423,513,2.18,514,3.423,515,2.99,516,3.423,517,1.952,518,3.423,519,1.952,520,3.423,521,2.18,522,3.423,523,3.423,524,2.18,525,3.423,526,2.705,527,3.423,528,3.423,529,1.952,530,1.952,531,3.423]],["title/modules/CompanyModule.html",[40,0.949,53,2.79]],["body/modules/CompanyModule.html",[2,1.865,3,0.157,4,0.157,5,0.105,11,0.013,17,0.309,22,0.799,27,0.157,28,0.235,38,0.01,39,0.01,40,1.678,42,2.17,43,2.253,44,2.436,45,2.436,46,2.253,47,3.316,48,3.042,53,5.425,64,3.042,65,2.436,66,2.436,68,2.436,70,2.648,71,1.401,152,0.638,257,2.769,259,2.092,384,1.949,418,4.858,469,5.296,503,5.094,504,4.668,532,4.668,533,4.668,534,5.345,535,5.345,536,4.668,537,4.668]],["title/injectables/CompanyService.html",[131,0.807,503,2.62]],["body/injectables/CompanyService.html",[3,0.083,4,0.083,5,0.056,7,0.299,8,1.125,11,0.013,13,0.877,15,1.631,17,0.288,22,0.423,27,0.083,28,0.189,29,1.069,30,1.193,36,1.579,38,0.006,39,0.006,71,0.742,81,1.343,82,1.765,83,1.343,84,1.449,104,3.043,115,1.413,124,3.244,131,0.842,132,1.032,135,1.167,151,1.953,152,0.781,153,1.89,156,2.577,158,2.006,161,0.844,162,3.082,179,1.367,192,1.193,225,1.917,227,3.1,278,2.998,297,1.614,298,1.465,315,1.953,322,1.449,347,2.223,350,1.701,356,4.572,369,2.535,378,2.223,382,2.957,384,2.268,388,1.193,390,1.239,394,1.193,395,1.239,415,2.235,420,1.536,438,1.193,443,2.563,472,1.28,473,1.742,474,1.742,475,1.742,476,1.68,477,3.748,478,4.332,483,2.223,484,2.271,487,2.686,488,1.742,490,2.469,492,1.742,495,2.038,496,4.752,501,2.185,503,2.733,505,1.149,506,3.391,507,1.149,526,2.235,536,2.471,538,2.471,539,2.829,540,2.829,541,4.291,542,2.829,543,2.829,544,2.829,545,2.829,546,2.829,547,1.701,548,1.614,549,1.614,550,2.829,551,2.829,552,2.829,553,3.118,554,1.701,555,2.581,556,1.701,557,1.701,558,1.701,559,1.701,560,1.701,561,3.118,562,2.829,563,2.829,564,4.291,565,2.829,566,4.291,567,2.829,568,2.829,569,2.581,570,2.829,571,2.829,572,2.235,573,1.701,574,2.829,575,1.701,576,1.402,577,3.748,578,2.235,579,1.343,580,2.829,581,3.748,582,3.748,583,2.059,584,1.701,585,4.291,586,2.829,587,2.829,588,1.701,589,2.471,590,2.235,591,2.829,592,2.829,593,2.581,594,3.391,595,2.829,596,4.291,597,2.829]],["title/classes/CreateCompanyDto.html",[28,0.181,478,2.62]],["body/classes/CreateCompanyDto.html",[3,0.136,4,0.136,5,0.092,7,0.491,10,1.723,11,0.013,13,0.969,16,2.832,17,0.24,27,0.136,28,0.268,38,0.009,39,0.009,115,2.625,135,1.234,152,0.897,161,0.933,199,1.433,268,1.706,385,1.18,387,4.518,391,3.723,393,5.937,426,3.424,432,3.424,438,1.96,459,3.362,460,4.131,478,3.887,598,6.563,599,3.674,600,4.127,601,4.65,602,4.65,603,4.65,604,4.65]],["title/classes/CreateFileDto.html",[28,0.181,605,2.62]],["body/classes/CreateFileDto.html",[3,0.19,4,0.19,5,0.127,11,0.012,27,0.19,28,0.284,38,0.011,39,0.011,385,1.641,605,4.765,606,5.646,607,5.107]],["title/classes/CreateJobDto.html",[28,0.181,439,2.474]],["body/classes/CreateJobDto.html",[3,0.108,4,0.108,5,0.072,7,0.388,10,1.853,11,0.013,13,1.042,17,0.258,27,0.108,28,0.289,33,3.312,38,0.008,39,0.008,84,1.454,113,1.896,135,1.218,152,0.783,161,1.025,179,1.656,199,1.133,268,1.454,294,3.312,315,1.096,384,2.694,385,0.933,391,2.99,398,3.398,407,2.694,417,1.55,421,6.217,422,2.676,423,5.271,426,3.65,427,5.271,428,1.996,429,3.785,430,4.109,431,6.046,432,3.621,433,3.527,434,5.271,435,3.127,436,3.785,437,2.966,438,1.55,439,3.127,440,2.676,441,3.441,442,4.392,443,2.568,444,4.768,445,4.768,446,4.542,447,4.542,448,3.785,449,4.542,450,2.694,451,4.768,452,4.768,453,3.629,608,3.211,609,3.676,610,3.676,611,5.2,612,3.676,613,3.676,614,3.676,615,3.676,616,3.676,617,5.2,618,3.676,619,3.676,620,3.676,621,3.676,622,3.676]],["title/classes/CreatePermissionDto.html",[28,0.181,623,2.62]],["body/classes/CreatePermissionDto.html",[3,0.136,4,0.136,5,0.092,7,0.491,10,1.723,11,0.013,13,0.969,16,2.832,17,0.24,27,0.136,28,0.268,38,0.009,39,0.009,40,1.733,115,2.625,135,1.234,152,0.897,161,0.933,199,1.433,268,1.706,385,1.18,426,3.424,432,3.424,438,1.96,459,3.362,460,4.131,600,4.127,623,3.887,624,6.563,625,3.674,626,4.785,627,4.785,628,4.65,629,4.65,630,4.65,631,4.65]],["title/classes/CreateResumeDto.html",[28,0.181,632,2.474]],["body/classes/CreateResumeDto.html",[3,0.102,4,0.102,5,0.068,7,0.366,10,1.678,11,0.013,13,0.944,16,3.149,17,0.252,27,0.146,28,0.281,38,0.007,39,0.007,84,1.393,115,2.678,135,1.124,161,0.936,199,1.067,268,1.393,322,2.029,369,3.086,385,0.879,417,3.132,426,2.91,428,1.88,432,3.5,435,2.083,437,1.976,438,1.46,450,2.582,457,3.174,459,3.39,460,4.07,461,2.843,462,2.997,490,2.482,632,2.997,633,5.736,634,2.521,635,5.59,636,5.59,637,4.068,638,5.284,639,4.924,640,7.045,641,4.353,642,5.567,643,3.464,644,2.737,645,3.464,646,3.464,647,3.464,648,3.464,649,3.464,650,5.346,651,2.206]],["title/classes/CreateRoleDto.html",[28,0.181,652,2.62]],["body/classes/CreateRoleDto.html",[3,0.127,4,0.127,5,0.085,7,0.457,10,1.674,11,0.013,13,0.941,16,2.872,17,0.277,27,0.127,28,0.289,38,0.008,39,0.008,84,1.626,113,2.121,115,2.584,135,1.088,152,0.921,161,0.946,199,1.332,268,1.626,319,3.405,369,2.548,385,1.098,391,3.634,407,3.641,417,2.452,426,3.343,428,2.347,429,4.234,430,4.596,432,3.343,437,2.466,438,1.823,440,3.147,450,3.013,453,3.952,459,3.308,460,3.913,600,4.009,650,5.193,652,3.704,653,6.407,654,3.416,655,4.324,656,5.816,657,5.816,658,4.324,659,5.08,660,4.324,661,4.324,662,4.324,663,4.324]],["title/classes/CreateSubscriberDto.html",[28,0.181,664,2.62]],["body/classes/CreateSubscriberDto.html",[3,0.127,4,0.127,5,0.086,7,0.458,10,1.569,11,0.012,13,0.882,16,3.025,17,0.23,27,0.127,28,0.257,38,0.009,39,0.009,113,2.127,115,2.586,135,1.171,152,0.877,161,0.849,199,1.338,268,1.63,322,2.16,369,2.555,385,1.102,426,3.209,429,4.246,432,3.209,436,4.246,438,1.83,440,3.161,441,4.539,450,3.648,457,3.714,459,3.311,460,3.805,462,4.234,589,5.095,590,5.564,600,3.327,642,4.609,659,5.095,664,3.714,665,6.151,666,3.431,667,4.342,668,5.833,669,4.342,670,4.342,671,4.342,672,4.342,673,4.342,674,5.095,675,5.833,676,5.095,677,4.342,678,4.342,679,4.342]],["title/classes/CreateUserCvDto.html",[28,0.181,651,2.62]],["body/classes/CreateUserCvDto.html",[3,0.112,4,0.112,5,0.075,7,0.403,10,1.466,11,0.013,13,0.824,16,3.176,17,0.263,27,0.157,28,0.293,38,0.008,39,0.008,84,1.492,115,2.653,135,1.086,161,0.86,199,1.175,268,1.492,322,1.721,369,3.185,385,0.968,417,3.147,426,3.039,428,2.07,432,3.573,435,2.294,437,2.175,438,1.608,450,1.976,457,3.398,459,3.371,460,4.061,461,2.175,462,2.294,490,2.562,600,3.511,632,2.294,633,5.268,634,2.776,635,5.707,636,5.707,637,3.209,638,5.434,639,3.884,641,4.661,642,5.745,650,5.544,651,3.398,680,3.814,681,3.814,682,3.814]],["title/classes/CreateUserDto.html",[28,0.181,458,2.346]],["body/classes/CreateUserDto.html",[3,0.096,4,0.096,5,0.065,7,0.346,10,1.699,11,0.013,13,0.956,16,3.098,17,0.245,27,0.14,28,0.291,38,0.007,39,0.007,84,1.338,115,2.693,135,1.234,152,0.79,161,0.962,199,1.009,226,2.062,268,1.338,287,2.085,304,4.961,315,0.977,322,2.194,338,3.222,384,2.602,385,0.831,387,3.74,417,1.38,426,3.577,428,1.777,432,3.607,433,3.245,435,2.878,437,2.729,438,1.38,443,2.214,450,2.929,454,2.221,457,3.601,458,2.729,459,3.401,460,4.156,461,3.225,462,3.4,463,4.468,464,4.468,465,4.468,466,4.218,467,4.116,468,2.878,600,3.941,608,2.86,644,2.587,683,3.275,684,3.275,685,3.275,686,3.275,687,3.275,688,3.275,689,3.275]],["title/controllers/DatabasesController.html",[0,1.15,690,2.994]],["body/controllers/DatabasesController.html",[0,1.709,2,1.709,3,0.18,4,0.18,5,0.12,11,0.012,17,0.285,22,0.914,27,0.18,28,0.269,31,2.679,38,0.011,39,0.011,140,2.903,690,5.272,691,5.341,692,6.115,693,4.914,694,5.341,695,6.115,696,2.787]],["title/modules/DatabasesModule.html",[40,0.949,54,2.79]],["body/modules/DatabasesModule.html",[2,1.748,3,0.142,4,0.142,5,0.095,11,0.013,17,0.317,22,0.721,27,0.142,28,0.212,38,0.009,39,0.009,40,1.6,42,1.959,43,2.034,44,2.199,45,2.199,46,2.034,47,3.162,48,2.199,54,5.451,63,4.685,64,2.85,65,2.199,66,2.199,68,2.85,70,2.391,71,1.265,152,0.828,158,1.349,226,1.76,249,4.215,254,3.982,255,3.513,257,2.5,258,3.813,259,2.716,690,5.05,693,4.961,694,4.215,697,4.215,698,4.826,699,4.215,700,4.826,701,4.826,702,3.982,703,3.273,704,2.391,705,4.241,706,3.813,707,3.273,708,3.813]],["title/injectables/DatabasesService.html",[131,0.807,693,2.62]],["body/injectables/DatabasesService.html",[3,0.102,4,0.102,5,0.068,7,0.365,8,1.305,11,0.013,13,0.667,15,0.906,17,0.298,22,0.517,25,4.363,26,1.972,27,0.102,28,0.152,29,1.88,30,2.85,38,0.007,39,0.007,71,0.906,81,1.642,82,1.177,83,1.642,84,0.967,104,2.283,113,2.127,115,1.138,131,0.977,132,1.261,151,1.031,152,0.903,153,0.998,158,1.391,161,0.446,225,2.17,226,2.127,227,3.447,255,2.517,275,3.639,277,3.933,278,3.977,280,5.095,298,1.791,302,3.955,306,2.345,307,3.021,308,2.732,313,2.732,315,1.739,319,3.305,322,1.391,338,2.579,349,2.202,350,2.08,352,5.041,353,3.933,384,1.815,387,2.994,391,2.466,453,2.994,459,2.459,466,3.376,468,2.994,581,3.021,582,3.021,693,3.17,703,2.345,704,1.713,706,2.732,709,3.021,710,7.041,711,3.021,712,5.095,713,4.608,714,3.458,715,3.458,716,2.517,717,2.345,718,4.608,719,2.732,720,3.458,721,2.517,722,3.458,723,3.021,724,3.458,725,3.021,726,3.021,727,4.978,728,3.458,729,4.978,730,3.458,731,4.978,732,3.458,733,4.245,734,3.458,735,3.458,736,3.458,737,3.458,738,2.732,739,2.732,740,3.458,741,2.732,742,3.458,743,3.933,744,3.458,745,3.458,746,3.021,747,3.021,748,2.345,749,4.978,750,3.458,751,4.348,752,4.978,753,3.458,754,3.458,755,4.978,756,4.978,757,3.458,758,3.458,759,3.458,760,3.458]],["title/classes/File.html",[5,0.081,28,0.181]],["body/classes/File.html",[3,0.19,4,0.19,5,0.156,11,0.012,27,0.19,28,0.285,38,0.011,39,0.011,385,1.646,761,5.664]],["title/controllers/FilesController.html",[0,1.15,762,2.994]],["body/controllers/FilesController.html",[0,1.07,2,1.07,3,0.112,4,0.112,5,0.132,7,0.404,8,1.403,10,1.673,11,0.013,13,0.941,15,1.842,17,0.294,18,1.897,22,0.572,27,0.112,28,0.168,31,1.677,36,1.784,38,0.008,39,0.008,82,1.304,135,1.199,140,1.818,151,1.992,152,0.797,153,1.928,161,0.861,179,1.219,182,2.904,184,2.904,185,1.818,186,1.677,191,2.184,198,1.983,199,1.18,473,2.712,474,2.173,475,2.173,476,2.095,488,1.555,490,2.565,492,1.555,495,1.818,497,3.407,499,2.078,500,2.184,505,1.555,507,1.555,517,3.052,519,2.184,521,2.438,529,3.052,530,2.184,605,2.438,696,1.745,762,3.895,763,3.344,764,3.025,765,5.351,766,3.828,767,3.828,768,3.828,769,5.17,770,3.828,771,3.828,772,6.168,773,3.828,774,4.674,775,3.828,776,3.828,777,4.674,778,3.828,779,3.828,780,5.351,781,3.828,782,3.928,783,3.344,784,4.228,785,3.828,786,2.787,787,3.828,788,3.828,789,3.828,790,3.828,791,3.828,792,3.828,793,3.828,794,3.828,795,3.828,796,3.828,797,3.828,798,3.828,799,3.828,800,3.828,801,3.828,802,3.828,803,3.828,804,3.828,805,3.828,806,3.828,807,3.828]],["title/modules/FilesModule.html",[40,0.949,55,2.79]],["body/modules/FilesModule.html",[2,1.878,3,0.159,4,0.159,5,0.106,11,0.013,17,0.31,22,0.807,27,0.159,28,0.238,38,0.01,39,0.01,40,1.686,42,2.193,43,2.277,44,2.462,45,2.462,46,2.277,47,3.332,48,2.462,55,5.439,64,3.062,65,2.462,66,2.462,68,2.462,127,4.718,191,3.081,762,5.322,782,5.107,783,4.718,786,3.932,808,4.718,809,4.718,810,5.401,811,5.401,812,5.401,813,4.89,814,5.401,815,5.401]],["title/injectables/FilesService.html",[131,0.807,782,2.62]],["body/injectables/FilesService.html",[3,0.131,4,0.131,5,0.146,7,0.471,8,1.556,11,0.013,13,0.992,15,2.039,17,0.263,22,0.666,27,0.131,28,0.196,36,1.881,38,0.009,39,0.009,131,1.164,132,1.625,135,1.147,151,2.122,152,0.849,153,2.054,161,0.918,179,1.419,443,3.131,472,1.77,473,2.889,474,2.41,475,2.41,476,2.323,488,2.41,490,2.685,492,2.41,495,2.818,505,1.81,507,1.81,605,4.719,764,3.521,769,5.275,782,3.779,784,4.689,816,3.893,817,5.935,818,4.456,819,4.456,820,4.456,821,4.456,822,4.456,823,7.41,824,4.456,825,4.456,826,4.456]],["title/controllers/HealthController.html",[0,1.15,827,2.994]],["body/controllers/HealthController.html",[0,1.51,2,1.51,3,0.159,4,0.159,5,0.106,7,0.57,8,1.761,10,1.286,11,0.013,13,0.723,15,1.416,17,0.288,22,0.807,27,0.159,28,0.238,29,2.04,30,2.832,36,1.371,38,0.01,39,0.01,104,2.862,140,2.565,184,3.646,186,2.366,293,4.89,310,6.044,827,4.89,828,4.718,829,5.401,830,5.401,831,5.401,832,7.311,833,5.401,834,6.718,835,6.718,836,4.268,837,5.401,838,5.401,839,5.401,840,5.401]],["title/modules/HealthModule.html",[40,0.949,56,2.79]],["body/modules/HealthModule.html",[2,2.007,3,0.177,4,0.177,5,0.119,11,0.012,17,0.302,22,0.9,27,0.177,28,0.265,38,0.01,39,0.01,40,1.656,42,2.446,56,4.869,68,2.746,827,5.582,836,4.76,841,6.024,842,6.024,843,7.179]],["title/interfaces/IUser.html",[156,1.449,844,2.62]],["body/interfaces/IUser.html",[3,0.156,4,0.156,5,0.105,7,0.561,11,0.012,27,0.156,38,0.01,39,0.01,40,1.226,135,1.316,152,0.953,153,1.92,156,2.343,161,1.066,226,2.774,268,1.859,315,2.382,319,3.94,322,2.126,400,4.338,626,3.386,844,3.386,845,4.201,846,4.644]],["title/classes/Job.html",[28,0.181,847,2.131]],["body/classes/Job.html",[3,0.094,4,0.094,5,0.063,7,0.339,10,1.935,11,0.013,13,1.088,17,0.186,27,0.164,28,0.141,38,0.007,39,0.007,71,0.842,84,1.319,113,1.172,135,1.258,152,0.736,161,1.078,225,0.99,259,1.847,268,1.319,315,1.838,322,1.563,366,2.357,384,2.039,385,0.816,388,2.357,389,3.19,390,2.45,391,2.771,392,2.897,393,4.87,394,2.357,395,2.45,396,5.085,398,3.769,400,3.515,401,3.706,402,4.376,407,3.192,413,1.932,414,2.691,416,2.046,417,2.598,441,3.19,442,4.071,443,2.413,444,4.419,445,4.419,451,4.419,452,4.419,453,3.363,847,2.444,848,2.338,849,4.885,850,3.213,851,3.213,852,3.213,853,3.213,854,3.213,855,3.213,856,3.213,857,3.213,858,3.213,859,3.213,860,3.213,861,3.213,862,3.213,863,3.213,864,3.213,865,3.213,866,3.213,867,3.213,868,3.213,869,2.338,870,2.179,871,2.806]],["title/controllers/JobsController.html",[0,1.15,872,2.994]],["body/controllers/JobsController.html",[0,0.994,2,0.994,3,0.104,4,0.104,5,0.07,7,0.375,8,1.331,10,1.627,11,0.013,13,0.915,15,1.791,17,0.288,18,2.516,22,0.531,27,0.104,28,0.156,31,1.557,36,1.735,38,0.007,39,0.007,82,1.21,135,1.269,140,1.688,151,2.038,152,0.816,153,1.973,156,2.721,158,2.27,161,0.881,179,1.617,182,2.756,184,3.215,185,1.688,186,1.557,192,1.498,198,1.841,199,1.095,439,4.274,472,1.514,473,2.062,474,2.062,475,2.062,476,1.988,483,1.841,484,2.83,487,2.63,488,1.443,490,2.577,492,1.443,495,1.688,497,2.264,499,1.929,500,2.027,501,2.14,505,1.443,507,1.443,511,2.138,513,3.233,517,2.027,519,2.027,521,2.264,529,2.027,530,2.027,579,3.068,696,1.62,847,3.875,872,3.696,873,3.105,874,4.68,875,3.105,876,2.587,877,3.555,878,2.587,879,3.555,880,3.555,881,3.105,882,3.555,883,3.555,884,2.587,885,3.555,886,5.073,887,2.587,888,3.555,889,3.772,890,3.105,891,4.012,892,3.555,893,3.555,894,2.411,895,3.555,896,3.555,897,2.411,898,2.411,899,3.555,900,3.555,901,2.411,902,3.555,903,2.587,904,3.555]],["title/modules/JobsModule.html",[40,0.949,57,2.79]],["body/modules/JobsModule.html",[2,1.872,3,0.158,4,0.158,5,0.106,11,0.012,17,0.31,22,0.803,27,0.158,28,0.236,38,0.01,39,0.01,40,1.682,42,2.182,43,2.265,44,2.449,45,2.449,46,2.265,47,3.324,48,2.449,57,5.432,64,3.051,65,2.449,66,2.449,68,2.449,70,2.662,71,1.408,152,0.641,257,2.783,259,2.103,847,2.783,870,4.541,872,5.309,889,5.101,890,4.693,905,4.693,906,4.693,907,5.373,908,5.373,909,4.693,910,3.911]],["title/injectables/JobsService.html",[131,0.807,889,2.62]],["body/injectables/JobsService.html",[3,0.081,4,0.081,5,0.054,7,0.29,8,1.101,11,0.013,13,0.867,15,1.61,17,0.28,22,0.411,27,0.081,28,0.121,29,1.038,30,1.159,36,1.807,38,0.006,39,0.006,71,0.721,81,1.305,82,1.734,83,1.305,84,1.424,104,3.027,115,1.877,124,3.043,125,1.424,131,0.824,132,1.002,135,1.159,151,1.931,152,0.773,153,1.869,156,2.558,158,1.989,161,0.835,162,3.043,179,0.875,192,1.159,225,1.294,227,3.07,278,2.954,297,1.568,298,1.424,315,2.071,322,1.424,347,1.424,366,1.159,369,2.498,370,2.525,378,2.954,379,2.525,380,3.693,382,2.905,388,1.159,390,1.204,394,1.159,395,1.204,420,1.492,439,3.893,443,2.535,472,1.252,473,1.705,474,1.705,475,1.705,476,1.644,483,2.175,484,2.231,487,2.639,488,1.705,490,2.601,492,1.705,495,1.994,501,1.159,505,1.116,507,1.116,547,1.653,548,1.568,549,1.568,553,3.063,554,1.653,555,3.063,556,1.653,557,1.653,558,1.653,559,1.653,560,1.653,561,3.429,569,3.063,573,1.653,575,1.653,576,1.362,579,1.305,584,1.653,588,1.653,593,3.063,847,1.424,869,2.001,875,3.667,886,4.71,889,2.674,891,3.317,909,2.401,911,2.401,912,2.749,913,2.749,914,3.667,915,2.749,916,2.749,917,2.749,918,2.749,919,2.749,920,2.749,921,2.749,922,2.749,923,2.749,924,2.749,925,2.674,926,2.749,927,2.674,928,1.751,929,1.751,930,2.749,931,1.751,932,2.001,933,1.751,934,1.751,935,2.674,936,1.864,937,1.751,938,1.751,939,1.751,940,1.751,941,2.749,942,2.749,943,2.749,944,4.198,945,2.749]],["title/injectables/JwtAuthGuard.html",[77,2.79,131,0.807]],["body/injectables/JwtAuthGuard.html",[3,0.197,4,0.113,5,0.076,7,0.407,8,1.408,11,0.013,13,0.829,15,1.408,16,1.507,17,0.277,20,4.196,22,0.575,27,0.113,28,0.169,29,1.454,36,1.7,38,0.008,39,0.008,76,2.611,77,3.643,113,1.959,115,1.768,131,1.054,132,1.404,135,0.596,151,1.845,152,0.738,153,1.786,158,1.968,161,0.798,175,3.042,179,1.711,186,1.687,191,2.196,225,2.247,248,2.452,319,1.994,344,4.888,347,2.783,369,1.687,378,1.994,459,1.623,468,2.315,577,3.363,583,2.802,627,3.421,637,3.72,674,3.363,696,1.755,741,3.042,946,5.29,947,3.042,948,2.551,949,5.372,950,5.372,951,5.372,952,3.363,953,5.763,954,3.85,955,5.372,956,5.448,957,3.85,958,4.873,959,5.372,960,3.85,961,6.187,962,3.85,963,3.85,964,4.692,965,3.363,966,3.042,967,3.042,968,3.042,969,3.363,970,3.363,971,5.404,972,3.85,973,4.244,974,5.372,975,3.85,976,3.85,977,3.85,978,3.85,979,3.85,980,3.643,981,3.85,982,3.85,983,3.85,984,3.85,985,3.85,986,4.692,987,3.85,988,3.85,989,3.363,990,3.363,991,3.363,992,3.363]],["title/injectables/JwtStrategy.html",[131,0.807,243,2.79]],["body/injectables/JwtStrategy.html",[3,0.129,4,0.129,5,0.087,7,0.465,8,1.544,11,0.013,13,0.789,15,1.156,17,0.299,22,0.659,25,4.568,26,2.514,27,0.129,28,0.194,29,2.225,30,2.484,32,2.989,33,2.807,36,1.496,38,0.009,39,0.009,104,2.598,131,1.156,132,1.608,151,1.757,152,0.846,153,1.701,156,2.496,161,0.76,162,2.184,192,1.858,193,3.845,194,3.483,205,5.244,221,3.209,225,1.816,226,2.149,227,2.009,243,3.996,248,2.807,315,1.757,319,2.283,322,1.647,323,5.147,448,3.209,459,1.858,524,2.807,578,3.483,583,3.209,738,3.483,739,3.483,741,3.483,948,2.798,968,3.483,989,3.85,991,5.147,993,3.85,994,5.147,995,5.147,996,4.408,997,4.408,998,5.892,999,4.408,1000,3.85,1001,4.408,1002,3.85,1003,3.483,1004,3.85,1005,4.408,1006,4.408,1007,4.408,1008,2.989,1009,4.408,1010,4.408,1011,4.408,1012,4.408,1013,4.408,1014,4.408,1015,4.408,1016,4.408,1017,3.85,1018,4.408,1019,4.408,1020,4.408,1021,4.408,1022,4.408]],["title/injectables/LocalAuthGuard.html",[131,0.807,187,2.994]],["body/injectables/LocalAuthGuard.html",[3,0.181,4,0.181,5,0.121,11,0.012,17,0.286,22,0.919,27,0.181,28,0.271,38,0.011,39,0.011,131,1.426,132,2.243,187,5.291,248,3.917,947,4.86,948,3.451,965,5.373,1023,5.373,1024,7.269]],["title/injectables/LocalStrategy.html",[131,0.807,244,2.79]],["body/injectables/LocalStrategy.html",[3,0.144,4,0.144,5,0.097,7,0.519,8,1.66,11,0.013,13,0.848,15,1.289,16,1.926,17,0.291,22,0.735,27,0.144,28,0.216,29,1.858,36,1.249,38,0.009,39,0.009,104,2.741,115,1.619,131,1.242,132,1.794,135,1.212,151,1.888,152,0.756,153,1.828,158,1.957,161,0.817,179,1.566,188,3.887,189,4.709,190,3.887,221,3.58,225,1.516,227,2.242,244,4.294,248,3.132,292,3.58,293,4.608,338,3.83,347,2.548,369,2.155,378,2.548,696,2.242,948,3.006,964,5.53,968,3.887,994,5.53,995,5.53,1000,4.297,1002,4.297,1003,3.887,1025,4.297,1026,4.919,1027,4.919,1028,6.331,1029,4.919,1030,4.919,1031,4.919]],["title/controllers/MailController.html",[0,1.15,1032,2.994]],["body/controllers/MailController.html",[0,1.482,2,1.482,3,0.156,4,0.156,5,0.104,7,0.56,8,1.741,10,1.263,11,0.013,13,0.71,15,1.39,17,0.308,22,0.792,27,0.156,28,0.233,31,2.323,38,0.01,39,0.01,97,4.19,140,2.518,185,2.518,186,2.323,198,2.747,199,1.634,322,1.482,696,2.417,733,5.811,1032,4.834,1033,4.632,1034,5.303,1035,6.638,1036,5.303,1037,5.303,1038,5.303,1039,4.632,1040,4.617,1041,4.632,1042,4.504,1043,5.801,1044,5.303,1045,5.303,1046,5.303,1047,5.303]],["title/modules/MailModule.html",[40,0.949,58,2.79]],["body/modules/MailModule.html",[2,1.635,3,0.128,4,0.128,5,0.086,11,0.013,17,0.314,22,0.652,25,4.242,26,2.487,27,0.128,28,0.192,38,0.009,39,0.009,40,1.522,42,2.375,43,1.838,44,1.988,45,1.988,46,1.838,47,3.008,48,1.988,58,5.136,64,2.666,65,1.988,66,1.988,68,1.988,70,2.161,71,1.143,103,3.446,104,1.707,110,3.446,113,2.407,141,3.809,152,0.698,158,1.219,179,1.389,257,2.259,259,2.29,290,3.809,847,2.259,870,3.967,910,3.174,1008,3.967,1032,4.805,1040,4.823,1041,3.809,1048,3.809,1049,3.809,1050,4.361,1051,4.361,1052,3.809,1053,4.258,1054,3.446,1055,5.85,1056,4.361,1057,2.622,1058,3.967,1059,3.809,1060,3.446,1061,3.446,1062,4.361,1063,4.361,1064,4.361,1065,4.361,1066,4.361,1067,4.361,1068,4.361,1069,4.361,1070,3.809,1071,3.809,1072,3.809,1073,4.361,1074,4.361,1075,4.361,1076,4.361,1077,4.361,1078,4.361,1079,4.361]],["title/injectables/MailService.html",[131,0.807,1040,2.62]],["body/injectables/MailService.html",[3,0.128,4,0.128,5,0.086,7,0.46,8,1.533,11,0.013,13,0.783,15,1.143,17,0.298,22,0.652,27,0.128,28,0.192,29,2.21,30,2.782,36,1.107,38,0.009,39,0.009,71,1.143,81,2.071,82,1.485,83,2.071,84,1.219,104,2.584,131,1.148,132,1.59,151,1.301,152,0.788,153,1.259,161,0.562,179,1.389,184,3.583,225,2.034,227,3.008,278,4.007,298,2.259,384,1.59,441,3.336,442,3.174,748,2.958,847,3.03,869,3.174,874,5.216,910,3.174,914,5.766,958,3.174,1035,6.161,1040,3.725,1052,3.809,1053,3.174,1054,3.446,1057,3.518,1059,3.809,1060,3.446,1061,3.446,1070,3.809,1071,3.809,1080,3.809,1081,4.361,1082,7.573,1083,6.601,1084,4.361,1085,4.361,1086,3.174,1087,3.809,1088,4.361,1089,5.85,1090,4.361,1091,4.361,1092,4.361,1093,4.361,1094,4.361,1095,4.361,1096,4.361,1097,4.361,1098,4.361,1099,5.85,1100,4.361,1101,4.361]],["title/injectables/MulterConfigService.html",[131,0.807,813,2.994]],["body/injectables/MulterConfigService.html",[3,0.109,4,0.109,5,0.13,7,0.39,8,1.368,11,0.013,13,0.811,15,1.368,17,0.284,22,0.552,27,0.109,28,0.163,33,2.354,36,1.536,38,0.008,39,0.008,113,1.348,131,1.024,132,1.348,135,0.937,151,1.102,152,0.623,153,1.067,154,4.125,161,0.477,191,2.108,214,4.104,225,1.139,268,1.459,293,3.8,294,2.354,349,2.354,350,2.223,380,3.956,448,2.691,461,2.108,472,1.102,524,4.584,578,2.921,583,3.8,704,1.831,721,2.691,725,3.229,726,3.229,739,2.921,777,3.229,786,3.8,813,3.8,849,3.229,969,4.56,980,3.54,1017,3.229,1039,3.229,1072,3.229,1102,3.229,1103,6.052,1104,6.576,1105,5.22,1106,3.696,1107,6.052,1108,5.22,1109,3.696,1110,3.696,1111,3.696,1112,5.22,1113,3.696,1114,3.696,1115,5.22,1116,5.22,1117,5.22,1118,3.696,1119,3.696,1120,3.696,1121,3.696,1122,3.696,1123,3.229,1124,3.229,1125,3.229,1126,6.576,1127,3.696,1128,3.696,1129,3.696,1130,3.696,1131,3.696,1132,3.696,1133,3.696,1134,3.696,1135,3.696,1136,5.22,1137,5.22,1138,3.696,1139,3.696,1140,5.22,1141,3.696,1142,3.696,1143,3.696,1144,3.696,1145,6.052,1146,3.696,1147,3.696,1148,3.696,1149,3.696,1150,3.696,1151,3.696,1152,3.696,1153,3.696,1154,3.696,1155,3.696,1156,3.696,1157,3.696,1158,3.696,1159,5.22,1160,3.696,1161,3.696,1162,3.696,1163,3.696,1164,5.22,1165,3.696,1166,3.696,1167,3.696,1168,5.22,1169,3.696,1170,5.22,1171,3.696,1172,5.22,1173,3.696]],["title/classes/Permission.html",[28,0.181,704,2.038]],["body/classes/Permission.html",[3,0.115,4,0.115,5,0.077,7,0.415,10,1.898,11,0.013,13,1.067,17,0.215,27,0.184,28,0.173,38,0.008,39,0.008,40,1.443,71,1.031,84,1.524,113,1.434,135,1.234,152,0.747,161,1.071,225,1.212,259,2.134,268,1.524,315,1.866,322,1.749,366,2.637,385,0.998,388,2.637,389,3.568,390,2.741,392,3.241,394,2.637,395,2.741,396,5.025,398,3.803,400,3.568,401,3.762,402,4.415,407,2.823,413,2.364,414,3.109,416,2.504,417,2.637,626,3.984,627,3.984,704,2.701,705,2.666,716,2.862,1174,2.862,1175,3.932,1176,3.932,1177,3.932,1178,3.932,1179,3.932,1180,3.932,1181,3.932,1182,3.932,1183,3.932,1184,3.932,1185,3.932,1186,3.434]],["title/controllers/PermissionsController.html",[0,1.15,1187,2.994]],["body/controllers/PermissionsController.html",[0,0.999,2,0.999,3,0.105,4,0.105,5,0.07,7,0.377,8,1.336,10,1.631,11,0.013,13,0.917,15,1.795,17,0.289,18,2.525,22,0.534,27,0.105,28,0.157,31,1.565,36,1.738,38,0.007,39,0.007,82,1.217,135,1.27,140,1.697,151,2.042,152,0.817,153,1.977,156,2.724,158,2.272,161,0.883,179,1.623,182,2.766,185,1.697,186,1.565,192,1.506,198,1.851,199,1.101,319,1.851,472,1.52,473,2.069,474,2.069,475,2.069,476,1.995,484,2.837,488,1.451,490,2.639,492,1.451,495,1.697,497,2.275,499,1.94,500,2.038,501,2.148,505,1.451,507,1.451,511,2.149,513,3.245,517,2.038,519,2.038,521,2.275,529,2.038,530,2.038,576,2.525,579,3.075,623,4.533,696,1.629,704,3.831,876,2.601,878,2.601,881,3.121,884,2.601,887,2.601,894,2.423,897,2.423,898,2.423,901,2.423,903,2.601,1187,3.709,1188,3.121,1189,3.121,1190,3.573,1191,2.601,1192,3.709,1193,3.573,1194,3.573,1195,3.573,1196,5.08,1197,3.573,1198,3.783,1199,3.121,1200,4.027,1201,3.573,1202,3.573,1203,3.573,1204,3.573,1205,3.573,1206,3.573,1207,3.573]],["title/modules/PermissionsModule.html",[40,0.949,59,2.79]],["body/modules/PermissionsModule.html",[2,1.872,3,0.158,4,0.158,5,0.106,11,0.012,17,0.31,22,0.803,27,0.158,28,0.236,38,0.01,39,0.01,40,1.682,42,2.182,43,2.265,44,2.449,45,2.449,46,2.265,47,3.324,48,2.449,59,5.432,64,3.051,65,2.449,66,2.449,68,2.449,70,2.662,71,1.408,152,0.641,257,2.783,259,2.103,704,2.662,705,4.541,708,4.245,1187,5.309,1198,5.101,1199,4.693,1208,4.693,1209,4.693,1210,5.373,1211,5.373,1212,4.693]],["title/injectables/PermissionsService.html",[131,0.807,1198,2.62]],["body/injectables/PermissionsService.html",[3,0.081,4,0.081,5,0.054,7,0.291,8,1.102,11,0.013,13,0.868,15,1.611,17,0.281,22,0.411,27,0.081,28,0.121,29,1.04,30,1.16,32,1.867,36,1.56,38,0.006,39,0.006,40,0.969,71,0.722,81,1.307,82,1.736,83,1.307,84,1.425,104,3.028,115,1.384,124,3.045,125,1.426,131,0.824,132,1.004,135,1.16,151,1.932,152,0.829,153,1.87,156,2.559,158,1.99,161,0.835,162,3.045,179,1.817,192,1.16,225,1.758,227,3.167,278,2.956,297,2.397,298,1.426,315,2.072,322,1.425,347,2.956,349,1.753,350,1.655,366,1.16,369,1.841,370,1.655,378,2.177,379,1.655,380,1.57,382,2.908,388,1.16,390,1.206,392,1.426,394,1.16,395,1.206,420,1.494,443,2.536,459,1.16,468,1.655,472,1.253,473,1.707,474,1.707,475,1.707,476,1.645,483,2.177,484,2.233,487,2.641,488,1.707,490,2.374,492,1.707,495,1.996,501,1.16,505,1.118,507,1.118,547,1.655,548,1.57,549,1.57,553,3.066,554,1.655,555,3.066,556,1.655,557,1.655,558,1.655,559,1.655,560,1.655,561,3.431,569,3.066,573,1.655,575,1.655,576,1.364,579,1.307,584,1.655,588,1.655,593,2.527,623,4.125,626,3.913,627,4.125,704,2.082,712,3.671,716,2.004,925,2.676,927,2.676,928,1.753,929,1.753,931,1.753,932,2.004,933,1.753,934,1.753,935,1.753,936,1.867,937,1.753,938,1.753,939,1.753,940,1.753,1008,1.867,1189,3.671,1196,4.712,1198,2.676,1200,3.321,1212,2.404,1213,2.404,1214,2.753,1215,2.753,1216,2.753,1217,2.753,1218,2.753,1219,2.753,1220,2.753,1221,2.753,1222,4.203,1223,4.203,1224,2.753,1225,2.753,1226,2.753,1227,2.753,1228,2.753,1229,2.753,1230,3.059,1231,4.203,1232,2.753]],["title/classes/RegisterUserDto.html",[28,0.181,287,2.62]],["body/classes/RegisterUserDto.html",[3,0.1,4,0.1,5,0.067,7,0.361,10,1.604,11,0.013,13,0.902,16,3.121,17,0.25,27,0.145,28,0.296,38,0.007,39,0.007,84,1.381,115,2.698,135,1.234,152,0.804,161,0.933,199,1.055,226,1.248,268,1.381,287,3.147,304,4.759,315,1.021,322,2.211,338,3.289,384,2.316,385,0.869,387,3.819,417,1.443,426,3.606,428,1.858,432,3.634,433,3.351,435,2.972,437,2.819,438,1.443,443,2.27,450,3.004,454,2.322,457,3.693,458,1.952,459,3.405,460,4.159,461,3.308,462,3.487,463,4.582,464,4.582,465,4.582,466,4.307,467,4.221,468,2.059,600,3.841,644,2.705,1233,3.423,1234,3.423,1235,3.423,1236,3.423,1237,3.423]],["title/interfaces/Response.html",[164,2.62,844,2.62]],["body/interfaces/Response.html",[3,0.148,4,0.148,5,0.099,7,0.531,11,0.013,16,3.015,17,0.294,22,0.751,27,0.189,28,0.221,36,1.277,38,0.009,39,0.009,76,3.41,131,1.26,135,1.095,161,0.912,164,4.089,181,4.904,186,2.203,268,1.795,443,2.769,696,2.292,721,3.66,844,3.202,845,3.973,953,5.59,956,4.674,958,3.66,973,3.973,1238,3.973,1239,6.727,1240,5.609,1241,5.609,1242,5.609,1243,4.392,1244,3.973,1245,3.66,1246,3.66,1247,4.392,1248,5.609,1249,4.392,1250,4.392,1251,4.392,1252,4.392,1253,4.392]],["title/classes/Resume.html",[28,0.181,1254,2.474]],["body/classes/Resume.html",[3,0.099,4,0.099,5,0.067,7,0.358,10,1.896,11,0.013,13,1.066,17,0.249,27,0.169,28,0.149,38,0.007,39,0.007,71,0.888,84,1.371,113,1.236,135,1.198,161,1.076,225,1.044,259,1.921,268,1.371,315,1.885,322,2.016,366,2.431,384,1.236,385,0.86,388,2.431,389,3.289,390,2.526,392,2.987,394,2.664,395,2.769,396,4.989,398,3.736,400,3.605,401,4.205,402,4.205,407,2.541,413,2.038,414,2.798,416,2.158,417,3.298,537,2.96,635,4.197,636,4.197,637,3.801,638,4.197,639,4.197,847,1.756,910,2.467,1060,2.678,1254,2.95,1255,2.467,1256,5.037,1257,5.859,1258,4.994,1259,3.389,1260,3.389,1261,3.389,1262,3.389,1263,3.389,1264,3.389,1265,3.389,1266,3.389,1267,3.389,1268,3.389,1269,3.389,1270,3.389,1271,3.389,1272,3.389,1273,3.389,1274,3.389,1275,2.678,1276,3.389,1277,2.467,1278,2.96]],["title/controllers/ResumesController.html",[0,1.15,1279,2.994]],["body/controllers/ResumesController.html",[0,0.929,2,0.929,3,0.098,4,0.098,5,0.065,7,0.351,8,1.268,10,1.654,11,0.013,13,0.93,15,1.821,17,0.282,18,2.396,22,0.496,27,0.098,28,0.146,31,1.456,36,1.763,38,0.007,39,0.007,82,1.131,135,1.258,140,1.578,151,2.071,152,0.829,153,2.005,156,2.772,158,2.299,161,0.896,179,1.54,182,2.625,185,1.578,186,1.456,192,1.401,198,1.721,199,1.024,472,1.442,473,1.964,474,1.964,475,1.964,476,1.893,484,2.743,488,1.349,490,2.68,492,1.349,495,1.578,497,2.116,499,1.804,500,1.895,501,2.039,505,1.349,507,1.349,511,1.998,513,3.08,517,1.895,519,1.895,521,2.116,529,1.895,530,1.895,576,2.396,579,2.974,632,3.429,637,2.908,651,3.988,696,1.514,884,2.419,887,2.419,894,2.253,897,2.253,898,2.253,901,2.253,903,2.419,1042,4.513,1191,2.419,1192,3.52,1254,4.417,1279,3.52,1280,2.902,1281,5.258,1282,4.224,1283,3.323,1284,3.323,1285,3.323,1286,3.323,1287,3.323,1288,3.323,1289,3.323,1290,2.902,1291,4.836,1292,3.323,1293,3.323,1294,3.323,1295,4.982,1296,3.323,1297,3.631,1298,2.902,1299,3.821,1300,3.323,1301,3.323,1302,3.323,1303,3.323,1304,3.323,1305,3.323,1306,3.323,1307,2.902,1308,3.323,1309,3.323]],["title/modules/ResumesModule.html",[40,0.949,60,2.79]],["body/modules/ResumesModule.html",[2,1.872,3,0.158,4,0.158,5,0.106,11,0.012,17,0.31,22,0.803,27,0.158,28,0.236,38,0.01,39,0.01,40,1.682,42,2.182,43,2.265,44,2.449,45,2.449,46,2.265,47,3.324,48,2.449,60,5.432,64,3.051,65,2.449,66,2.449,68,2.449,70,2.662,71,1.408,152,0.641,257,2.783,259,2.103,1254,3.231,1277,4.874,1279,5.309,1297,5.101,1298,4.693,1310,4.693,1311,4.693,1312,5.373,1313,5.373,1314,4.693,1315,5.373]],["title/injectables/ResumesService.html",[131,0.807,1297,2.62]],["body/injectables/ResumesService.html",[3,0.07,4,0.07,5,0.047,7,0.252,8,0.986,11,0.013,13,0.856,15,1.601,17,0.269,22,0.356,27,0.07,28,0.105,29,0.901,30,1.005,36,1.551,38,0.005,39,0.005,71,0.625,81,1.133,82,1.585,83,1.133,84,1.301,104,3.02,115,1.533,124,2.849,125,1.236,131,0.738,132,0.87,135,1.121,151,1.907,152,0.85,153,1.846,156,2.587,158,1.951,161,0.825,162,3.027,179,1.945,181,2.395,192,1.005,225,1.772,227,3.108,278,2.737,297,1.36,298,1.236,315,2.033,322,1.708,347,2.737,366,1.585,369,2.039,370,1.434,378,2.412,379,1.434,380,1.36,382,3.779,388,1.005,390,1.045,394,1.962,395,1.647,398,1.948,420,3.316,443,2.391,472,1.122,473,1.527,474,1.527,475,1.527,476,1.472,483,1.948,484,2.039,487,3.164,488,1.527,490,2.152,492,1.527,495,1.786,501,1.005,505,0.969,507,0.969,547,1.434,548,1.36,549,1.36,553,3.674,554,1.434,555,3.458,556,1.434,557,1.434,558,1.434,559,1.434,560,1.434,561,3.178,569,2.8,572,1.885,573,1.434,575,1.434,576,1.182,579,1.133,584,1.434,588,1.434,593,2.8,594,3.678,632,1.434,635,4.185,636,4.185,637,3.178,638,3.389,639,3.389,651,3.89,925,2.395,927,2.395,928,1.519,929,1.519,931,1.519,933,1.519,934,1.519,935,1.519,936,1.618,937,1.519,938,1.519,939,1.519,940,1.519,980,3.583,1254,2.8,1256,3.285,1275,1.885,1281,1.885,1282,3.285,1290,3.285,1295,4.336,1297,2.395,1299,2.971,1314,2.084,1316,2.084,1317,2.385,1318,2.385,1319,3.761,1320,3.761,1321,2.385,1322,2.385,1323,2.385,1324,2.385,1325,2.385,1326,2.385,1327,2.385,1328,3.761,1329,2.385,1330,2.385,1331,2.385,1332,2.385,1333,2.385,1334,2.385,1335,2.385,1336,1.885,1337,2.385,1338,2.385,1339,3.761,1340,3.761,1341,2.084,1342,2.385,1343,2.385,1344,3.761,1345,2.971,1346,4.175]],["title/classes/Role.html",[28,0.181,226,1.5]],["body/classes/Role.html",[3,0.114,4,0.114,5,0.076,7,0.41,10,1.893,11,0.013,13,1.065,17,0.245,27,0.182,28,0.171,38,0.008,39,0.008,71,1.017,84,1.509,135,1.161,152,0.741,161,1.073,225,1.195,226,1.969,259,2.114,268,1.509,315,1.852,319,3.218,322,1.736,366,2.619,385,0.985,388,2.619,389,3.543,390,2.721,391,3.078,392,3.218,394,2.619,395,2.721,396,5.002,398,3.787,400,3.543,401,3.735,402,4.396,407,3.479,413,2.333,414,3.08,417,2.831,453,3.735,702,2.47,704,3.078,706,3.065,708,3.065,717,2.631,1258,3.065,1347,2.824,1348,3.879,1349,3.879,1350,3.879,1351,3.879,1352,3.879,1353,3.879,1354,3.879,1355,3.879,1356,3.879,1357,3.879,1358,3.879,1359,3.879,1360,3.389]],["title/controllers/RolesController.html",[0,1.15,1361,2.994]],["body/controllers/RolesController.html",[0,1.017,2,1.017,3,0.107,4,0.107,5,0.072,7,0.384,8,1.353,10,1.642,11,0.013,13,0.923,15,1.807,17,0.29,18,2.557,22,0.543,27,0.107,28,0.16,31,1.593,36,1.75,38,0.008,39,0.008,82,1.238,135,1.273,140,1.727,151,2.056,152,0.823,153,1.99,156,2.735,158,2.277,161,0.889,179,1.643,182,2.801,185,1.727,186,1.593,192,1.533,193,3.256,198,1.884,199,1.121,226,2.611,472,1.539,473,2.096,474,2.096,475,2.096,476,2.02,484,2.86,488,1.477,490,2.523,492,1.477,495,1.727,497,2.316,499,1.974,500,2.074,501,2.175,505,1.477,507,1.477,511,2.187,513,2.316,517,2.943,519,2.074,521,2.316,529,2.943,530,2.074,576,2.557,579,3.1,652,4.56,696,1.658,876,2.647,878,2.647,887,2.647,894,2.467,897,2.467,898,2.467,901,2.467,1191,2.647,1361,3.756,1362,3.177,1363,3.177,1364,3.177,1365,3.637,1366,3.637,1367,3.637,1368,3.637,1369,5.103,1370,3.637,1371,3.177,1372,4.078,1373,3.637,1374,3.637,1375,3.637,1376,3.637,1377,3.637,1378,3.637,1379,3.637]],["title/modules/RolesModule.html",[40,0.949,61,2.62]],["body/modules/RolesModule.html",[2,1.838,3,0.153,4,0.153,5,0.103,11,0.012,17,0.307,22,0.78,27,0.153,28,0.23,38,0.01,39,0.01,40,1.66,42,2.12,43,2.201,44,2.38,45,2.38,46,2.201,47,3.281,48,3.281,61,5.141,64,2.997,65,2.38,66,2.38,68,2.38,70,2.587,71,1.369,152,0.623,193,4.555,226,1.904,257,2.705,259,2.044,702,4.188,707,3.541,1361,5.24,1371,4.561,1380,4.561,1381,4.561,1382,4.561,1383,5.221,1384,5.221,1385,4.561]],["title/injectables/RolesService.html",[131,0.807,193,2.233]],["body/injectables/RolesService.html",[3,0.072,4,0.072,5,0.048,7,0.259,8,1.008,11,0.013,13,0.866,15,1.621,17,0.271,22,0.367,27,0.072,28,0.108,29,0.927,30,1.035,36,1.57,38,0.006,39,0.006,40,0.566,71,0.643,81,1.165,82,1.615,83,1.165,84,1.326,104,3.035,115,1.561,124,2.888,125,1.271,131,0.754,132,0.895,135,1.171,151,1.928,152,0.919,153,1.866,156,2.48,158,1.923,161,0.834,162,3.063,179,2.058,192,1.035,193,2.088,225,1.992,226,1.957,227,3.27,278,2.78,297,1.4,298,1.271,315,2.099,319,2.456,322,1.326,347,3.348,349,2.449,350,2.313,366,1.035,369,1.685,370,1.476,378,1.992,379,1.476,380,1.4,382,2.705,388,1.035,390,1.075,391,1.906,392,1.271,394,1.035,420,3.356,443,2.42,450,1.271,453,2.313,461,1.4,462,1.476,468,3.228,472,1.147,473,1.562,474,1.562,475,1.562,476,1.506,483,1.992,484,2.077,487,2.456,488,1.562,490,2.277,492,1.562,495,1.826,501,1.035,505,0.997,507,0.997,524,1.563,547,1.476,548,1.4,549,1.4,553,2.852,554,1.476,555,2.852,556,1.476,557,1.476,558,1.476,559,1.476,560,1.476,561,3.228,569,2.852,573,1.476,575,1.476,576,1.216,579,1.165,584,1.476,588,1.476,593,2.852,594,1.939,626,1.563,627,1.563,652,3.937,707,1.664,713,3.039,717,1.664,743,3.747,925,2.449,927,2.449,928,1.563,929,1.563,931,1.563,932,1.786,933,1.563,934,1.563,935,1.563,936,2.608,937,1.563,938,1.563,939,1.563,940,1.563,980,1.664,1008,1.664,1230,2.799,1336,1.939,1341,2.144,1345,1.939,1346,1.939,1364,3.359,1369,4.538,1372,3.039,1385,2.144,1386,2.144,1387,3.846,1388,2.454,1389,2.454,1390,2.454,1391,2.454,1392,2.454,1393,3.846,1394,2.454,1395,2.454,1396,2.454,1397,2.454,1398,5.368,1399,3.846,1400,2.454,1401,2.454,1402,2.454,1403,2.454,1404,2.454,1405,2.454,1406,3.846,1407,3.846,1408,3.846,1409,2.454,1410,3.846,1411,3.359,1412,2.144,1413,2.454]],["title/classes/Subscriber.html",[28,0.181,1057,2.474]],["body/classes/Subscriber.html",[3,0.118,4,0.118,5,0.079,7,0.426,10,1.888,11,0.013,13,1.062,17,0.219,27,0.186,28,0.177,38,0.008,39,0.008,71,1.057,84,1.551,113,1.471,135,1.213,152,0.757,161,1.07,225,1.243,259,2.172,268,1.551,315,1.891,322,2.068,366,2.673,385,1.024,388,2.673,389,3.616,390,2.778,392,3.285,394,2.673,395,2.778,396,5.007,398,3.833,400,3.616,401,3.813,402,4.449,407,2.873,413,2.425,414,3.164,416,2.568,417,2.673,441,3.616,1057,3.336,1058,2.735,1086,2.936,1414,2.936,1415,4.033,1416,4.033,1417,4.033,1418,4.033,1419,4.033,1420,4.033,1421,4.033,1422,4.033,1423,4.033,1424,4.033,1425,3.523]],["title/controllers/SubscribersController.html",[0,1.15,1426,2.994]],["body/controllers/SubscribersController.html",[0,0.99,2,0.99,3,0.104,4,0.104,5,0.07,7,0.374,8,1.328,10,1.69,11,0.013,13,0.951,15,1.861,17,0.288,18,2.509,22,0.529,27,0.104,28,0.156,31,1.552,36,1.802,38,0.007,39,0.007,82,1.206,135,1.249,140,1.682,151,2.117,152,0.847,153,2.049,156,2.804,158,2.291,161,0.915,182,1.923,185,1.682,186,1.552,192,1.493,198,1.835,199,1.091,441,2.889,472,1.51,473,2.056,474,2.056,475,2.056,476,1.983,484,2.826,488,1.438,490,2.273,492,1.438,499,2.749,500,2.02,501,2.135,505,1.438,507,1.438,511,2.13,517,2.889,519,2.02,529,2.889,530,2.02,576,2.509,579,3.063,664,4.52,696,1.614,897,2.402,898,2.402,1042,4.375,1191,2.578,1307,3.094,1426,3.686,1427,3.094,1428,3.094,1429,5.065,1430,3.094,1431,3.542,1432,3.542,1433,3.542,1434,3.542,1435,3.542,1436,3.542,1437,5.065,1438,3.542,1439,3.542,1440,3.094,1441,4.814,1442,3.542,1443,3.542,1444,3.764,1445,3.094,1446,4.002,1447,3.542,1448,3.542,1449,3.542,1450,3.542,1451,3.542,1452,3.542,1453,3.542,1454,3.542,1455,3.094,1456,3.542,1457,3.542]],["title/modules/SubscribersModule.html",[40,0.949,62,2.79]],["body/modules/SubscribersModule.html",[2,1.872,3,0.158,4,0.158,5,0.106,11,0.012,17,0.31,22,0.803,27,0.158,28,0.236,38,0.01,39,0.01,40,1.682,42,2.182,43,2.265,44,2.449,45,2.449,46,2.265,47,3.324,48,2.449,62,5.432,64,3.051,65,2.449,66,2.449,68,2.449,70,2.662,71,1.408,152,0.641,257,2.783,259,2.103,1057,3.231,1058,4.541,1061,4.245,1426,5.309,1444,5.101,1445,4.693,1458,4.693,1459,4.693,1460,5.373,1461,5.373,1462,4.693]],["title/injectables/SubscribersService.html",[131,0.807,1444,2.62]],["body/injectables/SubscribersService.html",[3,0.079,4,0.079,5,0.053,7,0.285,8,1.086,11,0.013,13,0.897,15,1.686,17,0.279,22,0.404,27,0.079,28,0.119,29,1.565,30,1.139,36,1.632,38,0.006,39,0.006,71,0.708,81,1.283,82,1.716,83,1.283,84,1.409,104,3.085,113,0.985,115,0.889,124,3.019,125,1.399,131,0.813,132,0.985,135,1.096,151,1.996,152,0.845,153,1.933,156,2.661,158,2.02,161,0.863,162,3.186,179,1.605,192,1.139,225,1.741,227,3.228,278,2.927,297,1.541,298,1.399,315,1.996,322,1.979,347,2.61,366,1.139,369,1.183,370,1.625,378,1.399,379,1.625,380,1.541,382,2.874,388,1.139,390,1.183,394,1.139,395,1.183,420,2.249,441,2.874,443,2.517,461,1.541,472,1.236,473,1.682,474,1.682,475,1.682,476,1.973,483,2.146,484,2.207,487,2.61,488,1.682,490,2.147,492,1.682,501,1.139,505,1.097,507,1.097,547,1.625,548,1.541,549,1.541,553,3.664,554,1.625,555,3.03,556,1.625,557,1.625,558,1.625,559,1.625,560,1.625,561,3.398,569,3.03,573,1.625,575,1.625,576,1.339,579,1.283,584,1.625,588,1.625,593,1.625,664,4.095,676,2.36,925,2.638,927,2.638,928,1.72,929,1.72,931,1.72,932,1.966,933,1.72,934,1.72,935,1.72,936,1.832,937,1.72,938,1.72,939,1.72,940,1.72,1057,1.625,1086,1.966,1087,2.36,1230,1.966,1336,2.135,1428,2.36,1430,3.619,1440,3.619,1441,4.361,1444,2.638,1446,3.273,1462,2.36,1463,2.36,1464,4.143,1465,2.702,1466,2.702,1467,4.143,1468,2.702,1469,2.702,1470,2.702,1471,4.143,1472,2.702,1473,2.702,1474,2.702,1475,4.143,1476,5.039,1477,2.702,1478,2.702,1479,2.702,1480,2.702,1481,2.702,1482,2.702,1483,2.702,1484,4.143,1485,2.702,1486,2.702,1487,2.702]],["title/injectables/TransformInterceptor.html",[131,0.807,1246,2.994]],["body/injectables/TransformInterceptor.html",[3,0.143,4,0.143,5,0.096,7,0.514,8,1.649,11,0.013,13,0.843,15,1.277,16,2.463,17,0.29,22,0.728,27,0.185,28,0.214,29,1.84,36,1.237,38,0.009,39,0.009,76,3.304,131,1.234,132,1.777,135,0.754,151,1.877,152,0.751,153,1.817,161,0.812,164,3.102,181,4.007,186,2.134,443,1.907,696,2.22,721,3.546,844,3.102,952,4.255,953,6.171,956,5.362,958,4.58,973,3.849,1238,3.849,1239,5.496,1240,6.434,1241,5.496,1242,6.088,1243,4.255,1244,3.849,1245,3.546,1246,4.58,1247,6.088,1248,6.434,1249,4.255,1250,4.255,1251,4.255,1252,4.255,1253,4.255,1488,4.872,1489,4.872,1490,4.872]],["title/classes/UpdateCompanyDto.html",[28,0.181,496,2.79]],["body/classes/UpdateCompanyDto.html",[3,0.181,4,0.181,5,0.121,11,0.012,17,0.286,27,0.181,28,0.271,38,0.011,39,0.011,385,1.562,472,1.835,478,3.917,496,4.929,506,4.86,599,4.86,948,3.451,1491,5.373,1492,7.269,1493,3.699,1494,3.339,1495,3.339]],["title/classes/UpdateFileDto.html",[28,0.181,769,2.79]],["body/classes/UpdateFileDto.html",[3,0.181,4,0.181,5,0.121,11,0.012,17,0.286,27,0.181,28,0.271,38,0.011,39,0.011,385,1.562,472,1.835,605,3.917,607,4.86,769,4.929,784,4.86,948,3.451,1493,3.699,1494,3.339,1495,3.339,1496,5.373,1497,7.269]],["title/classes/UpdateJobDto.html",[28,0.181,886,2.79]],["body/classes/UpdateJobDto.html",[3,0.181,4,0.181,5,0.121,11,0.012,17,0.286,27,0.181,28,0.271,38,0.011,39,0.011,385,1.562,422,4.478,439,3.699,472,1.835,886,4.929,891,4.86,948,3.451,1493,3.699,1494,3.339,1495,3.339,1498,5.373,1499,7.269]],["title/classes/UpdatePermissionDto.html",[28,0.181,1196,2.79]],["body/classes/UpdatePermissionDto.html",[3,0.181,4,0.181,5,0.121,11,0.012,17,0.286,27,0.181,28,0.271,38,0.011,39,0.011,385,1.562,472,1.835,623,3.917,625,4.86,948,3.451,1196,4.929,1200,4.86,1493,3.699,1494,3.339,1495,3.339,1500,5.373,1501,7.269]],["title/classes/UpdateResumeDto.html",[28,0.181,1295,2.79]],["body/classes/UpdateResumeDto.html",[3,0.181,4,0.181,5,0.121,11,0.012,17,0.286,27,0.181,28,0.271,38,0.011,39,0.011,385,1.562,472,1.835,632,3.699,634,4.478,948,3.451,1295,4.929,1299,4.86,1493,3.699,1494,3.339,1495,3.339,1502,5.373,1503,7.269]],["title/classes/UpdateRoleDto.html",[28,0.181,1369,2.79]],["body/classes/UpdateRoleDto.html",[3,0.181,4,0.181,5,0.121,11,0.012,17,0.286,27,0.181,28,0.271,38,0.011,39,0.011,385,1.562,472,1.835,652,3.917,654,4.86,948,3.451,1369,4.929,1372,4.86,1493,3.699,1494,3.339,1495,3.339,1504,5.373,1505,7.269]],["title/classes/UpdateSubscriberDto.html",[28,0.181,1441,2.79]],["body/classes/UpdateSubscriberDto.html",[3,0.181,4,0.181,5,0.121,11,0.012,17,0.286,27,0.181,28,0.271,38,0.011,39,0.011,385,1.562,472,1.835,664,3.917,666,4.86,948,3.451,1441,4.929,1446,4.86,1493,3.699,1494,3.339,1495,3.339,1506,5.373,1507,7.269]],["title/classes/UpdateUserDto.html",[28,0.181,1508,2.79]],["body/classes/UpdateUserDto.html",[3,0.159,4,0.159,5,0.106,7,0.57,10,1.286,11,0.013,13,0.723,16,2.115,17,0.301,27,0.159,28,0.295,38,0.01,39,0.01,115,2.212,135,1.04,161,0.697,199,1.664,225,2.07,268,1.878,305,3.932,315,2.18,338,3.48,385,1.371,426,3.062,432,3.062,438,2.277,454,3.663,458,3.081,459,2.832,460,3.48,472,1.611,490,2.366,600,3.081,948,3.19,1494,2.932,1495,2.932,1508,4.556,1509,5.868,1510,6.718,1511,5.401,1512,5.401]],["title/classes/User.html",[28,0.181,158,1.15]],["body/classes/User.html",[3,0.099,4,0.099,5,0.066,7,0.355,10,1.918,11,0.013,13,1.079,17,0.226,27,0.168,28,0.148,38,0.007,39,0.007,71,0.881,84,1.363,113,1.226,135,1.247,146,4.535,152,0.751,158,1.363,161,1.077,225,1.036,226,2.296,254,2.14,259,1.909,268,1.363,306,2.279,315,1.878,322,1.949,338,2.973,366,2.419,384,2.093,385,0.853,387,3.451,388,2.419,389,3.273,390,2.514,392,2.973,394,2.419,395,2.514,396,5.045,398,3.612,400,3.591,401,4.02,402,4.431,407,2.526,413,2.021,414,2.781,416,2.14,417,3.032,443,1.909,466,3.892,703,2.279,707,2.279,751,5.013,1257,4.26,1258,3.853,1513,2.446,1514,3.361,1515,3.361,1516,3.361,1517,3.361,1518,3.361,1519,3.361,1520,3.361,1521,3.361,1522,3.361,1523,3.361,1524,3.361,1525,3.361,1526,3.361,1527,3.361,1528,3.361,1529,3.361,1530,2.936]],["title/classes/UserLoginDto.html",[28,0.181,200,2.994]],["body/classes/UserLoginDto.html",[3,0.155,4,0.155,5,0.104,7,0.558,10,1.579,11,0.012,13,0.888,17,0.261,27,0.155,28,0.292,31,3.495,38,0.01,39,0.01,135,1.175,161,0.855,199,1.63,200,4.826,268,1.853,292,5.271,322,1.853,338,4.051,385,1.343,391,3.762,426,3.301,432,3.301,436,5.271,438,2.23,748,4.496,1531,6.326,1532,4.62,1533,6.63,1534,6.63,1535,5.289,1536,5.289,1537,6.63]],["title/controllers/UsersController.html",[0,1.15,1538,2.994]],["body/controllers/UsersController.html",[0,0.994,2,0.994,3,0.104,4,0.104,5,0.07,7,0.375,8,1.331,10,1.627,11,0.013,13,0.915,15,1.791,17,0.295,18,2.516,22,0.531,27,0.104,28,0.156,31,1.557,36,1.735,38,0.007,39,0.007,77,2.411,79,2.809,82,1.21,124,3.201,135,1.25,140,1.688,151,2.038,152,0.816,153,1.973,156,2.721,158,2.347,161,0.881,179,1.617,182,2.756,184,2.756,185,1.688,186,1.557,198,1.841,199,1.095,275,3.378,305,3.696,458,4.053,472,1.514,473,2.062,474,2.062,475,2.062,476,1.988,483,1.841,484,2.83,487,2.63,488,1.443,490,2.504,492,1.443,499,2.756,500,2.027,501,2.14,505,1.443,507,1.443,511,2.138,513,3.233,515,3.105,517,2.027,519,2.027,529,2.027,530,2.027,696,1.62,876,2.587,878,2.587,884,2.587,894,2.411,901,2.411,903,2.587,946,2.809,1192,3.696,1455,3.105,1508,4.82,1538,3.696,1539,3.105,1540,3.105,1541,3.105,1542,3.555,1543,3.555,1544,3.555,1545,3.555,1546,3.555,1547,3.105,1548,3.555,1549,3.555,1550,3.105,1551,3.105,1552,3.555,1553,3.555,1554,3.555,1555,3.555,1556,3.555,1557,3.555,1558,3.555,1559,3.555,1560,3.555]],["title/modules/UsersModule.html",[40,0.949,63,2.474]],["body/modules/UsersModule.html",[2,1.798,3,0.148,4,0.148,5,0.099,11,0.013,17,0.311,22,0.753,27,0.148,28,0.222,38,0.009,39,0.009,40,1.634,42,2.047,43,2.125,44,2.297,45,2.297,46,2.125,47,3.228,48,3.228,63,4.817,64,2.931,65,2.297,66,2.297,68,2.297,70,2.497,71,1.321,152,0.768,158,1.409,226,1.838,254,4.095,257,2.611,258,3.983,259,2.518,275,4.763,702,4.095,703,3.418,707,3.418,1538,5.155,1550,4.403,1561,4.403,1562,4.403,1563,4.403,1564,5.041,1565,5.041,1566,4.403]],["title/injectables/UsersService.html",[131,0.807,275,2.346]],["body/injectables/UsersService.html",[3,0.061,4,0.061,5,0.041,7,0.219,8,0.88,11,0.013,13,0.916,15,1.65,17,0.275,22,0.309,27,0.061,28,0.091,29,1.268,30,1.415,36,1.77,38,0.005,39,0.005,71,0.543,81,0.983,82,1.442,83,0.983,84,1.184,104,3.025,114,3.7,115,1.604,124,2.842,125,1.072,131,0.659,132,0.755,135,1.034,146,2.653,151,1.94,152,0.846,153,1.878,156,2.354,158,2.01,161,0.779,162,2.842,179,1.349,214,2.277,225,2.004,226,1.953,227,3.23,268,0.939,270,3.7,275,1.915,277,2.653,278,3.13,292,2.444,294,2.138,297,1.181,298,1.072,299,1.808,300,1.808,301,1.636,302,2.277,303,1.808,305,2.444,306,1.404,308,1.636,310,1.636,313,1.636,315,2.145,322,1.689,327,4.257,338,2.524,339,2.933,340,1.808,341,5.01,342,1.808,343,1.808,344,2.653,345,3.7,347,2.194,348,1.808,349,1.318,350,1.245,351,1.808,352,1.636,353,1.636,354,1.808,355,1.808,356,1.636,357,1.636,358,1.808,364,1.808,366,0.873,369,0.907,370,2.019,378,1.072,379,2.019,380,1.915,382,2.416,388,0.873,390,0.907,394,0.873,395,0.907,420,3.114,443,2.246,458,3.272,472,1.001,473,1.363,474,1.363,475,1.363,476,1.315,483,1.739,484,1.856,487,2.194,488,1.363,490,1.717,492,1.363,501,0.873,505,0.841,507,0.841,524,3.103,547,1.245,548,1.181,549,1.181,553,2.019,554,1.245,555,2.547,556,1.245,557,1.245,558,1.245,559,1.245,560,1.245,561,2.547,569,2.547,572,1.636,573,1.245,575,1.245,576,1.026,579,0.983,584,1.245,588,1.245,593,2.019,703,1.404,711,1.808,713,3.347,717,1.404,723,1.808,743,1.636,748,1.404,925,2.138,927,2.138,928,1.318,929,1.318,931,1.318,933,1.318,934,1.318,935,2.138,937,2.138,938,2.138,939,1.318,940,1.318,980,2.873,990,1.808,992,1.808,1123,1.808,1230,1.507,1345,3.347,1346,4.233,1411,1.808,1412,1.808,1508,3.89,1541,2.933,1547,2.933,1551,1.808,1566,1.808,1567,1.808,1568,4.236,1569,3.358,1570,3.358,1571,3.358,1572,2.07,1573,3.358,1574,2.07,1575,4.236,1576,2.07,1577,2.07,1578,2.07,1579,3.358,1580,2.07,1581,2.07,1582,2.07,1583,3.358,1584,2.07,1585,2.07,1586,2.07,1587,2.07,1588,3.358,1589,3.358,1590,2.07,1591,2.07,1592,2.07,1593,2.07,1594,2.07,1595,2.07,1596,2.07,1597,2.07,1598,4.236,1599,3.358,1600,2.07,1601,4.236,1602,2.07,1603,2.07,1604,2.07,1605,2.07,1606,2.07,1607,2.07,1608,2.07,1609,2.07,1610,2.07,1611,2.07]],["title/coverage.html",[1612,4.912]],["body/coverage.html",[0,2.071,1,1.804,5,0.076,6,2.165,11,0.013,23,1.578,28,0.359,38,0.006,39,0.006,46,1.045,77,1.681,131,1.524,133,2.165,138,1.804,139,2.165,156,0.873,158,1.083,161,0.32,164,1.578,179,0.789,184,1.345,185,1.177,187,1.804,189,1.49,193,1.345,200,1.804,226,0.904,243,1.681,244,1.681,254,1.578,267,2.165,275,1.413,287,1.578,302,1.681,304,3.236,384,1.74,386,2.821,418,1.804,421,3.062,422,3.473,439,1.49,454,3.659,458,1.413,469,1.804,470,2.165,478,1.578,496,1.681,503,1.578,538,2.165,598,2.165,599,3.062,605,1.578,606,2.165,607,3.062,623,1.578,624,2.165,625,3.062,632,1.49,633,3.062,634,3.473,651,1.578,652,1.578,653,2.165,654,3.062,664,1.578,665,2.165,666,3.062,690,1.804,691,2.165,693,1.578,702,1.578,704,1.228,705,1.681,709,2.165,718,1.958,719,1.958,733,6.265,761,2.165,762,1.804,763,2.165,769,1.681,782,1.578,813,1.804,816,2.165,827,1.804,828,2.165,844,2.468,846,2.165,847,1.284,848,2.821,870,1.681,872,1.804,873,2.165,886,1.681,889,1.578,911,2.165,946,1.958,947,3.062,966,1.958,967,1.958,993,2.165,1023,2.165,1025,2.165,1032,1.804,1033,2.165,1040,1.578,1042,1.681,1057,1.49,1058,1.681,1080,2.165,1102,2.165,1174,2.821,1187,1.804,1188,2.165,1196,1.681,1198,1.578,1213,2.165,1238,3.062,1245,1.804,1246,1.804,1254,1.49,1255,2.821,1277,1.804,1279,1.804,1280,2.165,1295,1.681,1297,1.578,1316,2.165,1347,2.821,1361,1.804,1362,2.165,1369,1.681,1386,2.165,1414,2.821,1426,1.804,1427,2.165,1441,1.681,1444,1.578,1463,2.165,1491,2.165,1496,2.165,1498,2.165,1500,2.165,1502,2.165,1504,2.165,1506,2.165,1508,1.681,1509,2.165,1513,2.821,1531,2.165,1532,2.165,1538,1.804,1539,2.165,1567,2.165,1612,2.165,1613,2.478,1614,2.478,1615,2.478,1616,5.856,1617,6.487,1618,2.478,1619,6.713,1620,5.856,1621,8.177,1622,6.901,1623,4.772,1624,5.396,1625,7.767,1626,4.713,1627,2.165,1628,5.666,1629,3.875,1630,2.478,1631,2.165,1632,2.478,1633,5.396,1634,2.478,1635,2.478,1636,2.478,1637,2.478]],["title/dependencies.html",[43,2.087,1638,2.997]],["body/dependencies.html",[11,0.013,22,0.739,26,2.819,28,0.279,38,0.009,39,0.009,43,2.084,71,1.296,76,3.352,81,2.347,82,1.683,83,2.347,84,1.775,97,3.905,99,3.905,123,3.598,188,3.905,191,2.819,199,1.523,248,3.148,251,3.905,301,3.905,331,4.317,428,2.683,438,2.084,501,2.084,548,2.819,549,2.819,786,3.598,836,3.905,1003,5.545,1004,4.317,1043,4.317,1053,3.598,1054,3.905,1244,3.905,1494,2.683,1495,2.683,1639,4.943,1640,7.018,1641,4.943,1642,4.943,1643,4.943,1644,4.943,1645,4.943,1646,4.943,1647,4.943,1648,4.943,1649,4.943,1650,4.943,1651,6.351,1652,4.943,1653,4.943,1654,4.943,1655,4.943,1656,4.943,1657,4.943,1658,4.943,1659,4.943,1660,4.943,1661,6.351,1662,4.943,1663,4.943,1664,4.943,1665,4.943,1666,4.943,1667,4.943,1668,4.943,1669,4.943,1670,4.943,1671,4.943,1672,4.943]],["title/miscellaneous/functions.html",[1673,2.185,1674,4.324]],["body/miscellaneous/functions.html",[7,0.689,11,0.011,38,0.011,39,0.011,46,3.342,1631,5.7,1673,4.156,1674,5.7,1675,6.526]],["title/index.html",[7,0.362,1676,3.431,1677,3.431]],["body/index.html",[11,0.012,33,4.817,38,0.01,39,0.01,116,5.096,122,5.977,125,3.022,420,3.167,524,4.485,526,5.565,590,4.61,738,4.61,746,5.096,747,5.096,970,5.096,1053,4.247,1124,5.096,1125,5.096,1678,5.834,1679,5.834,1680,7.043,1681,5.834,1682,7.043,1683,7.043,1684,7.043,1685,5.834,1686,5.834,1687,5.834,1688,5.834,1689,5.834,1690,5.096,1691,5.096,1692,5.834,1693,5.834]],["title/modules.html",[42,2.283]],["body/modules.html",[11,0.01,38,0.01,39,0.01,41,4.017,42,2.241,52,3.742,53,3.742,54,3.742,55,3.742,56,3.742,57,3.742,58,3.742,59,3.742,60,3.742,61,3.514,62,3.742,63,3.318,1694,8.453,1695,8.453,1696,8.453,1697,8.484,1698,5.518,1699,5.518]],["title/overview.html",[1700,4.912]],["body/overview.html",[2,1.05,11,0.012,23,3.888,38,0.008,39,0.008,40,0.867,41,6.165,42,1.526,43,1.584,44,1.713,45,1.713,46,1.584,47,1.713,48,1.713,49,3.282,50,3.282,51,3.282,52,5.489,53,4.733,54,5.041,55,4.733,56,4.141,57,4.733,58,4.733,59,4.733,60,4.733,61,4.734,62,4.733,63,4.563,64,2.407,65,1.713,66,1.713,125,1.947,132,1.37,189,4.47,193,4.035,239,3.282,241,3.282,242,3.282,243,4.141,244,4.141,275,4.24,385,0.954,503,3.888,532,3.282,533,3.282,693,3.888,697,3.282,699,3.282,782,3.888,808,3.282,809,3.282,845,2.969,889,3.888,905,3.282,906,3.282,1040,3.888,1048,3.282,1049,3.282,1198,3.888,1208,3.282,1209,3.282,1297,3.888,1310,3.282,1311,3.282,1380,3.282,1381,3.282,1382,3.282,1444,3.888,1458,3.282,1459,3.282,1561,3.282,1562,3.282,1563,3.282,1700,3.282,1701,5.281,1702,3.758,1703,3.758]],["title/properties.html",[268,1.384,1638,2.997]],["body/properties.html",[11,0.012,38,0.011,39,0.011,268,1.79,391,3.172,502,5.593,1690,5.593,1691,5.593,1704,6.403,1705,6.403,1706,6.403,1707,6.403,1708,6.403]],["title/miscellaneous/typealiases.html",[1673,2.185,1709,4.95]],["body/miscellaneous/typealiases.html",[7,0.627,11,0.01,38,0.01,39,0.01,161,0.766,306,4.826,386,4.321,414,4.73,415,5.623,716,5.18,717,4.826,848,4.321,869,5.18,1086,5.18,1174,4.321,1255,4.321,1275,5.623,1347,4.321,1414,4.321,1513,4.321,1673,3.78,1710,5.936,1711,5.185,1712,5.185,1713,5.185,1714,5.185,1715,5.185,1716,5.185,1717,5.185]],["title/miscellaneous/variables.html",[1673,2.185,1718,4.324]],["body/miscellaneous/variables.html",[5,0.025,7,0.136,11,0.013,16,0.882,18,2.535,20,0.874,36,0.327,38,0.003,39,0.003,40,1.73,82,2.029,113,0.821,135,0.747,152,0.895,158,1.501,161,0.622,162,0.639,181,0.821,184,1.222,185,1.069,214,4.539,225,0.397,226,1.31,254,1.434,294,4.262,302,1.527,315,2.429,319,2.113,321,6.552,322,2.107,366,3.162,384,1.487,386,0.939,388,3.162,389,4.278,392,3.886,394,3.162,395,0.565,418,1.639,419,1.126,471,3.563,472,1.337,476,1.755,490,1.579,499,2.433,626,4.777,627,4.777,637,0.775,702,1.434,704,2.021,705,1.527,718,1.779,719,1.779,733,5.46,748,5.111,764,1.019,774,1.126,847,2.113,848,0.939,870,1.527,871,1.126,874,3.223,956,0.939,966,1.779,967,1.779,971,1.126,986,1.126,1008,5.087,1042,1.527,1058,1.527,1174,0.939,1186,1.126,1192,3.263,1245,2.182,1254,2.453,1255,0.939,1277,1.639,1278,1.126,1281,3.812,1347,0.939,1360,1.126,1363,3.916,1414,0.939,1425,1.126,1513,0.939,1530,1.126,1540,3.563,1626,1.126,1627,1.967,1628,1.126,1673,0.821,1711,1.126,1712,1.126,1713,1.126,1714,1.126,1715,1.126,1716,1.126,1717,1.126,1718,1.126,1719,3.593,1720,4.824,1721,1.289,1722,1.289,1723,1.289,1724,2.252,1725,7.537,1726,8.134,1727,8.134,1728,1.289,1729,1.289,1730,7.502,1731,1.289,1732,2.252,1733,1.289,1734,2.998,1735,2.252,1736,1.289,1737,2.252,1738,1.289,1739,2.252,1740,1.289,1741,2.252,1742,2.252,1743,1.289,1744,2.998,1745,2.252,1746,1.289,1747,2.252,1748,1.289,1749,2.252,1750,1.289,1751,2.252,1752,1.289,1753,1.289,1754,1.289,1755,2.252,1756,1.289,1757,2.252,1758,2.252,1759,1.289,1760,2.998,1761,2.252,1762,1.289,1763,2.252,1764,1.289,1765,2.252,1766,1.289,1767,2.252,1768,1.289,1769,2.252,1770,2.252,1771,1.289,1772,4.483,1773,2.252,1774,1.289,1775,2.998,1776,2.252,1777,1.289,1778,2.252,1779,1.289,1780,2.252,1781,1.289,1782,1.289,1783,2.252,1784,1.289,1785,2.252,1786,2.252,1787,1.289,1788,2.252,1789,1.289,1790,2.998,1791,2.252,1792,1.289,1793,2.252,1794,1.289,1795,2.252,1796,1.289,1797,2.252,1798,2.252,1799,1.289,1800,2.252,1801,1.289,1802,2.998,1803,2.252,1804,1.289,1805,2.252,1806,1.289,1807,2.252,1808,1.289,1809,1.289,1810,1.289,1811,1.289,1812,1.289,1813,1.289,1814,1.289,1815,1.289]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":733,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1704,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1653,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1652,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1665,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1621,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1629,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1624,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1634,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1635,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1616,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":1630,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1619,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1620,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1623,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1622,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1617,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1633,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1618,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":420,"title":{"classes/Company-1.html":{}},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["1.0.0",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["1.0.15",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["1.2.2",{"_index":1643,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1655,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":1639,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":562,"title":{},"body":{"injectables/CompanyService.html":{}}}],["10.0.1",{"_index":1648,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1642,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["1024",{"_index":798,"title":{},"body":{"controllers/FilesController.html":{}}}],["1024//1mb",{"_index":799,"title":{},"body":{"controllers/FilesController.html":{}}}],["13",{"_index":1701,"title":{},"body":{"overview.html":{}}}],["15t06:47:49.369z",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:41.694z",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1702,"title":{},"body":{"overview.html":{}}}],["2",{"_index":125,"title":{"classes/Company-2.html":{}},"body":{"modules/AppModule.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"index.html":{},"overview.html":{}}}],["2.1.3",{"_index":1662,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":1641,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":1651,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":750,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["2023",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":758,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["29",{"_index":1703,"title":{},"body":{"overview.html":{}}}],["3",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["3.0.1",{"_index":1646,"title":{},"body":{"dependencies.html":{}}}],["3.1.9",{"_index":1657,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1666,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":1659,"title":{},"body":{"dependencies.html":{}}}],["5.1.2",{"_index":1649,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1650,"title":{},"body":{"dependencies.html":{}}}],["6.9.3",{"_index":1664,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["647b5108a8a243e8191855b5",{"_index":745,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["648ab415f4328bd3153ee211",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6614e1b970330288c5bea6c6",{"_index":755,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["6620c85e912ed5b315eb5ebf",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.0.4",{"_index":1647,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":1661,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["9.0.3",{"_index":1645,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":1644,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":1640,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":1073,"title":{},"body":{"modules/MailModule.html":{}}}],["__v",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"injectables/CompanyService.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["access",{"_index":976,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["access_token",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":823,"title":{},"body":{"injectables/FilesService.html":{}}}],["adapter",{"_index":1075,"title":{},"body":{"modules/MailModule.html":{}}}],["addfiletypevalidator",{"_index":793,"title":{},"body":{"controllers/FilesController.html":{}}}],["addmaxsizevalidator",{"_index":796,"title":{},"body":{"controllers/FilesController.html":{}}}],["address",{"_index":387,"title":{},"body":{"classes/Company.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{}}}],["adds",{"_index":824,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":1411,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["admin_role",{"_index":718,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":742,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":754,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["age",{"_index":466,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/User.html":{}}}],["aliases",{"_index":1710,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":1136,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["anh",{"_index":747,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["api",{"_index":548,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/companies",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipath",{"_index":626,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":426,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["apiproperty()@isemail({message",{"_index":667,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["apiproperty()@isnotempty",{"_index":423,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["apiproperty()@isnotempty()@isarray()@isstring({each",{"_index":620,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["apiproperty()@isnotempty()@isboolean",{"_index":613,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["apiproperty()@isnotempty()@isnumber",{"_index":617,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["apiproperty()@isnotempty()@transform",{"_index":611,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["apiproperty()@isnotempty({message",{"_index":600,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiproperty()@isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":608,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{}}}],["apitags",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('company",{"_index":508,"title":{},"body":{"controllers/CompanyController.html":{}}}],["apitags('file",{"_index":787,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('job",{"_index":892,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('mail",{"_index":1044,"title":{},"body":{"controllers/MailController.html":{}}}],["apitags('permission",{"_index":1201,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags('resume",{"_index":1300,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags('role",{"_index":1373,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('subscriber",{"_index":1447,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["apitags('user",{"_index":1552,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":41,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":23,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":547,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(qs",{"_index":558,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["async",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":253,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":947,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":957,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:27",{"_index":960,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:8",{"_index":954,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/jwt",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":138,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":965,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":949,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1024,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":52,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1708,"title":{},"body":{"properties.html":{}}}],["authservice",{"_index":189,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1699,"title":{},"body":{"modules.html":{}}}],["await",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(\"id",{"_index":1230,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(\"không",{"_index":936,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["badrequestexception(`${email",{"_index":1477,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["badrequestexception(`${id",{"_index":594,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["badrequestexception(`email",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(`không",{"_index":1608,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(`nhóm",{"_index":1399,"title":{},"body":{"injectables/RolesService.html":{}}}],["basename",{"_index":1170,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["body",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":407,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["boolean(this.configservice.get(\"should_init",{"_index":724,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1145,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1697,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1694,"title":{},"body":{"modules.html":{}}}],["build",{"_index":800,"title":{},"body":{"controllers/FilesController.html":{}}}],["báo",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["bên",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["bước",{"_index":1678,"title":{},"body":{"index.html":{}}}],["bản",{"_index":581,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{}}}],["c",{"_index":459,"title":{},"body":{"classes/Company-2.html":{},"controllers/CompanyController.html":{},"classes/CreateCompanyDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["callhandler",{"_index":1240,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":950,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":955,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":1140,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["cb",{"_index":1159,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1164,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ch",{"_index":467,"title":{},"body":{"classes/Company-2.html":{},"controllers/CompanyController.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["check",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/UsersService.html":{}}}],["checkpassword",{"_index":1569,"title":{},"body":{"injectables/UsersService.html":{}}}],["checkpassword(password",{"_index":1573,"title":{},"body":{"injectables/UsersService.html":{}}}],["cho",{"_index":1123,"title":{},"body":{"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{}}}],["chuỗi",{"_index":675,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["chính",{"_index":668,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["chưa",{"_index":1129,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["chạy",{"_index":1680,"title":{},"body":{"index.html":{}}}],["class",{"_index":28,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":385,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"overview.html":{}}}],["clear",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["clone",{"_index":1693,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companymodule",{"_index":532,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_companymodule_providers",{"_index":533,"title":{},"body":{"modules/CompanyModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":697,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_imports",{"_index":698,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["cluster_databasesmodule_providers",{"_index":699,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":808,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":809,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":905,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":906,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1048,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1049,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1208,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1209,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1310,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1311,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1380,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":1381,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":1382,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1458,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1459,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1561,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1563,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1562,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["companies",{"_index":471,"title":{},"body":{"controllers/CompanyController.html":{},"miscellaneous/variables.html":{}}}],["company",{"_index":384,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{}},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/MailService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.controller",{"_index":535,"title":{},"body":{"modules/CompanyModule.html":{}}}],["company.dto",{"_index":506,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":599,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:11",{"_index":601,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:15",{"_index":602,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:19",{"_index":603,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:7",{"_index":604,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.name",{"_index":537,"title":{},"body":{"modules/CompanyModule.html":{},"classes/Resume.html":{}}}],["company.service",{"_index":504,"title":{},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{}}}],["company/company.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["companycontroller",{"_index":469,"title":{"controllers/CompanyController.html":{}},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"coverage.html":{}}}],["companydocument",{"_index":415,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyService.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":635,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":541,"title":{},"body":{"injectables/CompanyService.html":{}}}],["companymodule",{"_index":53,"title":{"modules/CompanyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompanyModule.html":{},"modules.html":{},"overview.html":{}}}],["companyschema",{"_index":418,"title":{},"body":{"classes/Company.html":{},"modules/CompanyModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["companyservice",{"_index":503,"title":{"injectables/CompanyService.html":{}},"body":{"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"coverage.html":{},"overview.html":{}}}],["comparesync",{"_index":1587,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparesync(password",{"_index":1600,"title":{},"body":{"injectables/UsersService.html":{}}}],["configmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{}}}],["configservice.get(\"email_auth_pass",{"_index":1068,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get(\"email_auth_user",{"_index":1067,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get(\"email_host",{"_index":1065,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get(\"email_preview",{"_index":1079,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get(\"jwt_access_token_secret",{"_index":1010,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["configservice.get(\"mongoose",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{}}}],["connect",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":1154,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log('directory",{"_index":1133,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log(error",{"_index":935,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["console.log(this.configservice.get('port",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["const",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(company.name",{"_index":551,"title":{},"body":{"injectables/CompanyService.html":{}}}],["constructor(@injectmodel(job.name",{"_index":920,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(@injectmodel(permission.name",{"_index":1221,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(@injectmodel(resume.name",{"_index":1327,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(@injectmodel(role.name",{"_index":1397,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(authservice",{"_index":1026,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":539,"title":{},"body":{"injectables/CompanyService.html":{}}}],["constructor(configservice",{"_index":996,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":912,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(mailerservice",{"_index":1081,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(permissionmodel",{"_index":1214,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":696,"title":{},"body":{"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":952,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1317,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1388,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subscribemodel",{"_index":1465,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":711,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":1149,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["context",{"_index":958,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/MailService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":974,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":973,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":978,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1252,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller(\"health",{"_index":837,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('auth",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":509,"title":{},"body":{"controllers/CompanyController.html":{}}}],["controller('databases",{"_index":695,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":788,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('jobs",{"_index":893,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":1045,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1202,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1301,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1374,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1448,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1553,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["convert",{"_index":447,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["cookie",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["coverage",{"_index":1612,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":472,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":511,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":477,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{}}}],["create(createfiledto",{"_index":817,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":875,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1189,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{}}}],["create(createresumedto",{"_index":1283,"title":{},"body":{"controllers/ResumesController.html":{}}}],["create(createroledto",{"_index":1364,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1430,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(createusercvdto",{"_index":1320,"title":{},"body":{"injectables/ResumesService.html":{}}}],["create(createuserdto",{"_index":1541,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcompanydto",{"_index":478,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":1135,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdad",{"_index":1332,"title":{},"body":{"injectables/ResumesService.html":{}}}],["createdat",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":388,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":605,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":439,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":1104,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":623,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createrefreshtoken",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresumedto",{"_index":632,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["createroledto",{"_index":652,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createsubscriberdto",{"_index":664,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createusercvdto",{"_index":651,"title":{"classes/CreateUserCvDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":458,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":1588,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto.password",{"_index":1591,"title":{},"body":{"injectables/UsersService.html":{}}}],["cron",{"_index":1043,"title":{},"body":{"controllers/MailController.html":{},"dependencies.html":{}}}],["ctx",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":576,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["currentpage",{"_index":487,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["customize",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["cv",{"_index":1337,"title":{},"body":{"injectables/ResumesService.html":{}}}],["cài",{"_index":1681,"title":{},"body":{"index.html":{}}}],["các",{"_index":738,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"index.html":{}}}],["câu",{"_index":1682,"title":{},"body":{"index.html":{}}}],["công",{"_index":941,"title":{},"body":{"injectables/JobsService.html":{}}}],["cấu",{"_index":1119,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cần",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cập",{"_index":990,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["của",{"_index":674,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"injectables/JwtAuthGuard.html":{}}}],["d",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/JwtStrategy.html":{},"injectables/MulterConfigService.html":{},"index.html":{}}}],["danh",{"_index":939,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["data",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["data.email",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["data.password",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["databases",{"_index":692,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":701,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":694,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases/databases.module",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":690,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":54,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":693,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":398,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["date(value",{"_index":446,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["date.now()}${extname",{"_index":1173,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["db",{"_index":1020,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["declarations",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":561,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defaults",{"_index":1069,"title":{},"body":{"modules/MailModule.html":{}}}],["defined",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":529,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":884,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{}}}],["deletedat",{"_index":389,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":390,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":1153,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":43,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":391,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UserLoginDto.html":{},"properties.html":{}}}],["destination",{"_index":1158,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dev",{"_index":1686,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1072,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["directory",{"_index":1144,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["diskstorage",{"_index":1116,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["documentation",{"_index":1613,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":505,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":507,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/user",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{}}}],["dân",{"_index":1691,"title":{},"body":{"index.html":{},"properties.html":{}}}],["dùng",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["dạng",{"_index":450,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"injectables/RolesService.html":{}}}],["dẫn",{"_index":1125,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["dụng",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/UsersService.html":{}}}],["dựa",{"_index":1015,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["each",{"_index":440,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["eexist",{"_index":1141,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ejs",{"_index":1656,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-2.html":{},"injectables/CompanyService.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email')@cron",{"_index":1037,"title":{},"body":{"controllers/MailController.html":{}}}],["emailexist",{"_index":1475,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["enddate",{"_index":452,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["enotdir",{"_index":1146,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists",{"_index":1105,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1108,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["err",{"_index":961,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["error.code",{"_index":1139,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["errorhttpstatuscode",{"_index":801,"title":{},"body":{"controllers/FilesController.html":{}}}],["example",{"_index":1537,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["exec",{"_index":934,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":956,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["exists",{"_index":1137,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["expiresin",{"_index":264,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":772,"title":{},"body":{"controllers/FilesController.html":{}}}],["express/multer/interfaces/multer",{"_index":1113,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extends",{"_index":948,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["extname",{"_index":1168,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":1001,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1006,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":1008,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file')@useinterceptors(undefined",{"_index":775,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto",{"_index":784,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":607,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":803,"title":{},"body":{"controllers/FilesController.html":{}}}],["fileinterceptor",{"_index":785,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":777,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["files",{"_index":764,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":811,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":783,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":762,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesmodule",{"_index":55,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":782,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filetype",{"_index":794,"title":{},"body":{"controllers/FilesController.html":{}}}],["filter",{"_index":554,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":559,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":560,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":1172,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["findall",{"_index":473,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(@query(\"current",{"_index":897,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["findall(@query('current",{"_index":1556,"title":{},"body":{"controllers/UsersController.html":{}}}],["findall(current",{"_index":1191,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["findall(currentpage",{"_index":483,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":474,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":519,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":488,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyusername",{"_index":1570,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername(username",{"_index":1579,"title":{},"body":{"injectables/UsersService.html":{}}}],["findroleidbyname",{"_index":1387,"title":{},"body":{"injectables/RolesService.html":{}}}],["findroleidbyname(name",{"_index":1393,"title":{},"body":{"injectables/RolesService.html":{}}}],["folder",{"_index":1160,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["forbiddenexception",{"_index":963,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["forbiddenexception(\"bạn",{"_index":988,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["fs",{"_index":1115,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1131,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["function",{"_index":1632,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1674,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":751,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/User.html":{}}}],["gensaltsync",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["get('/account",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/account')@responsemessage('get",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/profile",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/refresh",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":517,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@public()@responsemessage('find",{"_index":489,"title":{},"body":{"controllers/CompanyController.html":{}}}],["get(':id')@responsemessage('fetch",{"_index":881,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{}}}],["get(':id')@skipcheckpermission()@responsemessage('fetch",{"_index":1288,"title":{},"body":{"controllers/ResumesController.html":{}}}],["get()@public()@healthcheck",{"_index":830,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@public()@responsemessage('fetch",{"_index":485,"title":{},"body":{"controllers/CompanyController.html":{}}}],["get()@render('home",{"_index":12,"title":{},"body":{"controllers/AppController.html":{}}}],["get()@responsemessage('fetch",{"_index":878,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["get()@skipcheckpermission()@responsemessage('fetch",{"_index":1286,"title":{},"body":{"controllers/ResumesController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getprofile",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@req",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(req",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["getresumesbyuser",{"_index":1282,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["getresumesbyuser(@user",{"_index":1308,"title":{},"body":{"controllers/ResumesController.html":{}}}],["getresumesbyuser(user",{"_index":1290,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["getrootpath",{"_index":1103,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getskills",{"_index":1464,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getskills(user",{"_index":1471,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getting",{"_index":1676,"title":{"index.html":{}},"body":{}}],["getuserbytoken",{"_index":1568,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserskills",{"_index":1429,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(@user",{"_index":1450,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskills(user",{"_index":1435,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["ghi",{"_index":582,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{}}}],["gi",{"_index":970,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["global",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["graph",{"_index":1698,"title":{},"body":{"modules.html":{}}}],["h",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["handle",{"_index":1249,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["handlebars",{"_index":1658,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1055,"title":{},"body":{"modules/MailModule.html":{}}}],["handlegetaccount",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(@user",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(user",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(@res",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogout(response",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":951,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":959,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hash",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["hashpassword",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["hashsync",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["hashsync(password",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["health",{"_index":829,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":842,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":832,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":833,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":834,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":827,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":56,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":136,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1660,"title":{},"body":{"dependencies.html":{}}}],["hierarchy",{"_index":1148,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["history",{"_index":1256,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["hiện",{"_index":578,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JwtStrategy.html":{},"injectables/MulterConfigService.html":{}}}],["host",{"_index":1064,"title":{},"body":{"modules/MailModule.html":{}}}],["hr",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hr_role",{"_index":1627,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["http2",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["httponly",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://hoidanit.com.vn",{"_index":1705,"title":{},"body":{"properties.html":{}}}],["httpstatus",{"_index":781,"title":{},"body":{"controllers/FilesController.html":{}}}],["httpstatus.unprocessable_entity",{"_index":802,"title":{},"body":{"controllers/FilesController.html":{}}}],["hydrateddocument",{"_index":414,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hành",{"_index":1128,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["hơn",{"_index":1022,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["hướng",{"_index":1689,"title":{},"body":{"index.html":{}}}],["hỏi",{"_index":1690,"title":{},"body":{"index.html":{},"properties.html":{}}}],["hợp",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["id",{"_index":490,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["id')@public",{"_index":882,"title":{},"body":{"controllers/JobsController.html":{}}}],["identifier",{"_index":1614,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":1007,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1167,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["implements",{"_index":721,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["init_permissions",{"_index":719,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":131,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(job.name",{"_index":1088,"title":{},"body":{"injectables/MailService.html":{}}}],["injectmodel(permission.name",{"_index":722,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["injectmodel(role.name",{"_index":723,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(subscriber.name",{"_index":1087,"title":{},"body":{"injectables/MailService.html":{},"injectables/SubscribersService.html":{}}}],["injectmodel(user.name",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["insert",{"_index":1486,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["intercept",{"_index":1247,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1489,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":844,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":845,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["is_public_key",{"_index":966,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":967,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":453,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"classes/Role.html":{},"injectables/RolesService.html":{}}}],["isarray",{"_index":429,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["isboolean",{"_index":430,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{}}}],["isdate",{"_index":431,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["isdeleted",{"_index":392,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":457,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isempty",{"_index":550,"title":{},"body":{"injectables/CompanyService.html":{}}}],["isempty(sort",{"_index":568,"title":{},"body":{"injectables/CompanyService.html":{}}}],["isexist",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["isglobal",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["ismongoid",{"_index":650,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{}}}],["isnotempty",{"_index":432,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty({message",{"_index":640,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["isnotemptyobject",{"_index":433,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isnumber",{"_index":434,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["isobject",{"_index":435,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["ispublic",{"_index":971,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ispublicpermission",{"_index":986,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["iss",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":436,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":1533,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["it's",{"_index":1143,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["itviec",{"_index":1692,"title":{},"body":{"index.html":{}}}],["iuser",{"_index":156,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["iều",{"_index":586,"title":{},"body":{"injectables/CompanyService.html":{}}}],["job",{"_index":847,"title":{"classes/Job.html":{}},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Resume.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["job.company.name",{"_index":1094,"title":{},"body":{"injectables/MailService.html":{}}}],["job.dto",{"_index":891,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":422,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:13",{"_index":425,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:19",{"_index":616,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:25",{"_index":621,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:32",{"_index":609,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:37",{"_index":619,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:42",{"_index":618,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:46",{"_index":615,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:50",{"_index":610,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:56",{"_index":622,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:62",{"_index":612,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:67",{"_index":614,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:9",{"_index":424,"title":{},"body":{"classes/Company-1.html":{}}}],["job.name",{"_index":910,"title":{},"body":{"modules/JobsModule.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Resume.html":{}}}],["job.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":1095,"title":{},"body":{"injectables/MailService.html":{}}}],["job.skills",{"_index":1096,"title":{},"body":{"injectables/MailService.html":{}}}],["jobdocument",{"_index":869,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":636,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":914,"title":{},"body":{"injectables/JobsService.html":{},"injectables/MailService.html":{}}}],["jobs",{"_index":874,"title":{},"body":{"controllers/JobsController.html":{},"injectables/MailService.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":908,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":890,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":870,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":872,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":57,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":889,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["join",{"_index":1118,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["join(this.getrootpath",{"_index":1165,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpg|jpeg|image\\/jpeg|png|image\\/png|txt|text\\/plain|pdf|application\\/pdf",{"_index":795,"title":{},"body":{"controllers/FilesController.html":{}}}],["jwt",{"_index":1004,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauthguard",{"_index":77,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1005,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":250,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":243,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["k",{"_index":676,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"injectables/SubscribersService.html":{}}}],["khai",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["khoản",{"_index":1610,"title":{},"body":{"injectables/UsersService.html":{}}}],["khác",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["không",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["khẩu",{"_index":464,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["kiểm",{"_index":725,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{}}}],["kiểu",{"_index":642,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{}}}],["kiện",{"_index":587,"title":{},"body":{"injectables/CompanyService.html":{}}}],["kết",{"_index":591,"title":{},"body":{"injectables/CompanyService.html":{}}}],["l",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["legend",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":445,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["license",{"_index":1706,"title":{},"body":{"properties.html":{}}}],["limit",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limit(defaultlimit",{"_index":572,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/ResumesService.html":{},"injectables/UsersService.html":{}}}],["limit(limit",{"_index":932,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["line",{"_index":1101,"title":{},"body":{"injectables/MailService.html":{}}}],["listsubscribers",{"_index":1089,"title":{},"body":{"injectables/MailService.html":{}}}],["literal",{"_index":400,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["liệu",{"_index":448,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/JwtStrategy.html":{},"injectables/MulterConfigService.html":{}}}],["local",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":187,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":244,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":849,"title":{},"body":{"classes/Job.html":{},"injectables/MulterConfigService.html":{}}}],["login",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@req",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.dto",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.dto.ts",{"_index":1532,"title":{},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["login.dto.ts:16",{"_index":1535,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["login.dto.ts:8",{"_index":1536,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["logo",{"_index":393,"title":{},"body":{"classes/Company.html":{},"classes/CreateCompanyDto.html":{},"classes/Job.html":{}}}],["logout",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(res",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["làm",{"_index":1679,"title":{},"body":{"index.html":{}}}],["lòng",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["lưu",{"_index":1156,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["lượng",{"_index":580,"title":{},"body":{"injectables/CompanyService.html":{}}}],["lại",{"_index":1121,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["lấy",{"_index":583,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/MulterConfigService.html":{}}}],["lệnh",{"_index":1683,"title":{},"body":{"index.html":{}}}],["mai",{"_index":746,"title":{},"body":{"injectables/DatabasesService.html":{},"index.html":{}}}],["maianh20",{"_index":1534,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["mail",{"_index":1034,"title":{},"body":{"controllers/MailController.html":{}}}],["mail.controller",{"_index":1051,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":1041,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":1032,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":1052,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["mailermodule.forrootasync",{"_index":1062,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":1082,"title":{},"body":{"injectables/MailService.html":{}}}],["mailmodule",{"_index":58,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":1040,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["main.ts",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["male",{"_index":752,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["map",{"_index":1243,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1251,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map(job",{"_index":1093,"title":{},"body":{"injectables/MailService.html":{}}}],["matching",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":567,"title":{},"body":{"injectables/CompanyService.html":{}}}],["math.ceil(totalrecord",{"_index":928,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["maxage",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["maxsize",{"_index":797,"title":{},"body":{"controllers/FilesController.html":{}}}],["message",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":575,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":627,"title":{},"body":{"classes/CreatePermissionDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1673,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":40,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":42,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":1054,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1056,"title":{},"body":{"modules/MailModule.html":{}}}],["mongoose",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"injectables/CompanyService.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.array",{"_index":1276,"title":{},"body":{"classes/Resume.html":{}}}],["mongoose.schema.types.objectid",{"_index":417,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":593,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mongoosehealth",{"_index":838,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosehealthindicator",{"_index":835,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":257,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["ms",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["ms(configservice.get('jwt_access_expires",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get(\"jwt_refresh_expires",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":1117,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":814,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":813,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":812,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":815,"title":{},"body":{"modules/FilesModule.html":{}}}],["multeroption",{"_index":1122,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptions",{"_index":1107,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1112,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["máy",{"_index":1157,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["mảng",{"_index":679,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["mảng'})@isstring({each",{"_index":673,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["mật",{"_index":463,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["mỗi",{"_index":527,"title":{},"body":{"controllers/CompanyController.html":{}}}],["mục",{"_index":1126,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["n",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["nam",{"_index":759,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["name",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["ne",{"_index":1409,"title":{},"body":{"injectables/RolesService.html":{}}}],["nest",{"_index":1070,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["nestinterceptor",{"_index":1241,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":1053,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":251,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1494,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":786,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":836,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["new",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-1.html":{},"injectables/CompanyService.html":{},"classes/CreateJobDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newjob",{"_index":921,"title":{},"body":{"injectables/JobsService.html":{}}}],["newjob._id",{"_index":923,"title":{},"body":{"injectables/JobsService.html":{}}}],["newjob.createdat",{"_index":924,"title":{},"body":{"injectables/JobsService.html":{}}}],["newpermission",{"_index":1224,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission._id",{"_index":1226,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission.createdat",{"_index":1227,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newresume",{"_index":1329,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newresume?._id",{"_index":1331,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newresume?.createdat",{"_index":1333,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newrole",{"_index":1400,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole._id",{"_index":1402,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole.createdat",{"_index":1403,"title":{},"body":{"injectables/RolesService.html":{}}}],["newsubscriber",{"_index":1478,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubscriber._id",{"_index":1480,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubscriber.createdat",{"_index":1481,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newuser",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["next",{"_index":1248,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":461,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/MulterConfigService.html":{},"classes/RegisterUserDto.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["nguyenmaianh@gmail.com",{"_index":748,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MailService.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nguyenuser@gmail.com",{"_index":757,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["nguyễn",{"_index":1688,"title":{},"body":{"index.html":{}}}],["người",{"_index":1598,"title":{},"body":{"injectables/UsersService.html":{}}}],["nh",{"_index":462,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateResumeDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"injectables/RolesService.html":{}}}],["nhiều",{"_index":1021,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["nhóm",{"_index":1406,"title":{},"body":{"injectables/RolesService.html":{}}}],["nhật",{"_index":1603,"title":{},"body":{"injectables/UsersService.html":{}}}],["nodemailer",{"_index":1663,"title":{},"body":{"dependencies.html":{}}}],["normal_user",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1684,"title":{},"body":{"index.html":{}}}],["null",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":443,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"injectables/CompanyService.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["này",{"_index":992,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["nội",{"_index":753,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["object",{"_index":402,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["objectid",{"_index":1273,"title":{},"body":{"classes/Resume.html":{}}}],["observable",{"_index":1242,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["offset",{"_index":563,"title":{},"body":{"injectables/CompanyService.html":{}}}],["ok",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["omittype",{"_index":1512,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["omittype(createuserdto",{"_index":1510,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onmoduleinit",{"_index":710,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["optional",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1076,"title":{},"body":{"modules/MailModule.html":{}}}],["options.interface",{"_index":1114,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["out",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":1700,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":525,"title":{},"body":{"controllers/CompanyController.html":{}}}],["package",{"_index":1638,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":584,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":579,"title":{},"body":{"injectables/CompanyService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":1192,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["pagination",{"_index":896,"title":{},"body":{"controllers/JobsController.html":{}}}],["pagination')@public",{"_index":879,"title":{},"body":{"controllers/JobsController.html":{}}}],["param",{"_index":500,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":549,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":1147,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":780,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1654,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":1493,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{}}}],["partialtype(createcompanydto",{"_index":1492,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1497,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":1499,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1501,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":1503,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["partialtype(createroledto",{"_index":1505,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1507,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["pass",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":1003,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.strategy",{"_index":252,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.strategy",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":1000,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":994,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["passwordhash",{"_index":1589,"title":{},"body":{"injectables/UsersService.html":{}}}],["patch",{"_index":499,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":497,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":887,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["patch()@responsemessage('update",{"_index":1548,"title":{},"body":{"controllers/UsersController.html":{}}}],["path",{"_index":980,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1171,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1169,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.startswith(\"/api/v1/auth",{"_index":985,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["payload",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pending",{"_index":1328,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":704,"title":{"classes/Permission.html":{}},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.apipath",{"_index":984,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.dto",{"_index":1200,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":625,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:11",{"_index":628,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:15",{"_index":629,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:19",{"_index":630,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:7",{"_index":631,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.method",{"_index":983,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permission.name",{"_index":708,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{}}}],["permissioncount",{"_index":727,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["permissiondocument",{"_index":716,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":712,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"miscellaneous/variables.html":{}}}],["permissions.controller",{"_index":1211,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.find(permission",{"_index":982,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.service",{"_index":1199,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionscontroller",{"_index":1187,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":59,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1198,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["permissonexist",{"_index":1222,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["permissonschema",{"_index":705,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["phải",{"_index":659,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{}}}],["phần",{"_index":589,"title":{},"body":{"injectables/CompanyService.html":{},"classes/CreateSubscriberDto.html":{}}}],["pipe",{"_index":1250,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["plugin",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["populate",{"_index":1345,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["populate(population",{"_index":933,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["populate(population).exec",{"_index":574,"title":{},"body":{"injectables/CompanyService.html":{}}}],["population",{"_index":557,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["post",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post(\"/logout",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"/register",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["post(\"skills",{"_index":1449,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('/login",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout')@responsemessage('logout",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('by",{"_index":1291,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('skills')@skipcheckpermission()@responsemessage('get",{"_index":1436,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('upload",{"_index":789,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":876,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["post()@responsemessage('fetched",{"_index":479,"title":{},"body":{"controllers/CompanyController.html":{}}}],["post()@skipcheckpermission()@responsemessage('create",{"_index":1284,"title":{},"body":{"controllers/ResumesController.html":{}}}],["prefix",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":1078,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1127,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["processnewtoken(token",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{}}}],["projection",{"_index":556,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["promise",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{}}}],["prop",{"_index":396,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop(['undefined",{"_index":1356,"title":{},"body":{"classes/Role.html":{}}}],["prop({type",{"_index":401,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["properties",{"_index":268,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["provide",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/MailService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@get('/refresh')@responsemessage('get",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@get(':id')@responsemessage('fetch",{"_index":1544,"title":{},"body":{"controllers/UsersController.html":{}}}],["public()@post('/register')@responsemessage('register",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@post('upload')@responsemessage('upload",{"_index":773,"title":{},"body":{"controllers/FilesController.html":{}}}],["public()@useguards(localauthguard)@useguards(throttlerguard)@apibody({type",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1166,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["push",{"_index":1342,"title":{},"body":{"injectables/ResumesService.html":{}}}],["qs",{"_index":484,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["qu",{"_index":592,"title":{},"body":{"injectables/CompanyService.html":{}}}],["quantity",{"_index":444,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["query",{"_index":501,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query(\"pagesize",{"_index":898,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{}}}],["query('current",{"_index":514,"title":{},"body":{"controllers/CompanyController.html":{}}}],["query('pagesize",{"_index":515,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/UsersController.html":{}}}],["quyền",{"_index":468,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/RolesService.html":{}}}],["quản",{"_index":740,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["ra",{"_index":969,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{}}}],["readonly",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["recursive",{"_index":1132,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1258,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":953,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh_token",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["refreshtoken",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["refreshtoken(@req",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{}}}],["refreshtoken(req",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{}}}],["register",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["register(@body",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["register(data",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["registeruserdto",{"_index":287,"title":{"classes/RegisterUserDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["remove",{"_index":475,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":530,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":492,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":826,"title":{},"body":{"injectables/FilesService.html":{}}}],["render",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["render(\"home",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["req",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"injectables/MulterConfigService.html":{}}}],["req.body",{"_index":1554,"title":{},"body":{"controllers/UsersController.html":{}}}],["req.cookies[\"refresh_token",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["req.headers",{"_index":1162,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["req.user",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["req?.headers?.folder_type",{"_index":1161,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.method",{"_index":979,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.user",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request?.route?.path",{"_index":981,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["requested",{"_index":1142,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["res",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["res.clearcookie(\"refresh_token",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.cookie(\"refresh_token",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":164,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response_message",{"_index":1245,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage(\"create",{"_index":894,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"delete",{"_index":903,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"fetch",{"_index":513,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"get",{"_index":1307,"title":{},"body":{"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{}}}],["responsemessage(\"register",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage(\"send",{"_index":1046,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage(\"update",{"_index":901,"title":{},"body":{"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["responsemessage(\"upload",{"_index":790,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage('fetched",{"_index":510,"title":{},"body":{"controllers/CompanyController.html":{}}}],["responsemessage('find",{"_index":518,"title":{},"body":{"controllers/CompanyController.html":{}}}],["responsemessage('get",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('logout",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["result",{"_index":569,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1254,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume.dto",{"_index":1299,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts",{"_index":634,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["resume.dto.ts:10",{"_index":645,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:13",{"_index":649,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:16",{"_index":648,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:19",{"_index":647,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:23",{"_index":643,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:27",{"_index":646,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:33",{"_index":682,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:38",{"_index":680,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.dto.ts:43",{"_index":681,"title":{},"body":{"classes/CreateUserCvDto.html":{}}}],["resume.name",{"_index":1315,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1275,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1319,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1281,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1313,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1298,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes/resumes.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1277,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1279,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":60,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1297,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":226,"title":{"classes/Role.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.dto",{"_index":1372,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":654,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:13",{"_index":655,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:18",{"_index":660,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:24",{"_index":663,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:9",{"_index":661,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.name",{"_index":707,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["role.permissions",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["role?.permissions",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["rolecount",{"_index":729,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["roledocument",{"_index":717,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["roleexist",{"_index":1398,"title":{},"body":{"injectables/RolesService.html":{}}}],["roleid",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{}}}],["rolemodel",{"_index":713,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":1363,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1384,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1371,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":702,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1361,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["roleservice",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["rolesmodule",{"_index":61,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":193,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["roleuser",{"_index":1011,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["roleuser?.permissions",{"_index":1013,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["run",{"_index":1685,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1244,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["s",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/UsersService.html":{}}}],["salary",{"_index":442,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/MailService.html":{}}}],["salt",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["same",{"_index":1150,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":720,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["sang",{"_index":449,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["schedulemodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{},"classes/Company.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schema/company.schema",{"_index":536,"title":{},"body":{"modules/CompanyModule.html":{},"injectables/CompanyService.html":{}}}],["schemafactory",{"_index":413,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":419,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":871,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1186,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1278,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1360,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1425,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1530,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/job.schema",{"_index":909,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schemas/permission.schema",{"_index":1212,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schemas/resume.schema",{"_index":1314,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schemas/role.schema",{"_index":1385,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schemas/subscriber.schema",{"_index":1462,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schemas/user.schema",{"_index":1566,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":261,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":1009,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1066,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":1346,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["select(projection",{"_index":1336,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{}}}],["sendemail",{"_index":1035,"title":{},"body":{"controllers/MailController.html":{},"injectables/MailService.html":{}}}],["server",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{}}}],["setmetadata(is_public_key",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_permission",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signoptions",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{}}}],["single",{"_index":774,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["skills",{"_index":441,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/Job.html":{},"injectables/MailService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["skip",{"_index":929,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["skip(offset",{"_index":571,"title":{},"body":{"injectables/CompanyService.html":{}}}],["skip(skip",{"_index":931,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["skipcheckpermission",{"_index":1042,"title":{},"body":{"controllers/MailController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["skipcheckpermission()@get()@responsemessage('send",{"_index":1036,"title":{},"body":{"controllers/MailController.html":{}}}],["skipcheckpermission()@patch",{"_index":1442,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["skipcheckpermission()@post",{"_index":1431,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["soft",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/MailService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":555,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":573,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"modules/CompanyModule.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/.../company.schema.ts",{"_index":1711,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":1712,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1675,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1713,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1714,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1715,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscriber.schema.ts",{"_index":1716,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1717,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:15",{"_index":14,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":134,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:24",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:34",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:39",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:45",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:54",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:61",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:104",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:111",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:164",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:17",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:26",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:46",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:79",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:85",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/user",{"_index":1531,"title":{},"body":{"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/auth/jwt",{"_index":946,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":1023,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts",{"_index":993,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.strategy.ts:21",{"_index":999,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.strategy.ts:9",{"_index":997,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.strategy.ts",{"_index":1025,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.strategy.ts:12",{"_index":1029,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.strategy.ts:7",{"_index":1027,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/company/company.controller.ts",{"_index":470,"title":{},"body":{"controllers/CompanyController.html":{},"coverage.html":{}}}],["src/company/company.controller.ts:19",{"_index":482,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:27",{"_index":486,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:38",{"_index":491,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:43",{"_index":498,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.controller.ts:49",{"_index":494,"title":{},"body":{"controllers/CompanyController.html":{}}}],["src/company/company.module.ts",{"_index":534,"title":{},"body":{"modules/CompanyModule.html":{}}}],["src/company/company.service.ts",{"_index":538,"title":{},"body":{"injectables/CompanyService.html":{},"coverage.html":{}}}],["src/company/company.service.ts:13",{"_index":540,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:16",{"_index":542,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:27",{"_index":543,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:59",{"_index":544,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:67",{"_index":546,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/company.service.ts:82",{"_index":545,"title":{},"body":{"injectables/CompanyService.html":{}}}],["src/company/dto/create",{"_index":598,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/company/dto/update",{"_index":1491,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/company/schema/company.schema",{"_index":1274,"title":{},"body":{"classes/Resume.html":{}}}],["src/company/schema/company.schema.ts",{"_index":386,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/company/schema/company.schema.ts:12",{"_index":397,"title":{},"body":{"classes/Company.html":{}}}],["src/company/schema/company.schema.ts:15",{"_index":406,"title":{},"body":{"classes/Company.html":{}}}],["src/company/schema/company.schema.ts:18",{"_index":409,"title":{},"body":{"classes/Company.html":{}}}],["src/company/schema/company.schema.ts:21",{"_index":399,"title":{},"body":{"classes/Company.html":{}}}],["src/company/schema/company.schema.ts:24",{"_index":403,"title":{},"body":{"classes/Company.html":{}}}],["src/company/schema/company.schema.ts:30",{"_index":411,"title":{},"body":{"classes/Company.html":{}}}],["src/company/schema/company.schema.ts:33",{"_index":412,"title":{},"body":{"classes/Company.html":{}}}],["src/company/schema/company.schema.ts:39",{"_index":408,"title":{},"body":{"classes/Company.html":{}}}],["src/company/schema/company.schema.ts:42",{"_index":404,"title":{},"body":{"classes/Company.html":{}}}],["src/company/schema/company.schema.ts:45",{"_index":405,"title":{},"body":{"classes/Company.html":{}}}],["src/company/schema/company.schema.ts:9",{"_index":410,"title":{},"body":{"classes/Company.html":{}}}],["src/core/transform.intercepter.ts",{"_index":1238,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.intercepter.ts:15",{"_index":1488,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.intercepter.ts:19",{"_index":1490,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":691,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":700,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":709,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:12",{"_index":714,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:22",{"_index":715,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1626,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["src/decorator/customize.ts",{"_index":1628,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":606,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1496,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/entities/file.entity.ts",{"_index":761,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":763,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:18",{"_index":776,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:36",{"_index":766,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:41",{"_index":767,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:46",{"_index":770,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:51",{"_index":768,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":810,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":816,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":819,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":820,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":822,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":821,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":818,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1102,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:12",{"_index":1111,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:17",{"_index":1109,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:38",{"_index":1106,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/health/health.controller.ts",{"_index":828,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:22",{"_index":831,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":841,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/jobs/dto/create",{"_index":421,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":1498,"title":{},"body":{"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":873,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:16",{"_index":877,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:23",{"_index":880,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:30",{"_index":883,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:36",{"_index":888,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:42",{"_index":885,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":907,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":911,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:104",{"_index":918,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:12",{"_index":913,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:15",{"_index":915,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:31",{"_index":916,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:67",{"_index":917,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:79",{"_index":919,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schemas/job.schema",{"_index":1060,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Resume.html":{}}}],["src/jobs/schemas/job.schema.ts",{"_index":848,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schemas/job.schema.ts:11",{"_index":862,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:14",{"_index":865,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:17",{"_index":850,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:24",{"_index":860,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:27",{"_index":864,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:30",{"_index":863,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:33",{"_index":859,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:36",{"_index":855,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:39",{"_index":866,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:42",{"_index":856,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:45",{"_index":861,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:48",{"_index":857,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:51",{"_index":851,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:54",{"_index":852,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:60",{"_index":867,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:63",{"_index":868,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:69",{"_index":858,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:72",{"_index":853,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schemas/job.schema.ts:75",{"_index":854,"title":{},"body":{"classes/Job.html":{}}}],["src/mail/mail.controller.ts",{"_index":1033,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:16",{"_index":1038,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":1050,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1080,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/mail/mail.service.ts:16",{"_index":1085,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:9",{"_index":1084,"title":{},"body":{"injectables/MailService.html":{}}}],["src/main.ts",{"_index":1631,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":624,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1500,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1188,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:16",{"_index":1190,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:22",{"_index":1193,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:29",{"_index":1194,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:35",{"_index":1197,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:41",{"_index":1195,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1210,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1213,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:101",{"_index":1219,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:12",{"_index":1215,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:15",{"_index":1216,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:39",{"_index":1217,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:75",{"_index":1218,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:85",{"_index":1220,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schemas/permission.schema",{"_index":706,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{}}}],["src/permissions/schemas/permission.schema.ts",{"_index":1174,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schemas/permission.schema.ts:12",{"_index":1175,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:15",{"_index":1181,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:18",{"_index":1182,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:21",{"_index":1176,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:24",{"_index":1184,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:27",{"_index":1178,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:30",{"_index":1180,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:33",{"_index":1177,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:39",{"_index":1185,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:45",{"_index":1179,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schemas/permission.schema.ts:9",{"_index":1183,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":633,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":1502,"title":{},"body":{"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1280,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:17",{"_index":1285,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:24",{"_index":1287,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:32",{"_index":1289,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:38",{"_index":1296,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:44",{"_index":1294,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:51",{"_index":1293,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1312,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1316,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:118",{"_index":1325,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:12",{"_index":1318,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:134",{"_index":1324,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:15",{"_index":1321,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:46",{"_index":1322,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:84",{"_index":1323,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:94",{"_index":1326,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schemas/resume.schema.ts",{"_index":1255,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schemas/resume.schema.ts:11",{"_index":1264,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:14",{"_index":1272,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:17",{"_index":1271,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:20",{"_index":1268,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:25",{"_index":1259,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:30",{"_index":1267,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:33",{"_index":1265,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:43",{"_index":1260,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:46",{"_index":1261,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:52",{"_index":1269,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:55",{"_index":1270,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:61",{"_index":1266,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:64",{"_index":1262,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schemas/resume.schema.ts:67",{"_index":1263,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":653,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1504,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1362,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:16",{"_index":1365,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:22",{"_index":1366,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:27",{"_index":1367,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:33",{"_index":1370,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:38",{"_index":1368,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1383,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/roles/roles.service.ts",{"_index":1386,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:107",{"_index":1395,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:12",{"_index":1389,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:129",{"_index":1394,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:15",{"_index":1390,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:38",{"_index":1391,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:75",{"_index":1392,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:83",{"_index":1396,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schemas/role.schema",{"_index":703,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/roles/schemas/role.schema.ts",{"_index":1347,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schemas/role.schema.ts:10",{"_index":1355,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:13",{"_index":1352,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:16",{"_index":1353,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:19",{"_index":1357,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:22",{"_index":1348,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:25",{"_index":1358,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:28",{"_index":1350,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:31",{"_index":1354,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:34",{"_index":1349,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:40",{"_index":1359,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schemas/role.schema.ts:46",{"_index":1351,"title":{},"body":{"classes/Role.html":{}}}],["src/subscribers/dto/create",{"_index":665,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1506,"title":{},"body":{"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schemas/subscriber.schema",{"_index":1059,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts",{"_index":1414,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:12",{"_index":1421,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:15",{"_index":1422,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:18",{"_index":1415,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:21",{"_index":1423,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:24",{"_index":1417,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:27",{"_index":1420,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:30",{"_index":1416,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:36",{"_index":1424,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:42",{"_index":1418,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schemas/subscriber.schema.ts:9",{"_index":1419,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1427,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:17",{"_index":1438,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:23",{"_index":1432,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:28",{"_index":1433,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:33",{"_index":1434,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:39",{"_index":1443,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:44",{"_index":1439,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1460,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1463,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:113",{"_index":1472,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:12",{"_index":1466,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:17",{"_index":1468,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:40",{"_index":1469,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:77",{"_index":1470,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:85",{"_index":1474,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:99",{"_index":1473,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1509,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1513,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:12",{"_index":1524,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:15",{"_index":1521,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:18",{"_index":1525,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:21",{"_index":1515,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:24",{"_index":1522,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:27",{"_index":1514,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:30",{"_index":1516,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:36",{"_index":1527,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:39",{"_index":1526,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:42",{"_index":1517,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:45",{"_index":1518,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:51",{"_index":1528,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:54",{"_index":1529,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:60",{"_index":1523,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:63",{"_index":1519,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:66",{"_index":1520,"title":{},"body":{"classes/User.html":{}}}],["src/users/user.interface",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["src/users/user.interface.ts",{"_index":846,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":1539,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:17",{"_index":1542,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:24",{"_index":1543,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:31",{"_index":1545,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":1549,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:43",{"_index":1546,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{}}}],["src/users/users.module.ts",{"_index":1564,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["src/users/users.service.ts",{"_index":1567,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:105",{"_index":1580,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:112",{"_index":1574,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:116",{"_index":1582,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:133",{"_index":1581,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:15",{"_index":1572,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:157",{"_index":1584,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:165",{"_index":1585,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":1586,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:27",{"_index":1576,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:56",{"_index":1577,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:93",{"_index":1578,"title":{},"body":{"injectables/UsersService.html":{}}}],["startdate",{"_index":451,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{}}}],["started",{"_index":1677,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1615,"title":{},"body":{"coverage.html":{}}}],["stats",{"_index":480,"title":{},"body":{"controllers/CompanyController.html":{}}}],["status",{"_index":637,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":1239,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["storage",{"_index":1155,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":1002,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1077,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":135,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":1099,"title":{},"body":{"injectables/MailService.html":{}}}],["subscribemodel",{"_index":1467,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["subscriber",{"_index":1057,"title":{"classes/Subscriber.html":{}},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber's",{"_index":1437,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscriber.dto",{"_index":1446,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":666,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:12",{"_index":671,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:18",{"_index":677,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:8",{"_index":670,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.email",{"_index":1098,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriber.name",{"_index":1061,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/SubscribersModule.html":{}}}],["subscriber.skills",{"_index":1092,"title":{},"body":{"injectables/MailService.html":{}}}],["subscriberdocument",{"_index":1086,"title":{},"body":{"injectables/MailService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"miscellaneous/typealiases.html":{}}}],["subscribermodel",{"_index":1083,"title":{},"body":{"injectables/MailService.html":{}}}],["subscribers",{"_index":1428,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers.controller",{"_index":1461,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1445,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":1058,"title":{},"body":{"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1426,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":62,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1444,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["succesfully",{"_index":481,"title":{},"body":{"controllers/CompanyController.html":{}}}],["successfully",{"_index":1134,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["super",{"_index":968,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":975,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1695,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1696,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1138,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sách",{"_index":940,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["t",{"_index":590,"title":{},"body":{"injectables/CompanyService.html":{},"classes/CreateSubscriberDto.html":{},"index.html":{}}}],["table",{"_index":1637,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1636,"title":{},"body":{"coverage.html":{}}}],["targetdirectory",{"_index":1110,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["temp",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["template",{"_index":1071,"title":{},"body":{"modules/MailModule.html":{},"injectables/MailService.html":{}}}],["templates",{"_index":1074,"title":{},"body":{"modules/MailModule.html":{}}}],["terminusmodule",{"_index":843,"title":{},"body":{"modules/HealthModule.html":{}}}],["testing",{"_index":1100,"title":{},"body":{"injectables/MailService.html":{}}}],["th",{"_index":524,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/JwtStrategy.html":{},"injectables/MulterConfigService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["this.appservice.gethello",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(response",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.register(data",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":1030,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companymodel.create",{"_index":552,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companymodel.find(filter",{"_index":570,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":565,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companymodel.findbyid(id",{"_index":595,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companymodel.softdelete",{"_index":597,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companymodel.updateone",{"_index":596,"title":{},"body":{"injectables/CompanyService.html":{}}}],["this.companyservice.create(createcompanydto",{"_index":512,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.findall(+currentpage",{"_index":516,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.findone(id",{"_index":520,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.remove(id",{"_index":531,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.companyservice.update(id",{"_index":522,"title":{},"body":{"controllers/CompanyController.html":{}}}],["this.configservice.get(\"jwt_refresh_token_secret",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.createrefreshtoken(payload",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":1163,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":804,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":805,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":807,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":806,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.hashpassword(createuserdto.password",{"_index":1590,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.hashpassword(data.password",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.healthcheck.check",{"_index":839,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jobmodel.create",{"_index":922,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":1091,"title":{},"body":{"injectables/MailService.html":{}}}],["this.jobmodel.find(filter",{"_index":930,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":926,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findone",{"_index":943,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":945,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":944,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":895,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(+currentpage",{"_index":899,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":900,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":904,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":902,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.mailerservice.sendmail",{"_index":1097,"title":{},"body":{"injectables/MailService.html":{}}}],["this.mailservice.sendemail",{"_index":1047,"title":{},"body":{"controllers/MailController.html":{}}}],["this.mongoosehealth.pingcheck(\"database",{"_index":840,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.permissionmodel.count",{"_index":728,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1225,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter",{"_index":1229,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1228,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select(\"_id",{"_index":735,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findone",{"_index":1223,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(init_permissions",{"_index":734,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete",{"_index":1232,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":1231,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1203,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(+current",{"_index":1204,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1205,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1207,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1206,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message",{"_index":1253,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":972,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_permission",{"_index":987,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel.create",{"_index":1330,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find",{"_index":1344,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter",{"_index":1335,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1334,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findbyid(id",{"_index":1338,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1343,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1339,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createresumedto",{"_index":1302,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(+current",{"_index":1303,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1304,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.getresumesbyuser(user",{"_index":1309,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1306,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1305,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel.count",{"_index":730,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1401,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter",{"_index":1405,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1404,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1407,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":743,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["this.rolemodel.insertmany",{"_index":736,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1413,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":1410,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.roleservice.findone(role._id)).toobject",{"_index":1012,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.roleservice.findone(temp._id",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.roleservice.findone(user.role._id",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.roleservice.findone(userrole._id",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.roleservice.findroleidbyname(user_role",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1375,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(+current",{"_index":1376,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1377,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.remove(id",{"_index":1379,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1378,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subscribemodel.create",{"_index":1479,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribemodel.find(filter",{"_index":1483,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribemodel.find(filter)).length",{"_index":1482,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribemodel.findone",{"_index":1476,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribemodel.softdelete",{"_index":1487,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribemodel.updateone",{"_index":1484,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find",{"_index":1090,"title":{},"body":{"injectables/MailService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1452,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(+current",{"_index":1453,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1454,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.getskills(user",{"_index":1451,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1457,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1456,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel.count",{"_index":732,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.usermodel.find(filter",{"_index":1597,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1596,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1599,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":744,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1611,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":1601,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.checkpassword(pass",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findonebyusername(username",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.getuserbytoken(token",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.hashpassword(this.configservice.get(\"init_password",{"_index":749,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.userservice.updaterefreshtoken(null",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updaterefreshtoken(refresh_token",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1555,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(+currentpage",{"_index":1557,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1558,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":1560,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(updateuserdto",{"_index":1559,"title":{},"body":{"controllers/UsersController.html":{}}}],["throttle",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlerguard",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlermodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thuộc",{"_index":1016,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["thái",{"_index":657,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["thông",{"_index":1604,"title":{},"body":{"injectables/UsersService.html":{}}}],["thấy",{"_index":938,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thống",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["thực",{"_index":1018,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["timestamps",{"_index":416,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["tin",{"_index":1605,"title":{},"body":{"injectables/UsersService.html":{}}}],["tnhh1tv",{"_index":756,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["token",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["total",{"_index":588,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":564,"title":{},"body":{"injectables/CompanyService.html":{}}}],["totalpage",{"_index":927,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":566,"title":{},"body":{"injectables/CompanyService.html":{}}}],["totalrecord",{"_index":925,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tr",{"_index":741,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["tra",{"_index":726,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{}}}],["trang",{"_index":577,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JwtAuthGuard.html":{}}}],["transform",{"_index":427,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{}}}],["transformer",{"_index":428,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1246,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1063,"title":{},"body":{"modules/MailModule.html":{}}}],["trong",{"_index":739,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"injectables/MulterConfigService.html":{}}}],["true",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["truy",{"_index":989,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["try",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["trying",{"_index":1152,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["trên",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["trúc",{"_index":1120,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["trạng",{"_index":656,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trống",{"_index":460,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateCompanyDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["trống'})@isarray()@ismongoid({each",{"_index":662,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trống'})@isarray({message",{"_index":672,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["trống'})@isboolean({message",{"_index":658,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["trống'})@isemail",{"_index":644,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["trống'})@ismongoid({message",{"_index":641,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{}}}],["ttl",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["tuổi",{"_index":465,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["type",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1709,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1495,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["tài",{"_index":1609,"title":{},"body":{"injectables/UsersService.html":{}}}],["tác",{"_index":1687,"title":{},"body":{"index.html":{}}}],["tìm",{"_index":937,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["tính",{"_index":1017,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/MulterConfigService.html":{}}}],["tượng",{"_index":1014,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["tại",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["tạo",{"_index":1130,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["tất",{"_index":737,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["tồn",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["tổng",{"_index":585,"title":{},"body":{"injectables/CompanyService.html":{}}}],["unauthorizedexception",{"_index":964,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":1257,"title":{},"body":{"classes/Resume.html":{},"classes/User.html":{}}}],["undefined})@post('/login",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{}}}],["unknown",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1707,"title":{},"body":{"properties.html":{}}}],["update",{"_index":476,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@body",{"_index":1455,"title":{},"body":{"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["update(@param('id",{"_index":521,"title":{},"body":{"controllers/CompanyController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{}}}],["update(id",{"_index":495,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["update(updatesubscriberdto",{"_index":1440,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["update(updateuserdto",{"_index":1547,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateby",{"_index":1341,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{}}}],["updatecompanydto",{"_index":496,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":394,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":395,"title":{},"body":{"classes/Company.html":{},"injectables/CompanyService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updatefiledto",{"_index":769,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":886,"title":{"classes/UpdateJobDto.html":{}},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1196,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updaterefreshtoken",{"_index":1571,"title":{},"body":{"injectables/UsersService.html":{}}}],["updaterefreshtoken(refresh_token",{"_index":1583,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateresumedto",{"_index":1295,"title":{"classes/UpdateResumeDto.html":{}},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["updateresumedto.status",{"_index":1340,"title":{},"body":{"injectables/ResumesService.html":{}}}],["updateroledto",{"_index":1369,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updateroledto.name",{"_index":1408,"title":{},"body":{"injectables/RolesService.html":{}}}],["updates",{"_index":825,"title":{},"body":{"injectables/FilesService.html":{}}}],["updatesubscriberdto",{"_index":1441,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1508,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto._id",{"_index":1602,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":779,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":765,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(@uploadedfile",{"_index":792,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":771,"title":{},"body":{"controllers/FilesController.html":{}}}],["upsert",{"_index":1485,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["uri",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":638,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["useclass",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{}}}],["usefactory",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["useguards",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(throttlerguard",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":778,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":791,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":158,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@skipcheckpermission()@responsemessage('get",{"_index":1292,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user._id",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.createdat",{"_index":1595,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.dto",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":454,"title":{},"body":{"classes/Company-2.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":455,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:14",{"_index":456,"title":{},"body":{"classes/Company-2.html":{}}}],["user.dto.ts:20",{"_index":687,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":686,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:29",{"_index":688,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:33",{"_index":684,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:37",{"_index":683,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:41",{"_index":689,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:48",{"_index":685,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:54",{"_index":1236,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:59",{"_index":1235,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:63",{"_index":1237,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:67",{"_index":1234,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:71",{"_index":1233,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:9",{"_index":1511,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":553,"title":{},"body":{"injectables/CompanyService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.interface",{"_index":1551,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":258,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.role",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?._id",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.createdat",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.permissions",{"_index":977,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["user_role",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercount",{"_index":731,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usercreate",{"_index":1575,"title":{},"body":{"injectables/UsersService.html":{}}}],["usercreate._id",{"_index":1593,"title":{},"body":{"injectables/UsersService.html":{}}}],["usercreate.email",{"_index":1594,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdelete",{"_index":1606,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdelete.email",{"_index":1607,"title":{},"body":{"injectables/UsersService.html":{}}}],["userdocument",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":639,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/CreateUserCvDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["userlogindto",{"_index":200,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto})@throttle({default",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["usermodel",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["username/password",{"_index":1031,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userrole",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["userrole._id",{"_index":1592,"title":{},"body":{"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":760,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["userrole?.permissions",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":1540,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1565,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1550,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":254,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1538,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":63,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":275,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["v",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{}}}],["v1",{"_index":528,"title":{},"body":{"controllers/CompanyController.html":{}}}],["validate",{"_index":995,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":998,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":1028,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":437,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["validateuser",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":438,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"injectables/CompanyService.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserCvDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"injectables/MulterConfigService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1625,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1718,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":502,"title":{},"body":{"controllers/CompanyController.html":{},"properties.html":{}}}],["version('1",{"_index":523,"title":{},"body":{"controllers/CompanyController.html":{}}}],["version('1')@delete(':id",{"_index":493,"title":{},"body":{"controllers/CompanyController.html":{}}}],["việc",{"_index":942,"title":{},"body":{"injectables/JobsService.html":{}}}],["viện",{"_index":1124,"title":{},"body":{"injectables/MulterConfigService.html":{},"index.html":{}}}],["void",{"_index":1039,"title":{},"body":{"controllers/MailController.html":{},"injectables/MulterConfigService.html":{}}}],["vui",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["vào",{"_index":991,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{}}}],["vấn",{"_index":1019,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["với",{"_index":526,"title":{},"body":{"controllers/CompanyController.html":{},"injectables/CompanyService.html":{},"index.html":{}}}],["world",{"_index":137,"title":{},"body":{"injectables/AppService.html":{}}}],["xác",{"_index":678,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["xác'})@isnotempty({message",{"_index":669,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["xóa",{"_index":1412,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["yes",{"_index":962,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["you're",{"_index":1151,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["zoom",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompanyModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Render('home')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { message: any; }\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Render, Request, UseGuards } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ConfigService } from '@nestjs/config';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly configService: ConfigService,\n  ) { }\n\n  //Ví dụ\n  @Get()\n  @Render(\"home\")\n  getHello() {\n    console.log(this.configService.get('PORT'));\n    return {\n      message: this.appService.getHello()\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompanyModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { connect } from 'http2';\nimport { CompanyModule } from './company/company.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { RolesModule } from './roles/roles.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { HealthModule } from './health/health.module';\n\n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule, UsersModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get(\"MONGOOSE\"),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        }\n      }),\n      inject: [ConfigService]\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true //Dùng không cần khai báo\n    }),\n    ThrottlerModule.forRoot([{\n      ttl: 60000, //đơn vị ms\n      limit: 2\n    }]),\n    UsersModule,\n    AuthModule,\n    CompanyModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    RolesModule,\n    PermissionsModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailModule,\n    HealthModule\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    // {\n    //   provide: APP_GUARD,\n    //   useClass: JwtAuthGuard,\n    // }, //khai báo global bên main.ts\n  ],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                handleGetAccount\n                            \n                            \n                                    \n                                    \n                                handleLogout\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/profile')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        handleGetAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleGetAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/account')@ResponseMessage('Get user information')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogout(response: Response, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/logout')@ResponseMessage('Logout user')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(LocalAuthGuard)@UseGuards(ThrottlerGuard)@ApiBody({type: UserLoginDto})@Throttle({default: undefined})@Post('/login')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    refreshToken(req: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('/refresh')@ResponseMessage('Get user by refresh token')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('/register')@ResponseMessage('Register a new user')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post, Render, Req, Res, UseGuards } from '@nestjs/common';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { AuthService } from './auth.service';\nimport { Request, Response } from 'express';\nimport { IUser } from 'src/users/user.interface';\nimport { RolesService } from 'src/roles/roles.service';\nimport { Throttle } from '@nestjs/throttler';\nimport { ThrottlerGuard } from '@nestjs/throttler'\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { UserLoginDto } from './dto/user-login.dto';\n\n@ApiTags('Auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly roleService: RolesService\n  ) { }\n\n  @Public()\n  @Post(\"/register\")\n  @ResponseMessage(\"Register a new user\")\n  async register(@Body() data) {\n    return this.authService.register(data);\n  }\n\n  @Public() //decorator customize\n  @UseGuards(LocalAuthGuard)\n  @UseGuards(ThrottlerGuard)\n  @ApiBody({ type: UserLoginDto })\n  @Throttle({ default: { limit: 3, ttl: 60000 } })\n  @Post('/login')\n  async login(@Req() req, @Res({ passthrough: true }) response: Response) {\n    return this.authService.login(req.user, response);\n  }\n\n  @Get('/profile')\n  getProfile(@Req() req) {\n    return req.user;\n  }\n\n  @Get('/account')\n  @ResponseMessage('Get user information')\n  async handleGetAccount(@User() user: IUser) {\n    const role = await this.roleService.findOne(user.role._id) as any;\n    user.permissions = role.permissions;\n    return { user };\n  }\n\n  @Public()\n  @Get('/refresh')\n  @ResponseMessage('Get user by refresh token')\n  refreshToken(@Req() req: Request, @Res({ passthrough: true }) response: Response) {\n    const refreshToken = req.cookies[\"refresh_token\"];\n    return this.authService.processNewToken(refreshToken, response);\n  }\n\n  @Post(\"/logout\")\n  @ResponseMessage('Logout user')\n  handleLogout(@Res({ passthrough: true }) response: Response, @User() user: IUser) {\n    return this.authService.logout(response, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './passport/local.strategy';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersModule } from 'src/users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtStrategy } from './passport/jwt.strategy';\nimport ms from 'ms';\nimport { AuthController } from './auth.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { RolesModule } from 'src/roles/roles.module';\n\n@Module({\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  imports: [UsersModule, PassportModule, RolesModule,\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: ms(configService.get('JWT_ACCESS_EXPIRES')) / 1000,\n        },\n      }),\n      inject: [ConfigService],\n    })],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                            \n                                hashPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                processNewToken\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService, configService: ConfigService, roleService: RolesService, userModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: IUser, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(res: Response, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processNewToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    processNewToken(token: string, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(data: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:79\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { genSaltSync, hashSync } from 'bcryptjs';\nimport { Response } from 'express';\nimport ms from 'ms';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { USER_ROLE } from 'src/databases/sample';\nimport { RolesService } from 'src/roles/roles.service';\nimport { RegisterUserDto } from 'src/users/dto/create-user.dto';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { IUser } from 'src/users/user.interface';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly userService: UsersService,\n    private readonly jwtService: JwtService,\n    private readonly configService: ConfigService,\n    private readonly roleService: RolesService,\n    @InjectModel(User.name) private userModel: SoftDeleteModel\n  ) { }\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.userService.findOneByUserName(username);\n    if (user) {\n      const check = this.userService.checkPassword(pass, user.password);\n      if (check === true) {\n        const userRole = user.role as unknown as { _id: string, name: string }\n\n        const role = await this.roleService.findOne(userRole._id);\n\n        const newUser = {\n          ...user.toObject(),\n          permissions: role?.permissions ?? []\n        }\n\n        return newUser;\n      }\n    }\n    return null;\n  }\n\n  async login(user: IUser, res: Response) {\n    const { _id, name, email, role, permissions } = user;\n    const payload = {\n      sub: \"token login\",\n      iss: \"from server\",\n      _id,\n      name,\n      email,\n      role\n    }\n\n    const refresh_token = this.createRefreshToken(payload);\n\n    await this.userService.updateRefreshToken(refresh_token, _id);\n\n    //Set cookie\n    res.cookie(\"refresh_token\", refresh_token, {\n      httpOnly: true,\n      maxAge: ms(this.configService.get(\"JWT_REFRESH_EXPIRES\")) * 1000\n    })\n\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: {\n        _id,\n        name,\n        email,\n        role,\n        permissions\n      }\n    }\n  }\n\n  hashPassword = (password: string) => {\n    const salt = genSaltSync(10);\n    const hash = hashSync(password, salt);\n    return hash;\n  }\n\n  async register(data: RegisterUserDto) {\n    //Check email exist\n    const isExist = await this.userModel.findOne({\n      email: data.email\n    });\n    if (isExist) {\n      throw new BadRequestException(`Email ${data.email} đã tồn tại trên hệ thống. Vui lòng sử dụng email khác`);\n    }\n    //Hash code\n    data.password = await this.hashPassword(data.password);\n\n    const roleId = await this.roleService.findRoleIdByName(USER_ROLE);\n    const user = await this.userModel.create({ ...data, role: roleId });\n    return {\n      _id: user?._id,\n      createdAt: user?.createdAt\n    };\n  }\n\n  createRefreshToken = (payload) => {\n    return this.jwtService.sign(payload, {\n      secret: this.configService.get(\"JWT_REFRESH_TOKEN_SECRET\"),\n      expiresIn: ms(this.configService.get(\"JWT_REFRESH_EXPIRES\")) / 1000  //đơn vị là s\n    });\n  }\n\n  async processNewToken(token: string, res: Response) {\n    try {\n      this.jwtService.verify(token, {\n        secret: this.configService.get(\"JWT_REFRESH_TOKEN_SECRET\")\n      });\n\n      const user = await this.userService.getUserByToken(token);\n\n      if (user) {\n        let { _id, name, email, role } = user;\n        const payload = {\n          sub: \"token refresh\",\n          iss: \"from server\",\n          _id,\n          name,\n          email,\n          role\n        }\n\n        const refresh_token = this.createRefreshToken(payload);\n\n        await this.userService.updateRefreshToken(refresh_token, _id);\n\n        //Clear cookie\n        res.clearCookie(\"refresh_token\");\n\n        //Set cookie\n        res.cookie(\"refresh_token\", refresh_token, {\n          httpOnly: true,\n          maxAge: ms(this.configService.get(\"JWT_REFRESH_EXPIRES\")) * 1000\n        })\n\n        const temp = user.role as unknown as { _id: string, name: string };\n        const userRole = await this.roleService.findOne(temp._id);\n\n        return {\n          access_token: this.jwtService.sign(payload),\n          user: {\n            _id,\n            name,\n            email,\n            role,\n            permissions: userRole?.permissions ?? []\n          }\n        }\n      } else {\n        throw new BadRequestException({ message: \"Refresh token không hợp lệ\" });\n      }\n    } catch (error) {\n      throw new BadRequestException({ message: \"Refresh token không hợp lệ\" });\n    }\n  }\n\n  async logout(res: Response, user: IUser) {\n    res.clearCookie(\"refresh_token\");\n    await this.userService.updateRefreshToken(null, user._id);\n    return \"ok\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/schema/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/schema/company.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/schema/company.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/schema/company.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/schema/company.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/schema/company.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/schema/company.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/schema/company.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/schema/company.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/schema/company.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/schema/company.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/schema/company.schema.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport mongoose, { HydratedDocument } from \"mongoose\";\n\nexport type CompanyDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Company {\n  @Prop()\n  name: string;\n\n  @Prop()\n  address: string;\n\n  @Prop()\n  description: string\n\n  @Prop()\n  logo: string\n\n  @Prop()\n  createdAt: Date\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  }\n\n  @Prop()\n  updatedAt: Date\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n\n  @Prop()\n  isDeleted: boolean\n\n  @Prop()\n  deletedAt: Date\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n}\n\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Transform, Type } from \"class-transformer\";\nimport { IsArray, IsBoolean, IsDate, IsNotEmpty, IsNotEmptyObject, IsNumber, IsObject, IsString, ValidateNested } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nclass Company {\n  @ApiProperty()\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateJobDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsArray()\n  @IsString({ each: true })\n  skills: string[]\n\n  @ApiProperty()\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsNumber()\n  salary: number;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsNumber()\n  quantity: number;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  level: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  description: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Transform(({ value }) => new Date(value)) //convert dữ liệu sang dạng Date\n  @IsDate()\n  startDate: Date;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Transform(({ value }) => new Date(value)) //convert dữ liệu sang dạng Date\n  @IsDate()\n  endDate: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsBoolean()\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from \"class-validator\";\n\nimport { Type } from 'class-transformer';\nimport mongoose from \"mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  @IsEmail({}, { message: \"Email không đúng định dạng\" })\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Mật khẩu không được để trống\" })\n  password: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Tuổi không được để trống\" })\n  age: number;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Địa chỉ không được để trống\" })\n  address: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Quyền không được để trống\" })\n  role: string;\n\n  @ApiProperty()\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  @IsEmail({}, { message: \"Email không đúng định dạng\" })\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Mật khẩu không được để trống\" })\n  password: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Tuổi không được để trống\" })\n  age: number;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Địa chỉ không được để trống\" })\n  address: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompanyController.html":{"url":"controllers/CompanyController.html","title":"controller - CompanyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompanyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/company.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, req: Request, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Fetched Stats Succesfully')\n                \n            \n\n                    \n                        \n                            Defined in src/company/company.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Fetch companies')\n                \n            \n\n                    \n                        \n                            Defined in src/company/company.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('Find company by id')\n                \n            \n\n                    \n                        \n                            Defined in src/company/company.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Version('1')@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/company/company.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/company/company.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Req, Query, Version } from '@nestjs/common';\nimport { CompanyService } from './company.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/user.interface';\nimport { Request } from 'express';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Company')\n@Controller('companies')\nexport class CompanyController {\n  constructor(\n    private readonly companyService: CompanyService\n  ) { }\n\n  @Post()\n  @ResponseMessage('Fetched Stats Succesfully')\n  create(@Body() createCompanyDto: CreateCompanyDto, @Req() req: Request, @User() user: IUser) {\n    //@User : req.user\n    return this.companyService.create(createCompanyDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage(\"Fetch companies\")\n  findAll(\n    @Query('current') currentPage: string,\n    @Query('pageSize') limit: string,\n    @Query() qs: string\n  ) {\n    return this.companyService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('Find company by id')\n  findOne(@Param('id') id: string) {\n    return this.companyService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCompanyDto: UpdateCompanyDto, @User() user: IUser) {\n    return this.companyService.update(id, updateCompanyDto, user);\n  }\n\n  @Version('1') //chỉ có thể áp dụng với mỗi v1\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.companyService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompanyModule.html":{"url":"modules/CompanyModule.html","title":"module - CompanyModule","body":"\n                   \n\n\n\n\n    Modules\n    CompanyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_providers\n\n\n\n\nCompanyService\n\nCompanyService\n\n\n\nCompanyModule\n\nCompanyModule\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/company/company.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompanyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompanyController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompanyService } from './company.service';\nimport { CompanyController } from './company.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from './schema/company.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }])],\n  controllers: [CompanyController],\n  providers: [CompanyService],\n  exports: []\n})\nexport class CompanyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompanyService.html":{"url":"injectables/CompanyService.html","title":"injectable - CompanyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompanyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/company.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(CompanyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/company/company.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        CompanyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/company/company.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/company/company.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/company/company.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/company/company.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/company/company.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Company, CompanyDocument } from './schema/company.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/user.interface';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\nimport { isEmpty } from 'class-validator';\n\n@Injectable()\nexport class CompanyService {\n  constructor(@InjectModel(Company.name) private CompanyModel: SoftDeleteModel) { }\n\n  async create(createCompanyDto: CreateCompanyDto, user: IUser) {\n    const company: CreateCompanyDto = await this.CompanyModel.create({\n      ...createCompanyDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    });\n    return company;\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    let { filter, sort, projection, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n\n    let defaultLimit = limit ? limit : 10;\n    let offset = (currentPage - 1) * defaultLimit;\n    const totalItems = (await this.CompanyModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n\n    if (isEmpty(sort)) {\n      sort = \"-updatedAt\" as any;\n    }\n\n    const result = await this.CompanyModel.find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population).exec();\n\n    return {\n      meta: {\n        current: currentPage, //trang hiện tại \n        pageSize: limit, //số lượng bản ghi đã lấy \n        pages: totalPages, //tổng số trang với điều kiện query \n        total: totalItems // tổng số phần tử (số bản ghi)\n      },\n      result //kết quả query\n    }\n\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`${id} là id không hợp lệ`);\n    }\n    const company = await this.CompanyModel.findById(id);\n    return company;\n  }\n\n  async update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`${id} là id không hợp lệ`);\n    }\n    return await this.CompanyModel.updateOne({\n      _id: id\n    }, {\n      ...updateCompanyDto,\n      updatedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.CompanyModel.updateOne({\n      _id: id\n    }, {\n      deletedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return await this.CompanyModel.softDelete({\n      _id: id\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                logo\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Address không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/dto/create-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/dto/create-company.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Logo không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/dto/create-company.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/company/dto/create-company.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty } from \"class-validator\";\n\nexport class CreateCompanyDto {\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Name không được để trống\" })\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Address không được để trống\" })\n  address: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Description không được để trống\" })\n  description: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Logo không được để trống\" })\n  logo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                endDate\n                            \n                            \n                                    \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    \n                                level\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                salary\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                skills\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Transform( => )@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsArray()@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Transform( => )@IsDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Transform, Type } from \"class-transformer\";\nimport { IsArray, IsBoolean, IsDate, IsNotEmpty, IsNotEmptyObject, IsNumber, IsObject, IsString, ValidateNested } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nclass Company {\n  @ApiProperty()\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateJobDto {\n  @ApiProperty()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsArray()\n  @IsString({ each: true })\n  skills: string[]\n\n  @ApiProperty()\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsNumber()\n  salary: number;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsNumber()\n  quantity: number;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  level: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  description: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Transform(({ value }) => new Date(value)) //convert dữ liệu sang dạng Date\n  @IsDate()\n  startDate: Date;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @Transform(({ value }) => new Date(value)) //convert dữ liệu sang dạng Date\n  @IsDate()\n  endDate: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsBoolean()\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                    \n                                method\n                            \n                            \n                                    \n                                    \n                                module\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'ApiPath không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Method không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Module không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsNotEmpty } from \"class-validator\";\n\nexport class CreatePermissionDto {\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Name không được để trống\" })\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"ApiPath không được để trống\" })\n  apiPath: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Method không được để trống\" })\n  method: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Module không được để trống\" })\n  module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'CompanyId không được để trống'})@IsMongoId({message: 'companyId là kiểu id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Email không được để trống'})@IsEmail({}, {message: 'Không đúng định dạng email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'JobId không được để trống'})@IsMongoId({message: 'jobId là kiểu id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Status không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Url không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'userId không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsEmail, IsMongoId, IsNotEmpty, IsObject, ValidateNested } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\n\nexport class CreateResumeDto {\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  @IsEmail({}, { message: \"Không đúng định dạng email\" })\n  email: string;\n\n  @IsNotEmpty({ message: \"userId không được để trống\" })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: \"Url không được để trống\" })\n  url: string;\n\n  @IsNotEmpty({ message: \"Status không được để trống\" })\n  status: string;\n\n  @IsNotEmpty({ message: \"CompanyId không được để trống\" })\n  @IsMongoId({ message: \"companyId là kiểu id\" })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: \"JobId không được để trống\" })\n  @IsMongoId({ message: \"jobId là kiểu id\" })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Url không được để trống\" })\n  url: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"CompanyId không được để trống\" })\n  @IsMongoId({ message: \"companyId là kiểu id\" })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"JobId không được để trống\" })\n  @IsMongoId({ message: \"jobId là kiểu id\" })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                isActive\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Description không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Trạng thái không được để trống'})@IsBoolean({message: 'Phải là dạng boolean'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Name không được để trống'})@IsArray()@IsMongoId({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsArray, IsBoolean, IsMongoId, IsNotEmpty, ValidateNested, isMongoId } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\nexport class CreateRoleDto {\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Name không được để trống\" })\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Description không được để trống\" })\n  description: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Trạng thái không được để trống\" })\n  @IsBoolean({ message: \"Phải là dạng boolean\" })\n  isActive: boolean;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Name không được để trống\" })\n  @IsArray()\n  @IsMongoId({ each: true })\n  permissions: mongoose.Schema.Types.ObjectId[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail({message: 'Định dạng email không chính xác'})@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Name không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Skills không được để trống'})@IsArray({message: 'Skills phải là kiểu mảng'})@IsString({each: true, message: 'Phần từ của skills có định dạng chuỗi ký tự'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsArray, IsEmail, IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreateSubscriberDto {\n  @ApiProperty()\n  @IsEmail({ message: \"Định dạng email không chính xác\" })\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Name không được để trống\" })\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Skills không được để trống\" })\n  @IsArray({ message: \"Skills phải là kiểu mảng\" })\n  @IsString({ each: true, message: \"Phần từ của skills có định dạng chuỗi ký tự\" })\n  skills: string[]\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserCvDto.html":{"url":"classes/CreateUserCvDto.html","title":"class - CreateUserCvDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserCvDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                companyId\n                            \n                            \n                                    \n                                    \n                                    \n                                jobId\n                            \n                            \n                                    \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'CompanyId không được để trống'})@IsMongoId({message: 'companyId là kiểu id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'JobId không được để trống'})@IsMongoId({message: 'jobId là kiểu id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Url không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Type } from \"class-transformer\";\nimport { IsEmail, IsMongoId, IsNotEmpty, IsObject, ValidateNested } from \"class-validator\";\nimport mongoose from \"mongoose\";\n\n\nexport class CreateResumeDto {\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  @IsEmail({}, { message: \"Không đúng định dạng email\" })\n  email: string;\n\n  @IsNotEmpty({ message: \"userId không được để trống\" })\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: \"Url không được để trống\" })\n  url: string;\n\n  @IsNotEmpty({ message: \"Status không được để trống\" })\n  status: string;\n\n  @IsNotEmpty({ message: \"CompanyId không được để trống\" })\n  @IsMongoId({ message: \"companyId là kiểu id\" })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty({ message: \"JobId không được để trống\" })\n  @IsMongoId({ message: \"jobId là kiểu id\" })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\nexport class CreateUserCvDto {\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Url không được để trống\" })\n  url: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"CompanyId không được để trống\" })\n  @IsMongoId({ message: \"companyId là kiểu id\" })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"JobId không được để trống\" })\n  @IsMongoId({ message: \"jobId là kiểu id\" })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Địa chỉ không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Tuổi không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Email không được để trống'})@IsEmail({}, {message: 'Email không đúng định dạng'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Mật khẩu không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Quyền không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from \"class-validator\";\n\nimport { Type } from 'class-transformer';\nimport mongoose from \"mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  @IsEmail({}, { message: \"Email không đúng định dạng\" })\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Mật khẩu không được để trống\" })\n  password: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Tuổi không được để trống\" })\n  age: number;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Địa chỉ không được để trống\" })\n  address: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Quyền không được để trống\" })\n  role: string;\n\n  @ApiProperty()\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  @IsEmail({}, { message: \"Email không đúng định dạng\" })\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Mật khẩu không được để trống\" })\n  password: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Tuổi không được để trống\" })\n  age: number;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Địa chỉ không được để trống\" })\n  address: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\n\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_imports\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nUsersModule->DatabasesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\nimport { Permission, PermissonSchema } from 'src/permissions/schemas/permission.schema';\nimport { User, UserSchema } from 'src/users/schemas/user.schema';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [DatabasesController],\n  providers: [DatabasesService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: Role.name, schema: RoleSchema },\n      { name: Permission.name, schema: PermissonSchema },\n      { name: User.name, schema: UserSchema }\n    ]),\n    UsersModule\n  ]\n})\nexport class DatabasesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Permission, PermissionDocument } from 'src/permissions/schemas/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { User, UserDocument } from 'src/users/schemas/user.schema';\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, INIT_PERMISSIONS, USER_ROLE } from './sample';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n  constructor(\n    @InjectModel(User.name) private userModel: SoftDeleteModel,\n    @InjectModel(Permission.name) private permissionModel: SoftDeleteModel,\n    @InjectModel(Role.name) private roleModel: SoftDeleteModel,\n\n    private configService: ConfigService,\n    private userService: UsersService\n  ) { }\n\n  async onModuleInit() {\n    if (Boolean(this.configService.get(\"SHOULD_INIT\")) === true) {\n      //Kiểm tra đã tồn tại bản ghi\n      const permissionCount = await this.permissionModel.count({});\n      const roleCount = await this.roleModel.count({});\n      const userCount = await this.userModel.count({});\n\n      if (permissionCount === 0) {\n        await this.permissionModel.insertMany(INIT_PERMISSIONS);\n      }\n\n      if (roleCount === 0) {\n        const permissions = await this.permissionModel.find({}).select(\"_id\");\n\n        await this.roleModel.insertMany([{\n          name: ADMIN_ROLE,\n          description: \"Có tất cả các quyền trong hệ thống\",\n          isActive: true,\n          permissions: permissions\n        }, {\n          name: USER_ROLE,\n          description: \"Không có quyền quản trị hệ thống\",\n          isActive: true,\n          permissions: []\n        }])\n      }\n\n      if (userCount === 0) {\n        const adminRole = await this.roleModel.findOne({\n          name: ADMIN_ROLE\n        });\n\n        const userRole = await this.roleModel.findOne({\n          name: USER_ROLE\n        });\n\n        await this.userModel.insertMany([{\n          _id: \"647b5108a8a243e8191855b5\",\n          name: \"Mai Anh\",\n          email: \"nguyenmaianh@gmail.com\",\n          password: this.userService.hashPassword(this.configService.get(\"INIT_PASSWORD\")),\n          age: 20,\n          gender: \"male\",\n          address: \"Hà Nội\",\n          role: adminRole?._id,\n          company: {\n            \"_id\": \"6614e1b970330288c5bea6c6\",\n            \"name\": \"TNHH1TV\"\n          }\n        }, {\n          name: \"User\",\n          email: \"nguyenuser@gmail.com\",\n          password: this.userService.hashPassword(this.configService.get(\"INIT_PASSWORD\")),\n          age: 25,\n          gender: \"male\",\n          address: \"Hà Nam\",\n          role: userRole?._id,\n          company: {\n            \"_id\": \"6614e1b970330288c5bea6c6\",\n            \"name\": \"TNHH1TV\"\n          }\n        }])\n      }\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('upload')@ResponseMessage('Upload single file')@UseInterceptors(undefined)\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { fileName: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseInterceptors, UploadedFile, ParseFilePipeBuilder, HttpStatus } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('File')\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) { }\n\n  @Public()\n  @Post('upload')\n  @ResponseMessage(\"Upload single file\")\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  uploadFile(@UploadedFile(\n    new ParseFilePipeBuilder()\n      .addFileTypeValidator({\n        fileType: /^(jpg|jpeg|image\\/jpeg|png|image\\/png|txt|text\\/plain|pdf|application\\/pdf)$/,\n      })\n      .addMaxSizeValidator({\n        maxSize: 1024 * 1024//1MB\n      })\n      .build({\n        errorHttpStatusCode: HttpStatus.UNPROCESSABLE_ENTITY\n      }),\n  ) file: Express.Multer.File) {\n    return {\n      fileName: file.filename\n    }\n  }\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  imports: [MulterModule.registerAsync({\n    useClass: MulterConfigService\n  })],\n  controllers: [FilesController],\n  providers: [FilesService]\n})\nexport class FilesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheck,\n  HealthCheckResult,\n  HealthCheckService,\n  MongooseHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { Public } from \"src/decorator/customize\";\n\n@Controller(\"health\")\nexport class HealthController {\n\n  constructor(\n    private healthCheck: HealthCheckService,\n    private mongooseHealth: MongooseHealthIndicator,\n  ) {\n  }\n\n  @Get()\n  @Public()\n  @HealthCheck()\n  async check(): Promise {\n    return this.healthCheck.check(\n      [\n        () => this.mongooseHealth.pingCheck(\"database\"),\n      ],\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController]\n})\nexport class HealthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  _id: string;\n  name: string;\n  email: string;\n  role: {\n    _id: string,\n    name: string\n  },\n  permissions?: {\n    _id: string,\n    name: string,\n    apiPath: string,\n    module: string\n  }[]\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schemas/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schemas/job.schema.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport mongoose, { HydratedDocument } from \"mongoose\";\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true\n})\nexport class Job {\n  @Prop()\n  name: string;\n\n  @Prop()\n  skills: string[];\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId,\n    name: string,\n    logo: string\n  };\n\n  @Prop()\n  location: string;\n\n  @Prop()\n  salary: number;\n\n  @Prop()\n  quantity: number;\n\n  @Prop()\n  level: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  startDate: Date;\n\n  @Prop()\n  endDate: string;\n\n  @Prop()\n  logo: string;\n\n  @Prop()\n  isActive: boolean\n\n  @Prop()\n  createdAt: Date\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  }\n\n  @Prop()\n  updatedAt: Date\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n\n  @Prop()\n  isDeleted: boolean\n\n  @Prop()\n  deletedAt: Date\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, pageSize: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch jobs with pagination')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch job by id')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a job')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/user.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Job')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) { }\n\n  @Post()\n  @ResponseMessage(\"Create a new job\")\n  create(@Body() createJobDto: CreateJobDto, @User() user: IUser) {\n    return this.jobsService.create(createJobDto, user);\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch jobs with pagination\")\n  @Public()\n  findAll(@Query(\"current\") currentPage: string, @Query(\"pageSize\") pageSize: string, @Query() qs: string) {\n    return this.jobsService.findAll(+currentPage, +pageSize, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage(\"Fetch job by id\")\n  @Public()\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"Update a job\")\n  update(@Param('id') id: string, @Body() updateJobDto: UpdateJobDto, @User() user: IUser) {\n    return this.jobsService.update(id, updateJobDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete a job\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Job, JobSchema } from './schemas/job.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }])],\n  controllers: [JobsController],\n  providers: [JobsService]\n})\nexport class JobsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Job, JobDocument } from './schemas/job.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/user.interface';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class JobsService {\n  constructor(@InjectModel(Job.name) private jobModel: SoftDeleteModel) { }\n\n  async create(createJobDto: CreateJobDto, user: IUser) {\n    const newJob = await this.jobModel.create(\n      {\n        ...createJobDto,\n        createdBy: {\n          _id: user._id,\n          email: user.email\n        }\n      })\n\n    return {\n      _id: newJob._id,\n      createdAt: newJob.createdAt\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    try {\n      let { filter, sort, projection, population } = aqp(qs);\n      delete filter.current;\n      delete filter.pageSize;\n\n      let defaultLimit = limit ? limit : 2;\n      let totalRecord = (await this.jobModel.find(filter)).length;\n      let totalPage = Math.ceil(totalRecord / defaultLimit);\n      let skip = (currentPage - 1) * defaultLimit;\n\n      if (!sort) {\n        sort = \"-updatedAt\" as any;\n      }\n      const result = await this.jobModel.find(filter)\n        .skip(skip)\n        .limit(limit)\n        .sort(sort as any)\n        .populate(population)\n        .exec();\n\n      return {\n        \"meta\": {\n          \"current\": currentPage,\n          \"pageSize\": defaultLimit,\n          \"pages\": totalPage,\n          \"total\": totalRecord\n        },\n        \"result\": result\n      }\n    } catch (error) {\n      console.log(error);\n      throw new BadRequestException(\"Không tìm thấy danh sách công việc\");\n    }\n  }\n\n  async findOne(id: string) {\n    if (mongoose.Types.ObjectId.isValid(id)) {\n      return await this.jobModel.findOne({\n        _id: id\n      });\n    } else {\n      return {\n        \"error\": \"Id không hợp lệ\"\n      }\n    }\n  }\n\n  async update(id: string, updateJobDto: UpdateJobDto, user: IUser) {\n    try {\n      if (mongoose.Types.ObjectId.isValid(id)) {\n        return await this.jobModel.updateOne({\n          _id: id\n        }, {\n          ...updateJobDto,\n          updatedBy: {\n            _id: user._id,\n            email: user.email\n          }\n        })\n      } else {\n        return {\n          \"error\": \"Id không hợp lệ\"\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      return {\n        \"error\": \"Id không hợp lệ\"\n      }\n    }\n  }\n\n  async remove(id: string, user: IUser) {\n    if (mongoose.Types.ObjectId.isValid(id)) {\n      await this.jobModel.updateOne({\n        _id: id\n      }, {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      });\n\n      return await this.jobModel.softDelete({\n        _id: id\n      });\n    } else {\n      return {\n        \"error\": \"Id không hợp lệ\"\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err: any, user: any, info: any, context: ExecutionContext, status?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, ForbiddenException, Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { AuthGuard } from \"@nestjs/passport\";\nimport { Request } from \"express\";\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from \"src/decorator/customize\";\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    //Lấy ra giá trị của isPublic\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass()\n    ]);\n\n    if (isPublic) {\n      return true;\n    }\n\n    return super.canActivate(context);\n  }\n\n  handleRequest(err: any, user: any, info: any, context: ExecutionContext, status?: any) {\n    if (err || !user) {\n      throw err || new UnauthorizedException({\n        message: \"Access token không hợp lệ\"\n      })\n    }\n    const permissions = user?.permissions ?? [];\n\n    const request: Request = context.switchToHttp().getRequest();\n    const method = request.method;\n    const path = request?.route?.path as string;\n\n\n    let isExist = permissions.find(permission => {\n      return permission.method === method && permission.apiPath === path;\n    });\n\n    if (path.startsWith(\"/api/v1/auth\")) {\n      isExist = true;\n    }\n\n    const isPublicPermission = this.reflector.getAllAndOverride(IS_PUBLIC_PERMISSION, [\n      context.getHandler(),\n      context.getClass()\n    ]);\n\n    if (!isExist && !isPublicPermission) {\n      throw new ForbiddenException(\"Bạn không có quyền truy cập vào trang này\");\n    }\n\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, roleService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.strategy.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { ExtractJwt, Strategy } from \"passport-jwt\";\nimport { RolesService } from \"src/roles/roles.service\";\nimport { IUser } from \"src/users/user.interface\";\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private roleService: RolesService\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get(\"JWT_ACCESS_TOKEN_SECRET\")\n    });\n  }\n\n  async validate(payload: IUser) {\n    const { _id, name, email, role } = payload;\n\n    const roleUser = (await this.roleService.findOne(role._id)).toObject();\n\n    return {\n      _id,\n      name,\n      email,\n      role,\n      permissions: roleUser?.permissions ?? []\n    }; //trả về đối tượng vào req.user dựa vào các thuộc tính return\n    //Có thể thực hiện truy vấn trong db để lấy nhiều dữ liệu hơn\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.strategy.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from \"@nestjs/common\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Strategy } from \"passport-local\";\nimport { AuthService } from \"../auth.service\";\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException({ message: \"Username/Password không hợp lệ\" });\n    }\n    return user; //req.user\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipCheckPermission()@Get()@ResponseMessage('Send Email')@Cron('* 0 0 * * 0')\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { ResponseMessage, SkipCheckPermission } from 'src/decorator/customize';\nimport { Cron } from '@nestjs/schedule';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Mail')\n@Controller('mail')\nexport class MailController {\n  constructor(private readonly mailService: MailService) { }\n\n  @SkipCheckPermission()\n  @Get()\n  @ResponseMessage(\"Send Email\")\n  @Cron('* 0 0 * * 0')\n  sendEmail() {\n    this.mailService.sendEmail();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService\n\nMailService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigService } from '@nestjs/config';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from 'src/subscribers/schemas/subscriber.schema';\nimport { Job, JobSchema } from 'src/jobs/schemas/job.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n      { name: Job.name, schema: JobSchema }\n    ])\n    , MailerModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          host: configService.get(\"EMAIL_HOST\"),\n          secure: false,\n          auth: {\n            user: configService.get(\"EMAIL_AUTH_USER\"),\n            pass: configService.get(\"EMAIL_AUTH_PASS\"),\n          },\n        },\n        defaults: {\n          from: '\"nest-modules\" ',\n        },\n        template: {\n          dir: __dirname + '/templates',\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n        preview: configService.get(\"EMAIL_PREVIEW\") === 'true' ? true : false\n      }),\n    }),\n  ],\n  controllers: [MailController],\n  providers: [MailService]\n})\nexport class MailModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService, subscriberModel: SoftDeleteModel, jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        subscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { Job, JobDocument } from 'src/jobs/schemas/job.schema';\nimport { Subscriber, SubscriberDocument } from 'src/subscribers/schemas/subscriber.schema';\n\n@Injectable()\nexport class MailService {\n  constructor(\n    private mailerService: MailerService,\n    @InjectModel(Subscriber.name) private subscriberModel: SoftDeleteModel,\n    @InjectModel(Job.name) private jobModel: SoftDeleteModel,\n  ) { }\n\n  public async sendEmail() {\n    const listSubscribers = await this.subscriberModel.find({});\n    for (const subscriber of listSubscribers) {\n      const jobs = (await this.jobModel.find({\n        skills: { $in: subscriber.skills }\n      })).map(job => {\n        return {\n          name: job.name,\n          company: job.company.name,\n          salary: `${job.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + \" đ\",\n          skills: job.skills\n        }\n      })\n\n      await this.mailerService.sendMail({\n        to: subscriber.email,\n        from: \"nguyenmaianh@gmail.com\",\n        subject: 'Testing Nest MailerModule ✔', // Subject line\n        template: 'new-job',\n        context: {\n          name: subscriber.name,\n          jobs: jobs\n        }\n      })\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterOptions | Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { MulterOptionsFactory } from \"@nestjs/platform-express\";\nimport { MulterOptions } from \"@nestjs/platform-express/multer/interfaces/multer-options.interface\";\nimport fs from 'fs';\nimport { diskStorage } from \"multer\";\nimport path, { join } from \"path\";\n\n//Cấu trúc lại MulterOption cho thư viện Multer\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  //Lấy ra đường dẫn thư mục\n  getRootPath = () => {\n    return process.cwd(); //Thư mục hiện hành\n  }\n\n  //Kiểm tra chưa tồn tại thư mục thì tạo thư mục\n  ensureExists(targetDirectory: string) {\n    fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n      if (!error) {\n        console.log('Directory successfully created, or it already exists.'); return;\n      }\n      switch (error.code) {\n        case 'EEXIST':\n        // Error:\n        // Requested location already exists, but it's not a directory. break;\n        case 'ENOTDIR':\n          // Error:\n          // The parent hierarchy contains a file with the same name as the dir // you're trying to create.\n          break;\n        default:\n          // Some other error like permission denied.\n          console.error(error); break;\n      }\n    });\n  }\n\n\n  createMulterOptions(): MulterOptions | Promise {\n    return {\n      storage: diskStorage({ //Lưu dữ liệu ở trong ổ đĩa máy tính\n        destination: (req, file, cb) => {\n          const folder = req?.headers?.folder_type ?? \"default\"; //Lấy ra req.headers\n          this.ensureExists(`public/images/${folder}`);\n          cb(null, join(this.getRootPath(), `public/images/${folder}`));\n        },\n        filename: (req, file, cb) => { //get image\n          let extName = path.extname(file.originalname);\n\n          let baseName = path.basename(file.originalname, extName);\n\n          let finalName = `${baseName}-${Date.now()}${extName}`\n          cb(null, finalName);\n        }\n      }),\n\n    }\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schemas/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schemas/permission.schema.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport mongoose, { HydratedDocument } from \"mongoose\";\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Permission {\n  @Prop()\n  name: string;\n\n  @Prop()\n  apiPath: string;\n\n  @Prop()\n  method: string;\n\n  @Prop()\n  module: string;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  deletedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n}\n\nexport const PermissonSchema = SchemaFactory.createForClass(Permission);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: string, pageSize: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch permission with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Fetch a permission by id')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a permission')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/user.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Permission')\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) { }\n\n  @Post()\n  @ResponseMessage(\"Create a new permission\")\n  create(@Body() createPermissionDto: CreatePermissionDto, @User() user: IUser) {\n    return this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch permission with paginate\")\n  findAll(@Query(\"current\") current: string, @Query(\"pageSize\") pageSize: string,\n    @Query() qs: string) {\n    return this.permissionsService.findAll(+current, +pageSize, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage(\"Fetch a permission by id\")\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"Update a permission\")\n  update(@Param('id') id: string, @Body() updatePermissionDto: UpdatePermissionDto, @User() user: IUser) {\n    return this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete a permission\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Permission, PermissonSchema } from './schemas/permission.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Permission.name, schema: PermissonSchema }])],\n  controllers: [PermissionsController],\n  providers: [PermissionsService]\n})\nexport class PermissionsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Permission, PermissionDocument } from './schemas/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/user.interface';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(@InjectModel(Permission.name) private permissionModel: SoftDeleteModel) { }\n\n  async create(createPermissionDto: CreatePermissionDto, user: IUser) {\n    const { name, apiPath, method, module } = createPermissionDto;\n    const permissonExist = await this.permissionModel.findOne({\n      apiPath: apiPath,\n      method: method,\n      isDeleted: false\n    });\n\n    if (permissonExist) {\n      throw new BadRequestException(`Đã tồn tại permission có ${apiPath} và method ${method}`)\n    }\n    const newPermission = await this.permissionModel.create({\n      name, apiPath, method, module,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    });\n    return {\n      _id: newPermission._id,\n      createdAt: newPermission.createdAt\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    try {\n      let { filter, sort, projection, population } = aqp(qs);\n      delete filter.current;\n      delete filter.pageSize;\n\n      let defaultLimit = limit ? limit : 2;\n      let totalRecord = (await this.permissionModel.find(filter)).length;\n      let totalPage = Math.ceil(totalRecord / defaultLimit);\n      let skip = (currentPage - 1) * defaultLimit;\n\n      if (!sort) {\n        sort = \"-updatedAt\" as any;\n      }\n      const result = await this.permissionModel.find(filter)\n        .skip(skip)\n        .limit(limit)\n        .sort(sort as any)\n        .populate(population)\n        .exec();\n\n      return {\n        \"meta\": {\n          \"current\": currentPage,\n          \"pageSize\": defaultLimit,\n          \"pages\": totalPage,\n          \"total\": totalRecord\n        },\n        \"result\": result\n      }\n    } catch (error) {\n      console.log(error);\n      throw new BadRequestException(\"Không tìm thấy danh sách quyền\");\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(\"Id không hợp lệ\");\n    }\n\n    return await this.permissionModel.findOne({\n      _id: id\n    });\n  }\n\n  async update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(\"Id không hợp lệ\");\n    }\n\n    return await this.permissionModel.updateOne({\n      _id: id\n    }, {\n      ...updatePermissionDto,\n      updatedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    });\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.permissionModel.updateOne({\n      _id: id\n    }, {\n      deletedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return await this.permissionModel.softDelete({\n      _id: id\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Địa chỉ không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Tuổi không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Email không được để trống'})@IsEmail({}, {message: 'Email không đúng định dạng'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Email không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'Mật khẩu không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsNotEmptyObject, IsObject, ValidateNested } from \"class-validator\";\n\nimport { Type } from 'class-transformer';\nimport mongoose from \"mongoose\";\nimport { ApiProperty } from \"@nestjs/swagger\";\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n\n  @IsNotEmpty()\n  name: string;\n}\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  @IsEmail({}, { message: \"Email không đúng định dạng\" })\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Mật khẩu không được để trống\" })\n  password: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Tuổi không được để trống\" })\n  age: number;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Địa chỉ không được để trống\" })\n  address: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Quyền không được để trống\" })\n  role: string;\n\n  @ApiProperty()\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  name: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Email không được để trống\" })\n  @IsEmail({}, { message: \"Email không đúng định dạng\" })\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Mật khẩu không được để trống\" })\n  password: string;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Tuổi không được để trống\" })\n  age: number;\n\n  @ApiProperty()\n  @IsNotEmpty({ message: \"Địa chỉ không được để trống\" })\n  address: string;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.intercepter.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { Observable, map } from \"rxjs\";\nimport { RESPONSE_MESSAGE } from \"src/decorator/customize\";\n\n\nexport interface Response {\n  statusCode: number;\n  message: string;\n  data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor {\n\n  constructor(private reflector: Reflector) { }\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable {\n\n    return next\n      .handle()\n      .pipe(\n        map((data) => ({\n          statusCode: context.switchToHttp().getResponse().statusCode,\n          message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler(),) || '',\n          data\n        })),\n      );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schemas/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schemas/resume.schema.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport mongoose, { HydratedDocument, ObjectId } from \"mongoose\";\nimport { Company } from \"src/company/schema/company.schema\";\nimport { Job } from \"src/jobs/schemas/job.schema\";\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Resume {\n  @Prop()\n  email: string;\n\n  @Prop()\n  userId: mongoose.Schema.Types.ObjectId;\n\n  @Prop()\n  url: string;\n\n  @Prop()\n  status: string;\n\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId, ref: Company.name\n  })\n  companyId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId, ref: Job.name\n  })\n  jobId: mongoose.Schema.Types.ObjectId;\n\n  @Prop({ type: mongoose.Schema.Types.Array })\n  history: {\n    status: string,\n    updatedAt: Date,\n    updatedBy: {\n      _id: mongoose.Schema.Types.ObjectId,\n      email: string\n    }\n  }[]\n\n  @Prop()\n  createdAt: Date\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  }\n\n  @Prop()\n  updatedAt: Date\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n\n  @Prop()\n  isDeleted: boolean\n\n  @Prop()\n  deletedAt: Date\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getResumesByUser\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeDto: CreateUserCvDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@SkipCheckPermission()@ResponseMessage('Create a new resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: string, pageSize: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@SkipCheckPermission()@ResponseMessage('Fetch all resumes with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@SkipCheckPermission()@ResponseMessage('Fetch a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getResumesByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResumesByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@SkipCheckPermission()@ResponseMessage('Get Resumes by user')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a resume by id')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateResumeDto: UpdateResumeDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update status resume')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResumeDto\n                                            \n                                                            UpdateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { ResponseMessage, SkipCheckPermission, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/user.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Resume')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) { }\n\n  @Post()\n  @SkipCheckPermission()\n  @ResponseMessage(\"Create a new resume\")\n  create(@Body() createResumeDto: CreateUserCvDto, @User() user: IUser) {\n    return this.resumesService.create(createResumeDto, user);\n  }\n\n  @Get()\n  @SkipCheckPermission()\n  @ResponseMessage(\"Fetch all resumes with paginate\")\n  findAll(@Query(\"current\") current: string, @Query(\"pageSize\") pageSize: string,\n    @Query() qs: string) {\n    return this.resumesService.findAll(+current, +pageSize, qs);\n  }\n\n  @Get(':id')\n  @SkipCheckPermission()\n  @ResponseMessage(\"Fetch a resume by id\")\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"Update status resume\")\n  update(@Param('id') id: string, @Body() updateResumeDto: UpdateResumeDto, @User() user: IUser) {\n    return this.resumesService.update(id, updateResumeDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete a resume by id\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n\n  @Post('by-user')\n  @SkipCheckPermission()\n  @ResponseMessage(\"Get Resumes by user\")\n  getResumesByUser(@User() user: IUser) {\n    return this.resumesService.getResumesByUser(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Resume, ResumeSchema } from './schemas/resume.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }])],\n  controllers: [ResumesController],\n  providers: [ResumesService]\n})\nexport class ResumesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getResumesByUser\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(CreateUserCvDto: CreateUserCvDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                CreateUserCvDto\n                                            \n                                                            CreateUserCvDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getResumesByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getResumesByUser(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateResumeDto: UpdateResumeDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResumeDto\n                                            \n                                                            UpdateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateResumeDto, CreateUserCvDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { IUser } from 'src/users/user.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Resume, ResumeDocument } from './schemas/resume.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class ResumesService {\n  constructor(@InjectModel(Resume.name) private resumeModel: SoftDeleteModel) { }\n\n  async create(CreateUserCvDto: CreateUserCvDto, user: IUser) {\n    const { url, companyId, jobId } = CreateUserCvDto;\n\n    let data = {\n      email: user.email,\n      userId: user._id,\n      url: url,\n      status: \"PENDING\",\n      companyId: companyId,\n      jobId: jobId,\n      history: {\n        status: \"PENDING\",\n        updatedAt: new Date(),\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      },\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    }\n\n    const newResume = await this.resumeModel.create({ ...data });\n    return {\n      _id: newResume?._id,\n      createdAd: newResume?.createdAt\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    try {\n      let { filter, sort, projection, population } = aqp(qs);\n      delete filter.current;\n      delete filter.pageSize;\n\n      let defaultLimit = limit ? limit : 2;\n      currentPage = currentPage ? currentPage : 1;\n      let totalRecord = (await this.resumeModel.find(filter)).length;\n      let totalPage = Math.ceil(totalRecord / defaultLimit);\n      let skip = (currentPage - 1) * defaultLimit;\n\n      if (!sort) {\n        sort = \"-updatedAt\" as any;\n      }\n      const result = await this.resumeModel.find(filter)\n        .skip(skip)\n        .limit(defaultLimit)\n        .sort(sort as any)\n        .populate(population)\n        .select(projection as any)\n        .exec();\n\n      return {\n        \"meta\": {\n          \"current\": currentPage,\n          \"pageSize\": defaultLimit,\n          \"pages\": totalPage,\n          \"total\": totalRecord\n        },\n        \"result\": result\n      }\n    } catch (error) {\n      console.log(error);\n      throw new BadRequestException(\"Không tìm thấy danh sách CV\");\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(`${id} không hợp lệ`);\n    }\n    const resume = await this.resumeModel.findById(id);\n    return {\n      resume\n    }\n  }\n\n  async update(id: string, updateResumeDto: UpdateResumeDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id))\n      throw new BadRequestException(`${id} không hợp lệ`);\n    return await this.resumeModel.updateOne({\n      _id: id\n    }, {\n      status: updateResumeDto.status,\n      updateBy: {\n        _id: user._id,\n        email: user.email\n      },\n      $push: {\n        history: {\n          status: updateResumeDto.status,\n          updatedAt: new Date(),\n          updatedBy: {\n            _id: user._id,\n            email: user.email\n          }\n        }\n      }\n    })\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id))\n      throw new BadRequestException(`${id} không hợp lệ`);\n    await this.resumeModel.updateOne({\n      _id: id\n    }, {\n      deletedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return await this.resumeModel.softDelete({\n      _id: id\n    });\n  }\n\n  async getResumesByUser(user: IUser) {\n    const resumes = await this.resumeModel.find({\n      userId: user._id\n    }).sort(\"-createdAt\")\n      .populate([\n        {\n          path: \"companyId\", select: { name: 1 }\n        }, {\n          path: \"jobId\", select: { name: 1 }\n        }]);\n    return await this.resumeModel.find({\n      userId: user._id\n    }).sort(\"-createdAt\")\n      .populate([\n        {\n          path: \"companyId\", select: { name: 1 }\n        }, {\n          path: \"jobId\", select: { name: 1 }\n        }]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schemas/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop(['undefined'])\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schemas/role.schema.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport mongoose, { HydratedDocument } from \"mongoose\";\nimport { Permission } from \"src/permissions/schemas/permission.schema\";\n\nexport type RoleDocument = HydratedDocument\n\n@Schema()\nexport class Role {\n  @Prop()\n  name: string;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  isActive: boolean;\n\n  @Prop([{ type: mongoose.Schema.Types.ObjectId, ref: Permission.name }])\n  permissions: Permission[]\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  deletedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: string, pageSize: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch all role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update a role')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/user.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Role')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) { }\n\n  @Post()\n  @ResponseMessage(\"Create a new role\")\n  create(@Body() createRoleDto: CreateRoleDto, @User() user: IUser) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch all role\")\n  findAll(@Query(\"current\") current: string, @Query(\"pageSize\") pageSize: string, @Query() qs: string) {\n    return this.rolesService.findAll(+current, +pageSize, qs);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage(\"Update a role\")\n  update(@Param('id') id: string, @Body() updateRoleDto: UpdateRoleDto, @User() user: IUser) {\n    return this.rolesService.update(id, updateRoleDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.rolesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schemas/role.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Role.name, schema: RoleSchema }])],\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesService]\n})\nexport class RolesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findRoleIdByName\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findRoleIdByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findRoleIdByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { IUser } from 'src/users/user.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Role, RoleDocument } from './schemas/role.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class RolesService {\n  constructor(@InjectModel(Role.name) private roleModel: SoftDeleteModel) { }\n\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    const { name, description, isActive, permissions } = createRoleDto;\n\n    const roleExist = await this.roleModel.findOne({\n      name: name,\n      isDeleted: false\n    });\n    if (roleExist) {\n      throw new BadRequestException(`Nhóm quyền ${name} đã tồn tại`);\n    }\n\n    const newRole = await this.roleModel.create({\n      name, description, isActive, permissions, createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    });\n    return {\n      _id: newRole._id,\n      createdAt: newRole.createdAt\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    try {\n      let { filter, sort, projection, population } = aqp(qs);\n      delete filter.current;\n      delete filter.pageSize;\n\n      let defaultLimit = limit ? limit : 2;\n      let totalRecord = (await this.roleModel.find(filter)).length;\n      let totalPage = Math.ceil(totalRecord / defaultLimit);\n      let skip = (currentPage - 1) * defaultLimit;\n\n      if (!sort) {\n        sort = \"-updatedAt\" as any;\n      }\n      const result = await this.roleModel.find(filter)\n        .skip(skip)\n        .limit(limit)\n        .sort(sort as any)\n        .populate(population as any)\n        .select(projection)\n        .exec();\n\n      return {\n        \"meta\": {\n          \"current\": currentPage,\n          \"pageSize\": defaultLimit,\n          \"pages\": totalPage,\n          \"total\": totalRecord\n        },\n        \"result\": result\n      }\n    } catch (error) {\n      console.log(error);\n      throw new BadRequestException(\"Không tìm thấy danh sách nhóm quyền\");\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id))\n      throw new BadRequestException(`${id} không hợp lệ`);\n    const role = await this.roleModel.findById(id)\n      .populate({ path: \"permissions\", select: { _id: 1, apiPath: 1, name: 1, method: 1, module: 1 } });\n    return role;\n  }\n\n  async update(id: string, updateRoleDto: UpdateRoleDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException(\"Id không đúng định dạng\");\n    }\n\n    const roleExist = await this.roleModel.findOne({\n      name: updateRoleDto.name,\n      _id: { $ne: id }\n    });\n    if (roleExist) {\n      throw new BadRequestException(`Nhóm quyền ${updateRoleDto.name} đã tồn tại`);\n    }\n\n    return await this.roleModel.updateOne({\n      _id: id\n    }, {\n      ...updateRoleDto,\n      updateBy: {\n        _id: user._id,\n        email: user.email\n      }\n    });\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id))\n      throw new BadRequestException(\"Id không hợp lệ\");\n\n    const role = await this.roleModel.findById(id);\n    if (role.name === \"ADMIN\")\n      throw new BadRequestException(\"Không thể xóa nhóm quyền admin\");\n\n    await this.roleModel.updateOne({\n      _id: id\n    }, {\n      deletedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    });\n\n    return await this.roleModel.softDelete({\n      _id: id\n    });\n  }\n\n  async findRoleIdByName(name: string) {\n    return (await this.roleModel.findOne({\n      name: name\n    }))._id;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schemas/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schemas/subscriber.schema.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport mongoose, { HydratedDocument } from \"mongoose\";\n\nexport type SubscriberDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Subscriber {\n  @Prop()\n  email: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  skills: string[]\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  updatedAt: Date;\n\n  @Prop()\n  deletedAt: Date;\n\n  @Prop()\n  isDeleted: boolean;\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n}\n\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getUserSkills\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipCheckPermission()@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: string, pageSize: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUserSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkills(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('skills')@SkipCheckPermission()@ResponseMessage('Get subscriber's skills')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SkipCheckPermission()@Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { ResponseMessage, SkipCheckPermission, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/user.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Subscriber')\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) { }\n\n  @Post(\"skills\")\n  @SkipCheckPermission()\n  @ResponseMessage(\"Get subscriber's skills\")\n  getUserSkills(@User() user: IUser) {\n    return this.subscribersService.getSkills(user);\n  }\n\n  @SkipCheckPermission()\n  @Post()\n  create(@Body() createSubscriberDto: CreateSubscriberDto, @User() user: IUser) {\n    return this.subscribersService.create(createSubscriberDto, user);\n  }\n\n  @Get()\n  findAll(@Query(\"current\") current: string, @Query(\"pageSize\") pageSize: string, @Query() qs: string) {\n    return this.subscribersService.findAll(+current, +pageSize, qs);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.subscribersService.findOne(id);\n  }\n\n  @SkipCheckPermission()\n  @Patch()\n  update(@Body() updateSubscriberDto: UpdateSubscriberDto, @User() user: IUser) {\n    return this.subscribersService.update(updateSubscriberDto, user);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.subscribersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from './schemas/subscriber.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Subscriber.name, schema: SubscriberSchema }])],\n  controllers: [SubscribersController],\n  providers: [SubscribersService]\n})\nexport class SubscribersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getSkills\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscribeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscribeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSkills(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberDocument } from './schemas/subscriber.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/user.interface';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(Subscriber.name) private subscribeModel: SoftDeleteModel\n  ) { }\n\n  async create(createSubscriberDto: CreateSubscriberDto, user: IUser) {\n    const { email, name, skills } = createSubscriberDto;\n\n    const emailExist = await this.subscribeModel.findOne({\n      email: email\n    });\n    if (emailExist) {\n      throw new BadRequestException(`${email} đã đăng ký`);\n    }\n\n    const newSubscriber = await this.subscribeModel.create({\n      email, name, skills,\n      createdBy: {\n        _id: user._id,\n        email: user.email\n      }\n    });\n    return {\n      _id: newSubscriber._id,\n      createdAt: newSubscriber.createdAt\n    }\n  }\n\n  async findAll(currentPage: number, limit: number, qs: string) {\n    try {\n      let { filter, sort, projection, population } = aqp(qs);\n      delete filter.current;\n      delete filter.pageSize;\n\n      let defaultLimit = limit ? limit : 2;\n      let totalRecord = (await this.subscribeModel.find(filter)).length;\n      let totalPage = Math.ceil(totalRecord / defaultLimit);\n      let skip = (currentPage - 1) * defaultLimit;\n\n      if (!sort) {\n        sort = \"-updatedAt\" as any;\n      }\n      const result = await this.subscribeModel.find(filter)\n        .skip(skip)\n        .limit(limit)\n        .sort(sort as any)\n        .populate(population as any)\n        .select(projection)\n        .exec();\n\n      return {\n        \"meta\": {\n          \"current\": currentPage,\n          \"pageSize\": defaultLimit,\n          \"pages\": totalPage,\n          \"total\": totalRecord\n        },\n        \"result\": result\n      }\n    } catch (error) {\n      console.log(error);\n      throw new BadRequestException(\"Không tìm thấy danh sách subscribers\");\n    }\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id))\n      throw new BadRequestException(\"Id không hợp lệ\");\n    return await this.subscribeModel.findOne({\n      _id: id\n    });\n  }\n\n  async update(updateSubscriberDto: UpdateSubscriberDto, user: IUser) {\n\n    return await this.subscribeModel.updateOne({\n      email: user.email\n    }, {\n      ...updateSubscriberDto,\n      updatedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    },\n      { upsert: true }); //update and insert\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.subscribeModel.updateOne({\n      _id: id\n    }, {\n      deletedBy: {\n        _id: user._id,\n        email: user.email\n      }\n    })\n    return await this.subscribeModel.softDelete({\n      _id: id\n    });\n  }\n\n  async getSkills(user: IUser) {\n    return await this.subscribeModel.findOne({\n      email: user.email\n    }, {\n      skills: 1\n    })\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.intercepter.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.intercepter.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.intercepter.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from \"@nestjs/common\";\nimport { Reflector } from \"@nestjs/core\";\nimport { Observable, map } from \"rxjs\";\nimport { RESPONSE_MESSAGE } from \"src/decorator/customize\";\n\n\nexport interface Response {\n  statusCode: number;\n  message: string;\n  data: any;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor {\n\n  constructor(private reflector: Reflector) { }\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable {\n\n    return next\n      .handle()\n      .pipe(\n        map((data) => ({\n          statusCode: context.switchToHttp().getResponse().statusCode,\n          message: this.reflector.get(RESPONSE_MESSAGE, context.getHandler(),) || '',\n          data\n        })),\n      );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/company/dto/update-company.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCompanyDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateJobDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-job.dto';\n\nexport class UpdateJobDto extends PartialType(CreateJobDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResumeDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriberDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSubscriberDto } from './create-subscriber.dto';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OmitType(CreateUserDto, ['password'] as const)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty({message: 'id không được để trống'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsNotEmpty } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateUserDto extends OmitType(CreateUserDto, ['password'] as const) {\n  @ApiProperty()\n  @IsNotEmpty({ message: \"id không được để trống\" })\n  _id: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schemas/user.schema.ts:54\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport mongoose, { HydratedDocument } from \"mongoose\";\nimport { Role } from \"src/roles/schemas/role.schema\";\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true\n})\nexport class User {\n  @Prop()\n  name: string;\n\n  @Prop()\n  email: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  age: number;\n\n  @Prop()\n  gender: string;\n\n  @Prop()\n  address: string;\n\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId,\n    name: string\n  };\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n  role: mongoose.Schema.Types.ObjectId\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop()\n  createdAt: Date\n\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  }\n\n  @Prop()\n  updatedAt: Date\n\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n\n  @Prop()\n  isDeleted: boolean\n\n  @Prop()\n  deletedAt: Date\n\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId,\n    email: string\n  }\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/user-login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'maianh20', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/user-login.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'nguyenmaianh@gmail.com', description: 'email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/user-login.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'nguyenmaianh@gmail.com', description: 'email' })\n  readonly username: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: 'maianh20',\n    description: 'password',\n  })\n  readonly password: string;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create a new user')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: string, limit: string, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Fetch user with paginate')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':id')@ResponseMessage('Fetch user by id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete a user')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@ResponseMessage('Update a user')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from './user.interface';\nimport { JwtAuthGuard } from 'src/auth/jwt-auth.guard';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('User')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) { }\n\n  @Post()\n  @ResponseMessage(\"Create a new user\")\n  create(@Body() createUserDto: CreateUserDto, @User() user: IUser) {\n    //@Body : req.body\n    return this.usersService.create(createUserDto, user);\n  }\n\n  @Get()\n  @ResponseMessage(\"Fetch user with paginate\")\n  findAll(@Query('current') currentPage: string, @Query('pageSize') limit: string, @Query() qs: string) {\n    return this.usersService.findAll(+currentPage, +limit, qs);\n  }\n\n  @Public()\n  @Get(':id')\n  @ResponseMessage(\"Fetch user by id\")\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @Patch()\n  @ResponseMessage(\"Update a user\")\n  update(@Body() updateUserDto: UpdateUserDto, @User() user: IUser) {\n    return this.usersService.update(updateUserDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage(\"Delete a user\")\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.usersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { Role, RoleSchema } from 'src/roles/schemas/role.schema';\n\n@Module({\n  imports: [MongooseModule.forFeature([\n    { name: User.name, schema: UserSchema },\n    { name: Role.name, schema: RoleSchema }\n  ])],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getUserByToken\n                            \n                            \n                                hashPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPassword\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneByUserName\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkPassword\n                        \n                    \n                \n            \n            \n                \ncheckPassword(password, hash)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hash\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, userCreate: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userCreate\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(currentPage: number, limit: number, qs)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentPage\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByUserName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUserName(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRefreshToken(refresh_token, _id)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refresh_token\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                _id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserByToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:165\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User, UserDocument } from './schemas/user.schema';\nimport mongoose from 'mongoose';\nimport { genSaltSync, hashSync, compareSync } from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from './user.interface';\nimport aqp from 'api-query-params';\nimport { Role, RoleDocument } from 'src/roles/schemas/role.schema';\nimport { USER_ROLE } from 'src/databases/sample';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User.name) private userModel: SoftDeleteModel,\n    @InjectModel(Role.name) private roleModel: SoftDeleteModel\n  ) { }\n\n  hashPassword = (password: string) => {\n    const salt = genSaltSync(10);\n    const hash = hashSync(password, salt);\n    return hash;\n  }\n\n  async create(createUserDto: CreateUserDto, userCreate: IUser) {\n    //Check email exist\n    const isExist = await this.userModel.findOne({\n      email: createUserDto.email\n    });\n    if (isExist) {\n      throw new BadRequestException(`Email ${createUserDto.email} đã tồn tại trên hệ thống. Vui lòng sử dụng email khác`);\n    }\n\n    const userRole = await this.roleModel.findOne({\n      name: USER_ROLE\n    });\n\n    let passwordHash = this.hashPassword(createUserDto.password);\n    createUserDto.password = passwordHash;\n    const user = await this.userModel.create({\n      ...createUserDto,\n      role: userRole._id,\n      createdBy: {\n        _id: userCreate._id,\n        email: userCreate.email\n      }\n    });\n    return {\n      _id: user._id,\n      createdAt: user.createdAt\n    };\n  }\n\n  async findAll(currentPage: number, limit: number, qs) {\n    try {\n      let { filter, sort, projection, population } = aqp(qs);\n      delete filter.current;\n      delete filter.pageSize;\n\n      let defaultLimit = limit ? limit : 2;\n      let totalRecord = (await this.userModel.find(filter)).length;\n      let totalPage = Math.ceil(totalRecord / defaultLimit);\n      let skip = (currentPage - 1) * defaultLimit;\n\n      if (!sort) {\n        sort = \"-updatedAt\" as any;\n      }\n      const result = await this.userModel.find(filter)\n        .skip(skip)\n        .limit(defaultLimit)\n        .sort(sort as any)\n        .select(\"-password\")\n        .populate(population)\n        .exec();\n\n      return {\n        \"meta\": {\n          \"current\": currentPage,\n          \"pageSize\": limit,\n          \"pages\": totalPage,\n          \"total\": totalRecord\n        },\n        \"result\": result\n      }\n    } catch (error) {\n      console.log(error);\n      return \"Không thể tìm thấy danh sách người dùng\";\n    }\n  }\n\n  async findOne(id: string) {\n    if (mongoose.Types.ObjectId.isValid(id)) {\n      let user = await this.userModel.findById(id)\n        .select(\"-password\")\n        .populate({ path: \"role\", select: { _id: 1, name: 1 } });\n      return user;\n    }\n    else {\n      return \"Không thể tìm thấy người dùng\";\n    }\n  }\n\n  async findOneByUserName(username: string) {\n    const user = await this.userModel.findOne({\n      email: username\n    }).populate({ path: \"role\", select: { _id: 1, name: 1 } });\n    return user;\n  }\n\n  checkPassword(password, hash) {\n    return compareSync(password, hash);\n  }\n\n  async update(updateUserDto: UpdateUserDto, user: IUser) {\n    try {\n      return await this.userModel.updateOne({\n        _id: updateUserDto._id\n      }, {\n        ...updateUserDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      return \"Không thể cập nhật thông tin cho người dùng này\";\n    }\n  }\n\n  async remove(id: string, user: IUser) {\n    if (mongoose.Types.ObjectId.isValid(id)) {\n      const userDelete = await this.userModel.findById(id);\n      if (userDelete.email === \"nguyenmaianh@gmail.com\") {\n        throw new BadRequestException(`Không thể xóa tài khoản admin`);\n      }\n\n      await this.userModel.updateOne({\n        _id: id\n      }, {\n        deletedBy: {\n          _id: user._id,\n          email: user.email\n        }\n      })\n      return await this.userModel.softDelete({\n        _id: id\n      })\n    }\n    else {\n      throw new BadRequestException(\"Id không hợp lệ\");\n    }\n  }\n\n  async updateRefreshToken(refresh_token, _id) {\n    await this.userModel.updateOne({\n      _id: _id\n    }, {\n      refreshToken: refresh_token\n    })\n  }\n\n  getUserByToken = async (refresh_token) => {\n    const user = await this.userModel.findOne({\n      refreshToken: refresh_token\n    }).populate({ path: \"role\", select: { name: 1 } });\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/auth/dto/user-login.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/company/company.controller.ts\n            \n            controller\n            CompanyController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/company/company.service.ts\n            \n            injectable\n            CompanyService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/company/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/company/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/company/schema/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/company/schema/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/transform.intercepter.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.intercepter.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            HR_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            INIT_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            SkipCheckPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/jobs/schemas/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/permissions/schemas/permission.schema.ts\n            \n            variable\n            PermissonSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateUserCvDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/resumes/schemas/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/roles/schemas/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/subscribers/schemas/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/12)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : 1.8.1\n        \n            @nestjs/common : 9.4.0\n        \n            @nestjs/config : 2.3.1\n        \n            @nestjs/core : 9.4.0\n        \n            @nestjs/jwt : 10.0.3\n        \n            @nestjs/mapped-types : 1.2.2\n        \n            @nestjs/mongoose : 9.2.2\n        \n            @nestjs/passport : 9.0.3\n        \n            @nestjs/platform-express : 9.4.0\n        \n            @nestjs/schedule : 3.0.1\n        \n            @nestjs/swagger : 7.0.4\n        \n            @nestjs/terminus : 10.0.1\n        \n            @nestjs/throttler : ^5.1.2\n        \n            api-query-params : 5.4.0\n        \n            bcryptjs : 2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            cron : 2.4.3\n        \n            ejs : 3.1.9\n        \n            handlebars : 4.7.7\n        \n            helmet : ^7.1.0\n        \n            mongoose : 7.1.0\n        \n            ms : 2.1.3\n        \n            nodemailer : 6.9.3\n        \n            passport : 0.6.0\n        \n            passport-jwt : 4.0.1\n        \n            passport-local : 1.0.0\n        \n            reflect-metadata : 0.1.13\n        \n            rxjs : 7.2.0\n        \n            soft-delete-plugin-mongoose : 1.0.15\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCác bước cần làm để chạy dự án NestJS\n1. Cài đặt thư viện với câu lệnh: npm i\n2. Chạy dự án với câu lệnh: npm run dev\n=================\nTác giả: Nguyễn Thị Mai Anh \nHướng dẫn : Hỏi dân IT\nDự án : ITviec clone\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompanyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompanyModule\n\n\n\ncluster_CompanyModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCompanyModule\n\nCompanyModule\n\nAppModule -->\n\nCompanyModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nDatabasesModule -->\n\nUsersModule->DatabasesModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCompanyService\n\nCompanyService\n\nCompanyModule -->\n\nCompanyService->CompanyModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    29 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : https://hoidanit.com.vn/\n        \n            License : UNLICENSED\n        \n            Author : Hỏi Dân IT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubscriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/company/schema/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schemas/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schemas/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schemas/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schemas/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schemas/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            HR_ROLE   (src/.../sample.ts)\n                        \n                        \n                            INIT_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            PermissonSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            SkipCheckPermission   (src/.../customize.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"SUPER_ADMIN\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        HR_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"HR\"\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INIT_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    \"_id\": \"648ab415f4328bd3153ee211\",\n    \"name\": \"Get Company with paginate\",\n    \"apiPath\": \"/api/v1/companies\",\n    \"method\": \"GET\",\n    \"module\": \"COMPANIES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T06:47:49.369Z\",\n    \"updatedAt\": \"2023-06-15T06:54:05.131Z\",\n    \"__v\": 0,\n    \"updatedBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    }\n  },\n  {\n    \"_id\": \"648ab436f4328bd3153ee216\",\n    \"name\": \"Create Company\",\n    \"apiPath\": \"/api/v1/companies\",\n    \"method\": \"POST\",\n    \"module\": \"COMPANIES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T06:48:22.224Z\",\n    \"updatedAt\": \"2023-06-15T06:48:22.224Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ab4d5f4328bd3153ee21b\",\n    \"name\": \"Update Company\",\n    \"apiPath\": \"/api/v1/companies/:id\",\n    \"method\": \"PATCH\",\n    \"module\": \"COMPANIES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T06:51:01.241Z\",\n    \"updatedAt\": \"2023-06-15T06:51:01.241Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ab4ebf4328bd3153ee220\",\n    \"name\": \"Delete Company\",\n    \"apiPath\": \"/api/v1/companies/:id\",\n    \"method\": \"DELETE\",\n    \"module\": \"COMPANIES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T06:51:23.973Z\",\n    \"updatedAt\": \"2023-06-15T06:51:23.973Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ab5a8072f2a2ef910638d\",\n    \"name\": \"Get Company by id\",\n    \"apiPath\": \"/api/v1/companies/:id\",\n    \"method\": \"GET\",\n    \"module\": \"COMPANIES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T06:54:32.799Z\",\n    \"updatedAt\": \"2023-06-15T06:54:32.799Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ab6d3fa16b294212e4033\",\n    \"name\": \"Create User\",\n    \"apiPath\": \"/api/v1/users\",\n    \"method\": \"POST\",\n    \"module\": \"USERS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T06:59:31.898Z\",\n    \"updatedAt\": \"2023-06-15T06:59:31.898Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ab6e7fa16b294212e4038\",\n    \"name\": \"Get User by Id\",\n    \"apiPath\": \"/api/v1/users/:id\",\n    \"method\": \"GET\",\n    \"module\": \"USERS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T06:59:51.041Z\",\n    \"updatedAt\": \"2023-06-15T06:59:51.041Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ab6fdfa16b294212e403d\",\n    \"name\": \"Get User with paginate\",\n    \"apiPath\": \"/api/v1/users\",\n    \"method\": \"GET\",\n    \"module\": \"USERS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T07:00:13.364Z\",\n    \"updatedAt\": \"2023-06-15T07:00:13.364Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ab719fa16b294212e4042\",\n    \"name\": \"Update User\",\n    \"apiPath\": \"/api/v1/users/:id\",\n    \"method\": \"PATCH\",\n    \"module\": \"USERS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T07:00:41.934Z\",\n    \"updatedAt\": \"2023-06-15T07:00:41.934Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ab728fa16b294212e4047\",\n    \"name\": \"Delete User\",\n    \"apiPath\": \"/api/v1/users/:id\",\n    \"method\": \"DELETE\",\n    \"module\": \"USERS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T07:00:56.274Z\",\n    \"updatedAt\": \"2023-06-15T07:00:56.274Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ab750fa16b294212e404c\",\n    \"name\": \"Upload Single File\",\n    \"apiPath\": \"/api/v1/files/upload\",\n    \"method\": \"POST\",\n    \"module\": \"FILES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T07:01:36.923Z\",\n    \"updatedAt\": \"2023-06-15T07:01:36.923Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad488dafdb9754f40b846\",\n    \"name\": \"Create a Job\",\n    \"apiPath\": \"/api/v1/jobs\",\n    \"method\": \"POST\",\n    \"module\": \"JOBS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:06:16.508Z\",\n    \"updatedAt\": \"2023-06-15T09:06:16.508Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad499dafdb9754f40b84b\",\n    \"name\": \"Get a job by id\",\n    \"apiPath\": \"/api/v1/jobs/:id\",\n    \"method\": \"GET\",\n    \"module\": \"JOBS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:06:33.697Z\",\n    \"updatedAt\": \"2023-06-15T09:06:33.697Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad4a6dafdb9754f40b850\",\n    \"name\": \"Update a Job\",\n    \"apiPath\": \"/api/v1/jobs/:id\",\n    \"method\": \"PATCH\",\n    \"module\": \"JOBS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:06:46.085Z\",\n    \"updatedAt\": \"2023-06-15T09:06:46.085Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad4ccdafdb9754f40b859\",\n    \"name\": \"Get Job with paginate\",\n    \"apiPath\": \"/api/v1/jobs\",\n    \"method\": \"GET\",\n    \"module\": \"JOBS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:07:24.175Z\",\n    \"updatedAt\": \"2023-06-15T09:07:24.175Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad4d9dafdb9754f40b85e\",\n    \"name\": \"Delete a Job\",\n    \"apiPath\": \"/api/v1/jobs/:id\",\n    \"method\": \"DELETE\",\n    \"module\": \"JOBS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:07:37.896Z\",\n    \"updatedAt\": \"2023-06-15T09:07:37.896Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad4fedafdb9754f40b863\",\n    \"name\": \"Create a Resume\",\n    \"apiPath\": \"/api/v1/resumes\",\n    \"method\": \"POST\",\n    \"module\": \"RESUMES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:08:14.659Z\",\n    \"updatedAt\": \"2023-06-15T09:08:14.659Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad511dafdb9754f40b868\",\n    \"name\": \"Fetch resume with paginate\",\n    \"apiPath\": \"/api/v1/resumes\",\n    \"method\": \"GET\",\n    \"module\": \"RESUMES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:08:33.395Z\",\n    \"updatedAt\": \"2023-06-15T09:08:33.395Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad522dafdb9754f40b86d\",\n    \"name\": \"Get resume by id\",\n    \"apiPath\": \"/api/v1/resumes/:id\",\n    \"method\": \"GET\",\n    \"module\": \"RESUMES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:08:50.801Z\",\n    \"updatedAt\": \"2023-06-15T09:08:50.801Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad53bdafdb9754f40b872\",\n    \"name\": \"Delete a resume\",\n    \"apiPath\": \"/api/v1/resumes/:id\",\n    \"method\": \"DELETE\",\n    \"module\": \"RESUMES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:09:15.785Z\",\n    \"updatedAt\": \"2023-06-15T09:09:15.785Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad555dafdb9754f40b877\",\n    \"name\": \"Update resume status\",\n    \"apiPath\": \"/api/v1/resumes/:id\",\n    \"method\": \"PATCH\",\n    \"module\": \"RESUMES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:09:41.694Z\",\n    \"updatedAt\": \"2023-06-15T09:09:41.694Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad56ddafdb9754f40b87c\",\n    \"name\": \"Fetch resumes by user\",\n    \"apiPath\": \"/api/v1/resumes/by-user\",\n    \"method\": \"POST\",\n    \"module\": \"RESUMES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:10:05.961Z\",\n    \"updatedAt\": \"2023-06-15T09:10:05.961Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad59adafdb9754f40b881\",\n    \"name\": \"Create a permission\",\n    \"apiPath\": \"/api/v1/permissions\",\n    \"method\": \"POST\",\n    \"module\": \"PERMISSIONS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:10:50.946Z\",\n    \"updatedAt\": \"2023-06-15T09:10:50.946Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad5aedafdb9754f40b886\",\n    \"name\": \"Fetch Permission with paginate\",\n    \"apiPath\": \"/api/v1/permissions\",\n    \"method\": \"GET\",\n    \"module\": \"PERMISSIONS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:11:10.914Z\",\n    \"updatedAt\": \"2023-06-15T09:11:10.914Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad5c5dafdb9754f40b88b\",\n    \"name\": \"Fetch permission by id\",\n    \"apiPath\": \"/api/v1/permissions/:id\",\n    \"method\": \"GET\",\n    \"module\": \"PERMISSIONS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:11:33.234Z\",\n    \"updatedAt\": \"2023-06-15T09:11:33.234Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad5d4dafdb9754f40b890\",\n    \"name\": \"Update a permission\",\n    \"apiPath\": \"/api/v1/permissions/:id\",\n    \"method\": \"PATCH\",\n    \"module\": \"PERMISSIONS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:11:48.081Z\",\n    \"updatedAt\": \"2023-06-15T09:11:48.081Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad5ebdafdb9754f40b895\",\n    \"name\": \"Delete a permission\",\n    \"apiPath\": \"/api/v1/permissions/:id\",\n    \"method\": \"DELETE\",\n    \"module\": \"PERMISSIONS\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:12:11.323Z\",\n    \"updatedAt\": \"2023-06-15T09:12:11.323Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad613dafdb9754f40b89a\",\n    \"name\": \"Create Role\",\n    \"apiPath\": \"/api/v1/roles\",\n    \"method\": \"POST\",\n    \"module\": \"ROLES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:12:51.974Z\",\n    \"updatedAt\": \"2023-06-15T09:12:51.974Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad622dafdb9754f40b89f\",\n    \"name\": \"Fetch roles with paginate\",\n    \"apiPath\": \"/api/v1/roles\",\n    \"method\": \"GET\",\n    \"module\": \"ROLES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:13:06.618Z\",\n    \"updatedAt\": \"2023-06-15T09:13:06.618Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad630dafdb9754f40b8a6\",\n    \"name\": \"Fetch role by id\",\n    \"apiPath\": \"/api/v1/roles/:id\",\n    \"method\": \"GET\",\n    \"module\": \"ROLES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:13:20.853Z\",\n    \"updatedAt\": \"2023-06-15T09:13:20.853Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad640dafdb9754f40b8ab\",\n    \"name\": \"Update Role\",\n    \"apiPath\": \"/api/v1/roles/:id\",\n    \"method\": \"PATCH\",\n    \"module\": \"ROLES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:13:36.836Z\",\n    \"updatedAt\": \"2023-06-15T09:13:36.836Z\",\n    \"__v\": 0\n  },\n  {\n    \"_id\": \"648ad650dafdb9754f40b8b0\",\n    \"name\": \"Delete a Role\",\n    \"apiPath\": \"/api/v1/roles/:id\",\n    \"method\": \"DELETE\",\n    \"module\": \"ROLES\",\n    \"createdBy\": {\n      \"_id\": \"6620c85e912ed5b315eb5ebf\",\n      \"email\": \"nguyenmaianh@gmail.com\"\n    },\n    \"isDeleted\": false,\n    \"deletedAt\": null,\n    \"createdAt\": \"2023-06-15T09:13:52.798Z\",\n    \"updatedAt\": \"2023-06-15T09:13:52.798Z\",\n    \"__v\": 0\n  }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"NORMAL_USER\"\n                    \n                \n\n\n        \n    \n\n    src/company/schema/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublicPermission'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipCheckPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schemas/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schemas/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissonSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schemas/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schemas/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schemas/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schemas/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
